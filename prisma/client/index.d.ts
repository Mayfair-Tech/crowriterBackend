
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model FreelancerApplication
 * 
 */
export type FreelancerApplication = $Result.DefaultSelection<Prisma.$FreelancerApplicationPayload>
/**
 * Model Order
 * 
 */
export type Order = $Result.DefaultSelection<Prisma.$OrderPayload>
/**
 * Model Bids
 * 
 */
export type Bids = $Result.DefaultSelection<Prisma.$BidsPayload>
/**
 * Model Assignment
 * 
 */
export type Assignment = $Result.DefaultSelection<Prisma.$AssignmentPayload>
/**
 * Model SubmittedJobs
 * 
 */
export type SubmittedJobs = $Result.DefaultSelection<Prisma.$SubmittedJobsPayload>
/**
 * Model CancelledJobs
 * 
 */
export type CancelledJobs = $Result.DefaultSelection<Prisma.$CancelledJobsPayload>
/**
 * Model Invoice
 * 
 */
export type Invoice = $Result.DefaultSelection<Prisma.$InvoicePayload>
/**
 * Model Payment
 * 
 */
export type Payment = $Result.DefaultSelection<Prisma.$PaymentPayload>
/**
 * Model Fines
 * 
 */
export type Fines = $Result.DefaultSelection<Prisma.$FinesPayload>
/**
 * Model Review
 * 
 */
export type Review = $Result.DefaultSelection<Prisma.$ReviewPayload>
/**
 * Model Notification
 * 
 */
export type Notification = $Result.DefaultSelection<Prisma.$NotificationPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const Role: {
  MANAGER: 'MANAGER',
  FREELANCER: 'FREELANCER',
  ADMIN: 'ADMIN'
};

export type Role = (typeof Role)[keyof typeof Role]


export const ApplicationStatus: {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  DECLINED: 'DECLINED'
};

export type ApplicationStatus = (typeof ApplicationStatus)[keyof typeof ApplicationStatus]


export const OrderStatus: {
  PENDING: 'PENDING',
  ASSIGNED: 'ASSIGNED',
  ACCEPTED: 'ACCEPTED',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED',
  BIDDED: 'BIDDED'
};

export type OrderStatus = (typeof OrderStatus)[keyof typeof OrderStatus]


export const ModeOfPayment: {
  MPESA: 'MPESA',
  CREDIT_CARD: 'CREDIT_CARD',
  BANK_TRANSFER: 'BANK_TRANSFER',
  PAYPAL: 'PAYPAL',
  CASH: 'CASH',
  CHEQUE: 'CHEQUE',
  OTHER: 'OTHER'
};

export type ModeOfPayment = (typeof ModeOfPayment)[keyof typeof ModeOfPayment]


export const NotificationType: {
  ORDER: 'ORDER',
  REVIEW: 'REVIEW',
  FINE: 'FINE',
  INVOICE: 'INVOICE',
  PAYMENT: 'PAYMENT',
  OTHER: 'OTHER'
};

export type NotificationType = (typeof NotificationType)[keyof typeof NotificationType]

}

export type Role = $Enums.Role

export const Role: typeof $Enums.Role

export type ApplicationStatus = $Enums.ApplicationStatus

export const ApplicationStatus: typeof $Enums.ApplicationStatus

export type OrderStatus = $Enums.OrderStatus

export const OrderStatus: typeof $Enums.OrderStatus

export type ModeOfPayment = $Enums.ModeOfPayment

export const ModeOfPayment: typeof $Enums.ModeOfPayment

export type NotificationType = $Enums.NotificationType

export const NotificationType: typeof $Enums.NotificationType

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  /**
   * Gives access to the client metrics in json or prometheus format.
   * 
   * @example
   * ```
   * const metrics = await prisma.$metrics.json()
   * // or
   * const metrics = await prisma.$metrics.prometheus()
   * ```
   */
  readonly $metrics: runtime.MetricsClient
  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs>;

  /**
   * `prisma.freelancerApplication`: Exposes CRUD operations for the **FreelancerApplication** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FreelancerApplications
    * const freelancerApplications = await prisma.freelancerApplication.findMany()
    * ```
    */
  get freelancerApplication(): Prisma.FreelancerApplicationDelegate<ExtArgs>;

  /**
   * `prisma.order`: Exposes CRUD operations for the **Order** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Orders
    * const orders = await prisma.order.findMany()
    * ```
    */
  get order(): Prisma.OrderDelegate<ExtArgs>;

  /**
   * `prisma.bids`: Exposes CRUD operations for the **Bids** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Bids
    * const bids = await prisma.bids.findMany()
    * ```
    */
  get bids(): Prisma.BidsDelegate<ExtArgs>;

  /**
   * `prisma.assignment`: Exposes CRUD operations for the **Assignment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Assignments
    * const assignments = await prisma.assignment.findMany()
    * ```
    */
  get assignment(): Prisma.AssignmentDelegate<ExtArgs>;

  /**
   * `prisma.submittedJobs`: Exposes CRUD operations for the **SubmittedJobs** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SubmittedJobs
    * const submittedJobs = await prisma.submittedJobs.findMany()
    * ```
    */
  get submittedJobs(): Prisma.SubmittedJobsDelegate<ExtArgs>;

  /**
   * `prisma.cancelledJobs`: Exposes CRUD operations for the **CancelledJobs** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CancelledJobs
    * const cancelledJobs = await prisma.cancelledJobs.findMany()
    * ```
    */
  get cancelledJobs(): Prisma.CancelledJobsDelegate<ExtArgs>;

  /**
   * `prisma.invoice`: Exposes CRUD operations for the **Invoice** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Invoices
    * const invoices = await prisma.invoice.findMany()
    * ```
    */
  get invoice(): Prisma.InvoiceDelegate<ExtArgs>;

  /**
   * `prisma.payment`: Exposes CRUD operations for the **Payment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Payments
    * const payments = await prisma.payment.findMany()
    * ```
    */
  get payment(): Prisma.PaymentDelegate<ExtArgs>;

  /**
   * `prisma.fines`: Exposes CRUD operations for the **Fines** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Fines
    * const fines = await prisma.fines.findMany()
    * ```
    */
  get fines(): Prisma.FinesDelegate<ExtArgs>;

  /**
   * `prisma.review`: Exposes CRUD operations for the **Review** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reviews
    * const reviews = await prisma.review.findMany()
    * ```
    */
  get review(): Prisma.ReviewDelegate<ExtArgs>;

  /**
   * `prisma.notification`: Exposes CRUD operations for the **Notification** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Notifications
    * const notifications = await prisma.notification.findMany()
    * ```
    */
  get notification(): Prisma.NotificationDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.16.2
   * Query Engine version: 34ace0eb2704183d2c05b60b52fba5c43c13f303
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    User: 'User',
    FreelancerApplication: 'FreelancerApplication',
    Order: 'Order',
    Bids: 'Bids',
    Assignment: 'Assignment',
    SubmittedJobs: 'SubmittedJobs',
    CancelledJobs: 'CancelledJobs',
    Invoice: 'Invoice',
    Payment: 'Payment',
    Fines: 'Fines',
    Review: 'Review',
    Notification: 'Notification'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "user" | "freelancerApplication" | "order" | "bids" | "assignment" | "submittedJobs" | "cancelledJobs" | "invoice" | "payment" | "fines" | "review" | "notification"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      FreelancerApplication: {
        payload: Prisma.$FreelancerApplicationPayload<ExtArgs>
        fields: Prisma.FreelancerApplicationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FreelancerApplicationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FreelancerApplicationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FreelancerApplicationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FreelancerApplicationPayload>
          }
          findFirst: {
            args: Prisma.FreelancerApplicationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FreelancerApplicationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FreelancerApplicationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FreelancerApplicationPayload>
          }
          findMany: {
            args: Prisma.FreelancerApplicationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FreelancerApplicationPayload>[]
          }
          create: {
            args: Prisma.FreelancerApplicationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FreelancerApplicationPayload>
          }
          createMany: {
            args: Prisma.FreelancerApplicationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FreelancerApplicationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FreelancerApplicationPayload>[]
          }
          delete: {
            args: Prisma.FreelancerApplicationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FreelancerApplicationPayload>
          }
          update: {
            args: Prisma.FreelancerApplicationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FreelancerApplicationPayload>
          }
          deleteMany: {
            args: Prisma.FreelancerApplicationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FreelancerApplicationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.FreelancerApplicationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FreelancerApplicationPayload>
          }
          aggregate: {
            args: Prisma.FreelancerApplicationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFreelancerApplication>
          }
          groupBy: {
            args: Prisma.FreelancerApplicationGroupByArgs<ExtArgs>
            result: $Utils.Optional<FreelancerApplicationGroupByOutputType>[]
          }
          count: {
            args: Prisma.FreelancerApplicationCountArgs<ExtArgs>
            result: $Utils.Optional<FreelancerApplicationCountAggregateOutputType> | number
          }
        }
      }
      Order: {
        payload: Prisma.$OrderPayload<ExtArgs>
        fields: Prisma.OrderFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrderFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrderFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          findFirst: {
            args: Prisma.OrderFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrderFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          findMany: {
            args: Prisma.OrderFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>[]
          }
          create: {
            args: Prisma.OrderCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          createMany: {
            args: Prisma.OrderCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrderCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>[]
          }
          delete: {
            args: Prisma.OrderDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          update: {
            args: Prisma.OrderUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          deleteMany: {
            args: Prisma.OrderDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrderUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.OrderUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          aggregate: {
            args: Prisma.OrderAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrder>
          }
          groupBy: {
            args: Prisma.OrderGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrderGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrderCountArgs<ExtArgs>
            result: $Utils.Optional<OrderCountAggregateOutputType> | number
          }
        }
      }
      Bids: {
        payload: Prisma.$BidsPayload<ExtArgs>
        fields: Prisma.BidsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BidsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BidsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BidsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BidsPayload>
          }
          findFirst: {
            args: Prisma.BidsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BidsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BidsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BidsPayload>
          }
          findMany: {
            args: Prisma.BidsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BidsPayload>[]
          }
          create: {
            args: Prisma.BidsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BidsPayload>
          }
          createMany: {
            args: Prisma.BidsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BidsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BidsPayload>[]
          }
          delete: {
            args: Prisma.BidsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BidsPayload>
          }
          update: {
            args: Prisma.BidsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BidsPayload>
          }
          deleteMany: {
            args: Prisma.BidsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BidsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.BidsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BidsPayload>
          }
          aggregate: {
            args: Prisma.BidsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBids>
          }
          groupBy: {
            args: Prisma.BidsGroupByArgs<ExtArgs>
            result: $Utils.Optional<BidsGroupByOutputType>[]
          }
          count: {
            args: Prisma.BidsCountArgs<ExtArgs>
            result: $Utils.Optional<BidsCountAggregateOutputType> | number
          }
        }
      }
      Assignment: {
        payload: Prisma.$AssignmentPayload<ExtArgs>
        fields: Prisma.AssignmentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AssignmentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssignmentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AssignmentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssignmentPayload>
          }
          findFirst: {
            args: Prisma.AssignmentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssignmentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AssignmentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssignmentPayload>
          }
          findMany: {
            args: Prisma.AssignmentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssignmentPayload>[]
          }
          create: {
            args: Prisma.AssignmentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssignmentPayload>
          }
          createMany: {
            args: Prisma.AssignmentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AssignmentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssignmentPayload>[]
          }
          delete: {
            args: Prisma.AssignmentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssignmentPayload>
          }
          update: {
            args: Prisma.AssignmentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssignmentPayload>
          }
          deleteMany: {
            args: Prisma.AssignmentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AssignmentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AssignmentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssignmentPayload>
          }
          aggregate: {
            args: Prisma.AssignmentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAssignment>
          }
          groupBy: {
            args: Prisma.AssignmentGroupByArgs<ExtArgs>
            result: $Utils.Optional<AssignmentGroupByOutputType>[]
          }
          count: {
            args: Prisma.AssignmentCountArgs<ExtArgs>
            result: $Utils.Optional<AssignmentCountAggregateOutputType> | number
          }
        }
      }
      SubmittedJobs: {
        payload: Prisma.$SubmittedJobsPayload<ExtArgs>
        fields: Prisma.SubmittedJobsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SubmittedJobsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubmittedJobsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SubmittedJobsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubmittedJobsPayload>
          }
          findFirst: {
            args: Prisma.SubmittedJobsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubmittedJobsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SubmittedJobsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubmittedJobsPayload>
          }
          findMany: {
            args: Prisma.SubmittedJobsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubmittedJobsPayload>[]
          }
          create: {
            args: Prisma.SubmittedJobsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubmittedJobsPayload>
          }
          createMany: {
            args: Prisma.SubmittedJobsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SubmittedJobsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubmittedJobsPayload>[]
          }
          delete: {
            args: Prisma.SubmittedJobsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubmittedJobsPayload>
          }
          update: {
            args: Prisma.SubmittedJobsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubmittedJobsPayload>
          }
          deleteMany: {
            args: Prisma.SubmittedJobsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SubmittedJobsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SubmittedJobsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubmittedJobsPayload>
          }
          aggregate: {
            args: Prisma.SubmittedJobsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSubmittedJobs>
          }
          groupBy: {
            args: Prisma.SubmittedJobsGroupByArgs<ExtArgs>
            result: $Utils.Optional<SubmittedJobsGroupByOutputType>[]
          }
          count: {
            args: Prisma.SubmittedJobsCountArgs<ExtArgs>
            result: $Utils.Optional<SubmittedJobsCountAggregateOutputType> | number
          }
        }
      }
      CancelledJobs: {
        payload: Prisma.$CancelledJobsPayload<ExtArgs>
        fields: Prisma.CancelledJobsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CancelledJobsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CancelledJobsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CancelledJobsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CancelledJobsPayload>
          }
          findFirst: {
            args: Prisma.CancelledJobsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CancelledJobsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CancelledJobsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CancelledJobsPayload>
          }
          findMany: {
            args: Prisma.CancelledJobsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CancelledJobsPayload>[]
          }
          create: {
            args: Prisma.CancelledJobsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CancelledJobsPayload>
          }
          createMany: {
            args: Prisma.CancelledJobsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CancelledJobsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CancelledJobsPayload>[]
          }
          delete: {
            args: Prisma.CancelledJobsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CancelledJobsPayload>
          }
          update: {
            args: Prisma.CancelledJobsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CancelledJobsPayload>
          }
          deleteMany: {
            args: Prisma.CancelledJobsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CancelledJobsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CancelledJobsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CancelledJobsPayload>
          }
          aggregate: {
            args: Prisma.CancelledJobsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCancelledJobs>
          }
          groupBy: {
            args: Prisma.CancelledJobsGroupByArgs<ExtArgs>
            result: $Utils.Optional<CancelledJobsGroupByOutputType>[]
          }
          count: {
            args: Prisma.CancelledJobsCountArgs<ExtArgs>
            result: $Utils.Optional<CancelledJobsCountAggregateOutputType> | number
          }
        }
      }
      Invoice: {
        payload: Prisma.$InvoicePayload<ExtArgs>
        fields: Prisma.InvoiceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.InvoiceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.InvoiceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>
          }
          findFirst: {
            args: Prisma.InvoiceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.InvoiceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>
          }
          findMany: {
            args: Prisma.InvoiceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>[]
          }
          create: {
            args: Prisma.InvoiceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>
          }
          createMany: {
            args: Prisma.InvoiceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.InvoiceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>[]
          }
          delete: {
            args: Prisma.InvoiceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>
          }
          update: {
            args: Prisma.InvoiceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>
          }
          deleteMany: {
            args: Prisma.InvoiceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.InvoiceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.InvoiceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvoicePayload>
          }
          aggregate: {
            args: Prisma.InvoiceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInvoice>
          }
          groupBy: {
            args: Prisma.InvoiceGroupByArgs<ExtArgs>
            result: $Utils.Optional<InvoiceGroupByOutputType>[]
          }
          count: {
            args: Prisma.InvoiceCountArgs<ExtArgs>
            result: $Utils.Optional<InvoiceCountAggregateOutputType> | number
          }
        }
      }
      Payment: {
        payload: Prisma.$PaymentPayload<ExtArgs>
        fields: Prisma.PaymentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PaymentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PaymentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          findFirst: {
            args: Prisma.PaymentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PaymentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          findMany: {
            args: Prisma.PaymentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>[]
          }
          create: {
            args: Prisma.PaymentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          createMany: {
            args: Prisma.PaymentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PaymentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>[]
          }
          delete: {
            args: Prisma.PaymentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          update: {
            args: Prisma.PaymentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          deleteMany: {
            args: Prisma.PaymentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PaymentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PaymentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          aggregate: {
            args: Prisma.PaymentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePayment>
          }
          groupBy: {
            args: Prisma.PaymentGroupByArgs<ExtArgs>
            result: $Utils.Optional<PaymentGroupByOutputType>[]
          }
          count: {
            args: Prisma.PaymentCountArgs<ExtArgs>
            result: $Utils.Optional<PaymentCountAggregateOutputType> | number
          }
        }
      }
      Fines: {
        payload: Prisma.$FinesPayload<ExtArgs>
        fields: Prisma.FinesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FinesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FinesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinesPayload>
          }
          findFirst: {
            args: Prisma.FinesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FinesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinesPayload>
          }
          findMany: {
            args: Prisma.FinesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinesPayload>[]
          }
          create: {
            args: Prisma.FinesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinesPayload>
          }
          createMany: {
            args: Prisma.FinesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FinesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinesPayload>[]
          }
          delete: {
            args: Prisma.FinesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinesPayload>
          }
          update: {
            args: Prisma.FinesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinesPayload>
          }
          deleteMany: {
            args: Prisma.FinesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FinesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.FinesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinesPayload>
          }
          aggregate: {
            args: Prisma.FinesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFines>
          }
          groupBy: {
            args: Prisma.FinesGroupByArgs<ExtArgs>
            result: $Utils.Optional<FinesGroupByOutputType>[]
          }
          count: {
            args: Prisma.FinesCountArgs<ExtArgs>
            result: $Utils.Optional<FinesCountAggregateOutputType> | number
          }
        }
      }
      Review: {
        payload: Prisma.$ReviewPayload<ExtArgs>
        fields: Prisma.ReviewFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReviewFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReviewFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          findFirst: {
            args: Prisma.ReviewFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReviewFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          findMany: {
            args: Prisma.ReviewFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>[]
          }
          create: {
            args: Prisma.ReviewCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          createMany: {
            args: Prisma.ReviewCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ReviewCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>[]
          }
          delete: {
            args: Prisma.ReviewDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          update: {
            args: Prisma.ReviewUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          deleteMany: {
            args: Prisma.ReviewDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReviewUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ReviewUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          aggregate: {
            args: Prisma.ReviewAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReview>
          }
          groupBy: {
            args: Prisma.ReviewGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReviewGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReviewCountArgs<ExtArgs>
            result: $Utils.Optional<ReviewCountAggregateOutputType> | number
          }
        }
      }
      Notification: {
        payload: Prisma.$NotificationPayload<ExtArgs>
        fields: Prisma.NotificationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.NotificationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.NotificationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          findFirst: {
            args: Prisma.NotificationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.NotificationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          findMany: {
            args: Prisma.NotificationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>[]
          }
          create: {
            args: Prisma.NotificationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          createMany: {
            args: Prisma.NotificationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.NotificationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>[]
          }
          delete: {
            args: Prisma.NotificationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          update: {
            args: Prisma.NotificationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          deleteMany: {
            args: Prisma.NotificationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.NotificationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.NotificationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          aggregate: {
            args: Prisma.NotificationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNotification>
          }
          groupBy: {
            args: Prisma.NotificationGroupByArgs<ExtArgs>
            result: $Utils.Optional<NotificationGroupByOutputType>[]
          }
          count: {
            args: Prisma.NotificationCountArgs<ExtArgs>
            result: $Utils.Optional<NotificationCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Instance of a Driver Adapter, e.g., like one provided by `@prisma/adapter-planetscale`
     */
    adapter?: runtime.DriverAdapter | null
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    orders: number
    bids: number
    assignments: number
    SubmittedJobs: number
    cancelledJobs: number
    invoices: number
    payments: number
    fines: number
    reviews: number
    reviewed: number
    notifications: number
    freelancerApplications: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders?: boolean | UserCountOutputTypeCountOrdersArgs
    bids?: boolean | UserCountOutputTypeCountBidsArgs
    assignments?: boolean | UserCountOutputTypeCountAssignmentsArgs
    SubmittedJobs?: boolean | UserCountOutputTypeCountSubmittedJobsArgs
    cancelledJobs?: boolean | UserCountOutputTypeCountCancelledJobsArgs
    invoices?: boolean | UserCountOutputTypeCountInvoicesArgs
    payments?: boolean | UserCountOutputTypeCountPaymentsArgs
    fines?: boolean | UserCountOutputTypeCountFinesArgs
    reviews?: boolean | UserCountOutputTypeCountReviewsArgs
    reviewed?: boolean | UserCountOutputTypeCountReviewedArgs
    notifications?: boolean | UserCountOutputTypeCountNotificationsArgs
    freelancerApplications?: boolean | UserCountOutputTypeCountFreelancerApplicationsArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountBidsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BidsWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAssignmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AssignmentWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSubmittedJobsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SubmittedJobsWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCancelledJobsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CancelledJobsWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountInvoicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvoiceWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPaymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFinesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FinesWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReviewWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReviewedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReviewWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountNotificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFreelancerApplicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FreelancerApplicationWhereInput
  }


  /**
   * Count Type OrderCountOutputType
   */

  export type OrderCountOutputType = {
    bids: number
    assignments: number
    SubmittedJobs: number
    cancelledJobs: number
    fines: number
    reviews: number
    notifications: number
  }

  export type OrderCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    bids?: boolean | OrderCountOutputTypeCountBidsArgs
    assignments?: boolean | OrderCountOutputTypeCountAssignmentsArgs
    SubmittedJobs?: boolean | OrderCountOutputTypeCountSubmittedJobsArgs
    cancelledJobs?: boolean | OrderCountOutputTypeCountCancelledJobsArgs
    fines?: boolean | OrderCountOutputTypeCountFinesArgs
    reviews?: boolean | OrderCountOutputTypeCountReviewsArgs
    notifications?: boolean | OrderCountOutputTypeCountNotificationsArgs
  }

  // Custom InputTypes
  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderCountOutputType
     */
    select?: OrderCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountBidsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BidsWhereInput
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountAssignmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AssignmentWhereInput
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountSubmittedJobsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SubmittedJobsWhereInput
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountCancelledJobsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CancelledJobsWhereInput
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountFinesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FinesWhereInput
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountReviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReviewWhereInput
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountNotificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
  }


  /**
   * Count Type InvoiceCountOutputType
   */

  export type InvoiceCountOutputType = {
    orders: number
    payments: number
    fines: number
    reviews: number
  }

  export type InvoiceCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders?: boolean | InvoiceCountOutputTypeCountOrdersArgs
    payments?: boolean | InvoiceCountOutputTypeCountPaymentsArgs
    fines?: boolean | InvoiceCountOutputTypeCountFinesArgs
    reviews?: boolean | InvoiceCountOutputTypeCountReviewsArgs
  }

  // Custom InputTypes
  /**
   * InvoiceCountOutputType without action
   */
  export type InvoiceCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InvoiceCountOutputType
     */
    select?: InvoiceCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * InvoiceCountOutputType without action
   */
  export type InvoiceCountOutputTypeCountOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }

  /**
   * InvoiceCountOutputType without action
   */
  export type InvoiceCountOutputTypeCountPaymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentWhereInput
  }

  /**
   * InvoiceCountOutputType without action
   */
  export type InvoiceCountOutputTypeCountFinesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FinesWhereInput
  }

  /**
   * InvoiceCountOutputType without action
   */
  export type InvoiceCountOutputTypeCountReviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReviewWhereInput
  }


  /**
   * Models
   */

  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    fname: string | null
    lname: string | null
    email: string | null
    password: string | null
    role: $Enums.Role | null
    profilePic: string | null
    refreshToken: string | null
    refreshTokenExp: Date | null
    online: boolean | null
    active: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    experience: string | null
    leadershipStyle: string | null
    teamSize: string | null
    achievements: string | null
    professionalDevelopment: string | null
    gender: string | null
    country: string | null
    city: string | null
    altEmail: string | null
    phone: string | null
    altPhone: string | null
    highestDegree: string | null
    citationStyles: string | null
    languages: string | null
    disciplines: string | null
    specialization: string | null
    additionalSoftware: string | null
    aboutMe: string | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    fname: string | null
    lname: string | null
    email: string | null
    password: string | null
    role: $Enums.Role | null
    profilePic: string | null
    refreshToken: string | null
    refreshTokenExp: Date | null
    online: boolean | null
    active: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    experience: string | null
    leadershipStyle: string | null
    teamSize: string | null
    achievements: string | null
    professionalDevelopment: string | null
    gender: string | null
    country: string | null
    city: string | null
    altEmail: string | null
    phone: string | null
    altPhone: string | null
    highestDegree: string | null
    citationStyles: string | null
    languages: string | null
    disciplines: string | null
    specialization: string | null
    additionalSoftware: string | null
    aboutMe: string | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    fname: number
    lname: number
    email: number
    password: number
    role: number
    profilePic: number
    refreshToken: number
    refreshTokenExp: number
    online: number
    active: number
    createdAt: number
    updatedAt: number
    experience: number
    leadershipStyle: number
    teamSize: number
    achievements: number
    professionalDevelopment: number
    gender: number
    country: number
    city: number
    altEmail: number
    phone: number
    altPhone: number
    highestDegree: number
    citationStyles: number
    languages: number
    disciplines: number
    specialization: number
    additionalSoftware: number
    aboutMe: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    id?: true
    fname?: true
    lname?: true
    email?: true
    password?: true
    role?: true
    profilePic?: true
    refreshToken?: true
    refreshTokenExp?: true
    online?: true
    active?: true
    createdAt?: true
    updatedAt?: true
    experience?: true
    leadershipStyle?: true
    teamSize?: true
    achievements?: true
    professionalDevelopment?: true
    gender?: true
    country?: true
    city?: true
    altEmail?: true
    phone?: true
    altPhone?: true
    highestDegree?: true
    citationStyles?: true
    languages?: true
    disciplines?: true
    specialization?: true
    additionalSoftware?: true
    aboutMe?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    fname?: true
    lname?: true
    email?: true
    password?: true
    role?: true
    profilePic?: true
    refreshToken?: true
    refreshTokenExp?: true
    online?: true
    active?: true
    createdAt?: true
    updatedAt?: true
    experience?: true
    leadershipStyle?: true
    teamSize?: true
    achievements?: true
    professionalDevelopment?: true
    gender?: true
    country?: true
    city?: true
    altEmail?: true
    phone?: true
    altPhone?: true
    highestDegree?: true
    citationStyles?: true
    languages?: true
    disciplines?: true
    specialization?: true
    additionalSoftware?: true
    aboutMe?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    fname?: true
    lname?: true
    email?: true
    password?: true
    role?: true
    profilePic?: true
    refreshToken?: true
    refreshTokenExp?: true
    online?: true
    active?: true
    createdAt?: true
    updatedAt?: true
    experience?: true
    leadershipStyle?: true
    teamSize?: true
    achievements?: true
    professionalDevelopment?: true
    gender?: true
    country?: true
    city?: true
    altEmail?: true
    phone?: true
    altPhone?: true
    highestDegree?: true
    citationStyles?: true
    languages?: true
    disciplines?: true
    specialization?: true
    additionalSoftware?: true
    aboutMe?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    fname: string
    lname: string
    email: string
    password: string
    role: $Enums.Role | null
    profilePic: string | null
    refreshToken: string | null
    refreshTokenExp: Date | null
    online: boolean
    active: boolean
    createdAt: Date
    updatedAt: Date
    experience: string | null
    leadershipStyle: string | null
    teamSize: string | null
    achievements: string | null
    professionalDevelopment: string | null
    gender: string | null
    country: string | null
    city: string | null
    altEmail: string | null
    phone: string | null
    altPhone: string | null
    highestDegree: string | null
    citationStyles: string | null
    languages: string | null
    disciplines: string | null
    specialization: string | null
    additionalSoftware: string | null
    aboutMe: string | null
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fname?: boolean
    lname?: boolean
    email?: boolean
    password?: boolean
    role?: boolean
    profilePic?: boolean
    refreshToken?: boolean
    refreshTokenExp?: boolean
    online?: boolean
    active?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    experience?: boolean
    leadershipStyle?: boolean
    teamSize?: boolean
    achievements?: boolean
    professionalDevelopment?: boolean
    gender?: boolean
    country?: boolean
    city?: boolean
    altEmail?: boolean
    phone?: boolean
    altPhone?: boolean
    highestDegree?: boolean
    citationStyles?: boolean
    languages?: boolean
    disciplines?: boolean
    specialization?: boolean
    additionalSoftware?: boolean
    aboutMe?: boolean
    orders?: boolean | User$ordersArgs<ExtArgs>
    bids?: boolean | User$bidsArgs<ExtArgs>
    assignments?: boolean | User$assignmentsArgs<ExtArgs>
    SubmittedJobs?: boolean | User$SubmittedJobsArgs<ExtArgs>
    cancelledJobs?: boolean | User$cancelledJobsArgs<ExtArgs>
    invoices?: boolean | User$invoicesArgs<ExtArgs>
    payments?: boolean | User$paymentsArgs<ExtArgs>
    fines?: boolean | User$finesArgs<ExtArgs>
    reviews?: boolean | User$reviewsArgs<ExtArgs>
    reviewed?: boolean | User$reviewedArgs<ExtArgs>
    notifications?: boolean | User$notificationsArgs<ExtArgs>
    freelancerApplications?: boolean | User$freelancerApplicationsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fname?: boolean
    lname?: boolean
    email?: boolean
    password?: boolean
    role?: boolean
    profilePic?: boolean
    refreshToken?: boolean
    refreshTokenExp?: boolean
    online?: boolean
    active?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    experience?: boolean
    leadershipStyle?: boolean
    teamSize?: boolean
    achievements?: boolean
    professionalDevelopment?: boolean
    gender?: boolean
    country?: boolean
    city?: boolean
    altEmail?: boolean
    phone?: boolean
    altPhone?: boolean
    highestDegree?: boolean
    citationStyles?: boolean
    languages?: boolean
    disciplines?: boolean
    specialization?: boolean
    additionalSoftware?: boolean
    aboutMe?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    fname?: boolean
    lname?: boolean
    email?: boolean
    password?: boolean
    role?: boolean
    profilePic?: boolean
    refreshToken?: boolean
    refreshTokenExp?: boolean
    online?: boolean
    active?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    experience?: boolean
    leadershipStyle?: boolean
    teamSize?: boolean
    achievements?: boolean
    professionalDevelopment?: boolean
    gender?: boolean
    country?: boolean
    city?: boolean
    altEmail?: boolean
    phone?: boolean
    altPhone?: boolean
    highestDegree?: boolean
    citationStyles?: boolean
    languages?: boolean
    disciplines?: boolean
    specialization?: boolean
    additionalSoftware?: boolean
    aboutMe?: boolean
  }

  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders?: boolean | User$ordersArgs<ExtArgs>
    bids?: boolean | User$bidsArgs<ExtArgs>
    assignments?: boolean | User$assignmentsArgs<ExtArgs>
    SubmittedJobs?: boolean | User$SubmittedJobsArgs<ExtArgs>
    cancelledJobs?: boolean | User$cancelledJobsArgs<ExtArgs>
    invoices?: boolean | User$invoicesArgs<ExtArgs>
    payments?: boolean | User$paymentsArgs<ExtArgs>
    fines?: boolean | User$finesArgs<ExtArgs>
    reviews?: boolean | User$reviewsArgs<ExtArgs>
    reviewed?: boolean | User$reviewedArgs<ExtArgs>
    notifications?: boolean | User$notificationsArgs<ExtArgs>
    freelancerApplications?: boolean | User$freelancerApplicationsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      orders: Prisma.$OrderPayload<ExtArgs>[]
      bids: Prisma.$BidsPayload<ExtArgs>[]
      assignments: Prisma.$AssignmentPayload<ExtArgs>[]
      SubmittedJobs: Prisma.$SubmittedJobsPayload<ExtArgs>[]
      cancelledJobs: Prisma.$CancelledJobsPayload<ExtArgs>[]
      invoices: Prisma.$InvoicePayload<ExtArgs>[]
      payments: Prisma.$PaymentPayload<ExtArgs>[]
      fines: Prisma.$FinesPayload<ExtArgs>[]
      reviews: Prisma.$ReviewPayload<ExtArgs>[]
      reviewed: Prisma.$ReviewPayload<ExtArgs>[]
      notifications: Prisma.$NotificationPayload<ExtArgs>[]
      freelancerApplications: Prisma.$FreelancerApplicationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      fname: string
      lname: string
      email: string
      password: string
      role: $Enums.Role | null
      profilePic: string | null
      refreshToken: string | null
      refreshTokenExp: Date | null
      online: boolean
      active: boolean
      createdAt: Date
      updatedAt: Date
      experience: string | null
      leadershipStyle: string | null
      teamSize: string | null
      achievements: string | null
      professionalDevelopment: string | null
      gender: string | null
      country: string | null
      city: string | null
      altEmail: string | null
      phone: string | null
      altPhone: string | null
      highestDegree: string | null
      citationStyles: string | null
      languages: string | null
      disciplines: string | null
      specialization: string | null
      additionalSoftware: string | null
      aboutMe: string | null
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'relationLoadStrategy'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    orders<T extends User$ordersArgs<ExtArgs> = {}>(args?: Subset<T, User$ordersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany"> | Null>
    bids<T extends User$bidsArgs<ExtArgs> = {}>(args?: Subset<T, User$bidsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BidsPayload<ExtArgs>, T, "findMany"> | Null>
    assignments<T extends User$assignmentsArgs<ExtArgs> = {}>(args?: Subset<T, User$assignmentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AssignmentPayload<ExtArgs>, T, "findMany"> | Null>
    SubmittedJobs<T extends User$SubmittedJobsArgs<ExtArgs> = {}>(args?: Subset<T, User$SubmittedJobsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubmittedJobsPayload<ExtArgs>, T, "findMany"> | Null>
    cancelledJobs<T extends User$cancelledJobsArgs<ExtArgs> = {}>(args?: Subset<T, User$cancelledJobsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CancelledJobsPayload<ExtArgs>, T, "findMany"> | Null>
    invoices<T extends User$invoicesArgs<ExtArgs> = {}>(args?: Subset<T, User$invoicesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findMany"> | Null>
    payments<T extends User$paymentsArgs<ExtArgs> = {}>(args?: Subset<T, User$paymentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findMany"> | Null>
    fines<T extends User$finesArgs<ExtArgs> = {}>(args?: Subset<T, User$finesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FinesPayload<ExtArgs>, T, "findMany"> | Null>
    reviews<T extends User$reviewsArgs<ExtArgs> = {}>(args?: Subset<T, User$reviewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findMany"> | Null>
    reviewed<T extends User$reviewedArgs<ExtArgs> = {}>(args?: Subset<T, User$reviewedArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findMany"> | Null>
    notifications<T extends User$notificationsArgs<ExtArgs> = {}>(args?: Subset<T, User$notificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany"> | Null>
    freelancerApplications<T extends User$freelancerApplicationsArgs<ExtArgs> = {}>(args?: Subset<T, User$freelancerApplicationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FreelancerApplicationPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */ 
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly fname: FieldRef<"User", 'String'>
    readonly lname: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly role: FieldRef<"User", 'Role'>
    readonly profilePic: FieldRef<"User", 'String'>
    readonly refreshToken: FieldRef<"User", 'String'>
    readonly refreshTokenExp: FieldRef<"User", 'DateTime'>
    readonly online: FieldRef<"User", 'Boolean'>
    readonly active: FieldRef<"User", 'Boolean'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
    readonly experience: FieldRef<"User", 'String'>
    readonly leadershipStyle: FieldRef<"User", 'String'>
    readonly teamSize: FieldRef<"User", 'String'>
    readonly achievements: FieldRef<"User", 'String'>
    readonly professionalDevelopment: FieldRef<"User", 'String'>
    readonly gender: FieldRef<"User", 'String'>
    readonly country: FieldRef<"User", 'String'>
    readonly city: FieldRef<"User", 'String'>
    readonly altEmail: FieldRef<"User", 'String'>
    readonly phone: FieldRef<"User", 'String'>
    readonly altPhone: FieldRef<"User", 'String'>
    readonly highestDegree: FieldRef<"User", 'String'>
    readonly citationStyles: FieldRef<"User", 'String'>
    readonly languages: FieldRef<"User", 'String'>
    readonly disciplines: FieldRef<"User", 'String'>
    readonly specialization: FieldRef<"User", 'String'>
    readonly additionalSoftware: FieldRef<"User", 'String'>
    readonly aboutMe: FieldRef<"User", 'String'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
  }

  /**
   * User.orders
   */
  export type User$ordersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * User.bids
   */
  export type User$bidsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bids
     */
    select?: BidsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BidsInclude<ExtArgs> | null
    where?: BidsWhereInput
    orderBy?: BidsOrderByWithRelationInput | BidsOrderByWithRelationInput[]
    cursor?: BidsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BidsScalarFieldEnum | BidsScalarFieldEnum[]
  }

  /**
   * User.assignments
   */
  export type User$assignmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Assignment
     */
    select?: AssignmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssignmentInclude<ExtArgs> | null
    where?: AssignmentWhereInput
    orderBy?: AssignmentOrderByWithRelationInput | AssignmentOrderByWithRelationInput[]
    cursor?: AssignmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AssignmentScalarFieldEnum | AssignmentScalarFieldEnum[]
  }

  /**
   * User.SubmittedJobs
   */
  export type User$SubmittedJobsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubmittedJobs
     */
    select?: SubmittedJobsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubmittedJobsInclude<ExtArgs> | null
    where?: SubmittedJobsWhereInput
    orderBy?: SubmittedJobsOrderByWithRelationInput | SubmittedJobsOrderByWithRelationInput[]
    cursor?: SubmittedJobsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SubmittedJobsScalarFieldEnum | SubmittedJobsScalarFieldEnum[]
  }

  /**
   * User.cancelledJobs
   */
  export type User$cancelledJobsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CancelledJobs
     */
    select?: CancelledJobsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CancelledJobsInclude<ExtArgs> | null
    where?: CancelledJobsWhereInput
    orderBy?: CancelledJobsOrderByWithRelationInput | CancelledJobsOrderByWithRelationInput[]
    cursor?: CancelledJobsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CancelledJobsScalarFieldEnum | CancelledJobsScalarFieldEnum[]
  }

  /**
   * User.invoices
   */
  export type User$invoicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    where?: InvoiceWhereInput
    orderBy?: InvoiceOrderByWithRelationInput | InvoiceOrderByWithRelationInput[]
    cursor?: InvoiceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InvoiceScalarFieldEnum | InvoiceScalarFieldEnum[]
  }

  /**
   * User.payments
   */
  export type User$paymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    where?: PaymentWhereInput
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    cursor?: PaymentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * User.fines
   */
  export type User$finesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fines
     */
    select?: FinesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinesInclude<ExtArgs> | null
    where?: FinesWhereInput
    orderBy?: FinesOrderByWithRelationInput | FinesOrderByWithRelationInput[]
    cursor?: FinesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FinesScalarFieldEnum | FinesScalarFieldEnum[]
  }

  /**
   * User.reviews
   */
  export type User$reviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    where?: ReviewWhereInput
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    cursor?: ReviewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * User.reviewed
   */
  export type User$reviewedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    where?: ReviewWhereInput
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    cursor?: ReviewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * User.notifications
   */
  export type User$notificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    cursor?: NotificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * User.freelancerApplications
   */
  export type User$freelancerApplicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FreelancerApplication
     */
    select?: FreelancerApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FreelancerApplicationInclude<ExtArgs> | null
    where?: FreelancerApplicationWhereInput
    orderBy?: FreelancerApplicationOrderByWithRelationInput | FreelancerApplicationOrderByWithRelationInput[]
    cursor?: FreelancerApplicationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FreelancerApplicationScalarFieldEnum | FreelancerApplicationScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model FreelancerApplication
   */

  export type AggregateFreelancerApplication = {
    _count: FreelancerApplicationCountAggregateOutputType | null
    _min: FreelancerApplicationMinAggregateOutputType | null
    _max: FreelancerApplicationMaxAggregateOutputType | null
  }

  export type FreelancerApplicationMinAggregateOutputType = {
    id: string | null
    userId: string | null
    status: $Enums.ApplicationStatus | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FreelancerApplicationMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    status: $Enums.ApplicationStatus | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FreelancerApplicationCountAggregateOutputType = {
    id: number
    userId: number
    status: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type FreelancerApplicationMinAggregateInputType = {
    id?: true
    userId?: true
    status?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FreelancerApplicationMaxAggregateInputType = {
    id?: true
    userId?: true
    status?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FreelancerApplicationCountAggregateInputType = {
    id?: true
    userId?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type FreelancerApplicationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FreelancerApplication to aggregate.
     */
    where?: FreelancerApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FreelancerApplications to fetch.
     */
    orderBy?: FreelancerApplicationOrderByWithRelationInput | FreelancerApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FreelancerApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FreelancerApplications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FreelancerApplications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FreelancerApplications
    **/
    _count?: true | FreelancerApplicationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FreelancerApplicationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FreelancerApplicationMaxAggregateInputType
  }

  export type GetFreelancerApplicationAggregateType<T extends FreelancerApplicationAggregateArgs> = {
        [P in keyof T & keyof AggregateFreelancerApplication]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFreelancerApplication[P]>
      : GetScalarType<T[P], AggregateFreelancerApplication[P]>
  }




  export type FreelancerApplicationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FreelancerApplicationWhereInput
    orderBy?: FreelancerApplicationOrderByWithAggregationInput | FreelancerApplicationOrderByWithAggregationInput[]
    by: FreelancerApplicationScalarFieldEnum[] | FreelancerApplicationScalarFieldEnum
    having?: FreelancerApplicationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FreelancerApplicationCountAggregateInputType | true
    _min?: FreelancerApplicationMinAggregateInputType
    _max?: FreelancerApplicationMaxAggregateInputType
  }

  export type FreelancerApplicationGroupByOutputType = {
    id: string
    userId: string
    status: $Enums.ApplicationStatus
    createdAt: Date
    updatedAt: Date
    _count: FreelancerApplicationCountAggregateOutputType | null
    _min: FreelancerApplicationMinAggregateOutputType | null
    _max: FreelancerApplicationMaxAggregateOutputType | null
  }

  type GetFreelancerApplicationGroupByPayload<T extends FreelancerApplicationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FreelancerApplicationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FreelancerApplicationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FreelancerApplicationGroupByOutputType[P]>
            : GetScalarType<T[P], FreelancerApplicationGroupByOutputType[P]>
        }
      >
    >


  export type FreelancerApplicationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["freelancerApplication"]>

  export type FreelancerApplicationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["freelancerApplication"]>

  export type FreelancerApplicationSelectScalar = {
    id?: boolean
    userId?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type FreelancerApplicationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type FreelancerApplicationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $FreelancerApplicationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FreelancerApplication"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      status: $Enums.ApplicationStatus
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["freelancerApplication"]>
    composites: {}
  }

  type FreelancerApplicationGetPayload<S extends boolean | null | undefined | FreelancerApplicationDefaultArgs> = $Result.GetResult<Prisma.$FreelancerApplicationPayload, S>

  type FreelancerApplicationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<FreelancerApplicationFindManyArgs, 'select' | 'include' | 'distinct' | 'relationLoadStrategy'> & {
      select?: FreelancerApplicationCountAggregateInputType | true
    }

  export interface FreelancerApplicationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FreelancerApplication'], meta: { name: 'FreelancerApplication' } }
    /**
     * Find zero or one FreelancerApplication that matches the filter.
     * @param {FreelancerApplicationFindUniqueArgs} args - Arguments to find a FreelancerApplication
     * @example
     * // Get one FreelancerApplication
     * const freelancerApplication = await prisma.freelancerApplication.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FreelancerApplicationFindUniqueArgs>(args: SelectSubset<T, FreelancerApplicationFindUniqueArgs<ExtArgs>>): Prisma__FreelancerApplicationClient<$Result.GetResult<Prisma.$FreelancerApplicationPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one FreelancerApplication that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {FreelancerApplicationFindUniqueOrThrowArgs} args - Arguments to find a FreelancerApplication
     * @example
     * // Get one FreelancerApplication
     * const freelancerApplication = await prisma.freelancerApplication.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FreelancerApplicationFindUniqueOrThrowArgs>(args: SelectSubset<T, FreelancerApplicationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FreelancerApplicationClient<$Result.GetResult<Prisma.$FreelancerApplicationPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first FreelancerApplication that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FreelancerApplicationFindFirstArgs} args - Arguments to find a FreelancerApplication
     * @example
     * // Get one FreelancerApplication
     * const freelancerApplication = await prisma.freelancerApplication.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FreelancerApplicationFindFirstArgs>(args?: SelectSubset<T, FreelancerApplicationFindFirstArgs<ExtArgs>>): Prisma__FreelancerApplicationClient<$Result.GetResult<Prisma.$FreelancerApplicationPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first FreelancerApplication that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FreelancerApplicationFindFirstOrThrowArgs} args - Arguments to find a FreelancerApplication
     * @example
     * // Get one FreelancerApplication
     * const freelancerApplication = await prisma.freelancerApplication.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FreelancerApplicationFindFirstOrThrowArgs>(args?: SelectSubset<T, FreelancerApplicationFindFirstOrThrowArgs<ExtArgs>>): Prisma__FreelancerApplicationClient<$Result.GetResult<Prisma.$FreelancerApplicationPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more FreelancerApplications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FreelancerApplicationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FreelancerApplications
     * const freelancerApplications = await prisma.freelancerApplication.findMany()
     * 
     * // Get first 10 FreelancerApplications
     * const freelancerApplications = await prisma.freelancerApplication.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const freelancerApplicationWithIdOnly = await prisma.freelancerApplication.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FreelancerApplicationFindManyArgs>(args?: SelectSubset<T, FreelancerApplicationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FreelancerApplicationPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a FreelancerApplication.
     * @param {FreelancerApplicationCreateArgs} args - Arguments to create a FreelancerApplication.
     * @example
     * // Create one FreelancerApplication
     * const FreelancerApplication = await prisma.freelancerApplication.create({
     *   data: {
     *     // ... data to create a FreelancerApplication
     *   }
     * })
     * 
     */
    create<T extends FreelancerApplicationCreateArgs>(args: SelectSubset<T, FreelancerApplicationCreateArgs<ExtArgs>>): Prisma__FreelancerApplicationClient<$Result.GetResult<Prisma.$FreelancerApplicationPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many FreelancerApplications.
     * @param {FreelancerApplicationCreateManyArgs} args - Arguments to create many FreelancerApplications.
     * @example
     * // Create many FreelancerApplications
     * const freelancerApplication = await prisma.freelancerApplication.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FreelancerApplicationCreateManyArgs>(args?: SelectSubset<T, FreelancerApplicationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many FreelancerApplications and returns the data saved in the database.
     * @param {FreelancerApplicationCreateManyAndReturnArgs} args - Arguments to create many FreelancerApplications.
     * @example
     * // Create many FreelancerApplications
     * const freelancerApplication = await prisma.freelancerApplication.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many FreelancerApplications and only return the `id`
     * const freelancerApplicationWithIdOnly = await prisma.freelancerApplication.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FreelancerApplicationCreateManyAndReturnArgs>(args?: SelectSubset<T, FreelancerApplicationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FreelancerApplicationPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a FreelancerApplication.
     * @param {FreelancerApplicationDeleteArgs} args - Arguments to delete one FreelancerApplication.
     * @example
     * // Delete one FreelancerApplication
     * const FreelancerApplication = await prisma.freelancerApplication.delete({
     *   where: {
     *     // ... filter to delete one FreelancerApplication
     *   }
     * })
     * 
     */
    delete<T extends FreelancerApplicationDeleteArgs>(args: SelectSubset<T, FreelancerApplicationDeleteArgs<ExtArgs>>): Prisma__FreelancerApplicationClient<$Result.GetResult<Prisma.$FreelancerApplicationPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one FreelancerApplication.
     * @param {FreelancerApplicationUpdateArgs} args - Arguments to update one FreelancerApplication.
     * @example
     * // Update one FreelancerApplication
     * const freelancerApplication = await prisma.freelancerApplication.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FreelancerApplicationUpdateArgs>(args: SelectSubset<T, FreelancerApplicationUpdateArgs<ExtArgs>>): Prisma__FreelancerApplicationClient<$Result.GetResult<Prisma.$FreelancerApplicationPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more FreelancerApplications.
     * @param {FreelancerApplicationDeleteManyArgs} args - Arguments to filter FreelancerApplications to delete.
     * @example
     * // Delete a few FreelancerApplications
     * const { count } = await prisma.freelancerApplication.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FreelancerApplicationDeleteManyArgs>(args?: SelectSubset<T, FreelancerApplicationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FreelancerApplications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FreelancerApplicationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FreelancerApplications
     * const freelancerApplication = await prisma.freelancerApplication.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FreelancerApplicationUpdateManyArgs>(args: SelectSubset<T, FreelancerApplicationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one FreelancerApplication.
     * @param {FreelancerApplicationUpsertArgs} args - Arguments to update or create a FreelancerApplication.
     * @example
     * // Update or create a FreelancerApplication
     * const freelancerApplication = await prisma.freelancerApplication.upsert({
     *   create: {
     *     // ... data to create a FreelancerApplication
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FreelancerApplication we want to update
     *   }
     * })
     */
    upsert<T extends FreelancerApplicationUpsertArgs>(args: SelectSubset<T, FreelancerApplicationUpsertArgs<ExtArgs>>): Prisma__FreelancerApplicationClient<$Result.GetResult<Prisma.$FreelancerApplicationPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of FreelancerApplications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FreelancerApplicationCountArgs} args - Arguments to filter FreelancerApplications to count.
     * @example
     * // Count the number of FreelancerApplications
     * const count = await prisma.freelancerApplication.count({
     *   where: {
     *     // ... the filter for the FreelancerApplications we want to count
     *   }
     * })
    **/
    count<T extends FreelancerApplicationCountArgs>(
      args?: Subset<T, FreelancerApplicationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FreelancerApplicationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FreelancerApplication.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FreelancerApplicationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FreelancerApplicationAggregateArgs>(args: Subset<T, FreelancerApplicationAggregateArgs>): Prisma.PrismaPromise<GetFreelancerApplicationAggregateType<T>>

    /**
     * Group by FreelancerApplication.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FreelancerApplicationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FreelancerApplicationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FreelancerApplicationGroupByArgs['orderBy'] }
        : { orderBy?: FreelancerApplicationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FreelancerApplicationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFreelancerApplicationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FreelancerApplication model
   */
  readonly fields: FreelancerApplicationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FreelancerApplication.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FreelancerApplicationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FreelancerApplication model
   */ 
  interface FreelancerApplicationFieldRefs {
    readonly id: FieldRef<"FreelancerApplication", 'String'>
    readonly userId: FieldRef<"FreelancerApplication", 'String'>
    readonly status: FieldRef<"FreelancerApplication", 'ApplicationStatus'>
    readonly createdAt: FieldRef<"FreelancerApplication", 'DateTime'>
    readonly updatedAt: FieldRef<"FreelancerApplication", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * FreelancerApplication findUnique
   */
  export type FreelancerApplicationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FreelancerApplication
     */
    select?: FreelancerApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FreelancerApplicationInclude<ExtArgs> | null
    /**
     * Filter, which FreelancerApplication to fetch.
     */
    where: FreelancerApplicationWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * FreelancerApplication findUniqueOrThrow
   */
  export type FreelancerApplicationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FreelancerApplication
     */
    select?: FreelancerApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FreelancerApplicationInclude<ExtArgs> | null
    /**
     * Filter, which FreelancerApplication to fetch.
     */
    where: FreelancerApplicationWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * FreelancerApplication findFirst
   */
  export type FreelancerApplicationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FreelancerApplication
     */
    select?: FreelancerApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FreelancerApplicationInclude<ExtArgs> | null
    /**
     * Filter, which FreelancerApplication to fetch.
     */
    where?: FreelancerApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FreelancerApplications to fetch.
     */
    orderBy?: FreelancerApplicationOrderByWithRelationInput | FreelancerApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FreelancerApplications.
     */
    cursor?: FreelancerApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FreelancerApplications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FreelancerApplications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FreelancerApplications.
     */
    distinct?: FreelancerApplicationScalarFieldEnum | FreelancerApplicationScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * FreelancerApplication findFirstOrThrow
   */
  export type FreelancerApplicationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FreelancerApplication
     */
    select?: FreelancerApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FreelancerApplicationInclude<ExtArgs> | null
    /**
     * Filter, which FreelancerApplication to fetch.
     */
    where?: FreelancerApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FreelancerApplications to fetch.
     */
    orderBy?: FreelancerApplicationOrderByWithRelationInput | FreelancerApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FreelancerApplications.
     */
    cursor?: FreelancerApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FreelancerApplications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FreelancerApplications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FreelancerApplications.
     */
    distinct?: FreelancerApplicationScalarFieldEnum | FreelancerApplicationScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * FreelancerApplication findMany
   */
  export type FreelancerApplicationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FreelancerApplication
     */
    select?: FreelancerApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FreelancerApplicationInclude<ExtArgs> | null
    /**
     * Filter, which FreelancerApplications to fetch.
     */
    where?: FreelancerApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FreelancerApplications to fetch.
     */
    orderBy?: FreelancerApplicationOrderByWithRelationInput | FreelancerApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FreelancerApplications.
     */
    cursor?: FreelancerApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FreelancerApplications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FreelancerApplications.
     */
    skip?: number
    distinct?: FreelancerApplicationScalarFieldEnum | FreelancerApplicationScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * FreelancerApplication create
   */
  export type FreelancerApplicationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FreelancerApplication
     */
    select?: FreelancerApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FreelancerApplicationInclude<ExtArgs> | null
    /**
     * The data needed to create a FreelancerApplication.
     */
    data: XOR<FreelancerApplicationCreateInput, FreelancerApplicationUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * FreelancerApplication createMany
   */
  export type FreelancerApplicationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FreelancerApplications.
     */
    data: FreelancerApplicationCreateManyInput | FreelancerApplicationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FreelancerApplication createManyAndReturn
   */
  export type FreelancerApplicationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FreelancerApplication
     */
    select?: FreelancerApplicationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many FreelancerApplications.
     */
    data: FreelancerApplicationCreateManyInput | FreelancerApplicationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FreelancerApplicationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * FreelancerApplication update
   */
  export type FreelancerApplicationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FreelancerApplication
     */
    select?: FreelancerApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FreelancerApplicationInclude<ExtArgs> | null
    /**
     * The data needed to update a FreelancerApplication.
     */
    data: XOR<FreelancerApplicationUpdateInput, FreelancerApplicationUncheckedUpdateInput>
    /**
     * Choose, which FreelancerApplication to update.
     */
    where: FreelancerApplicationWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * FreelancerApplication updateMany
   */
  export type FreelancerApplicationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FreelancerApplications.
     */
    data: XOR<FreelancerApplicationUpdateManyMutationInput, FreelancerApplicationUncheckedUpdateManyInput>
    /**
     * Filter which FreelancerApplications to update
     */
    where?: FreelancerApplicationWhereInput
  }

  /**
   * FreelancerApplication upsert
   */
  export type FreelancerApplicationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FreelancerApplication
     */
    select?: FreelancerApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FreelancerApplicationInclude<ExtArgs> | null
    /**
     * The filter to search for the FreelancerApplication to update in case it exists.
     */
    where: FreelancerApplicationWhereUniqueInput
    /**
     * In case the FreelancerApplication found by the `where` argument doesn't exist, create a new FreelancerApplication with this data.
     */
    create: XOR<FreelancerApplicationCreateInput, FreelancerApplicationUncheckedCreateInput>
    /**
     * In case the FreelancerApplication was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FreelancerApplicationUpdateInput, FreelancerApplicationUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * FreelancerApplication delete
   */
  export type FreelancerApplicationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FreelancerApplication
     */
    select?: FreelancerApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FreelancerApplicationInclude<ExtArgs> | null
    /**
     * Filter which FreelancerApplication to delete.
     */
    where: FreelancerApplicationWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * FreelancerApplication deleteMany
   */
  export type FreelancerApplicationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FreelancerApplications to delete
     */
    where?: FreelancerApplicationWhereInput
  }

  /**
   * FreelancerApplication without action
   */
  export type FreelancerApplicationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FreelancerApplication
     */
    select?: FreelancerApplicationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FreelancerApplicationInclude<ExtArgs> | null
  }


  /**
   * Model Order
   */

  export type AggregateOrder = {
    _count: OrderCountAggregateOutputType | null
    _avg: OrderAvgAggregateOutputType | null
    _sum: OrderSumAggregateOutputType | null
    _min: OrderMinAggregateOutputType | null
    _max: OrderMaxAggregateOutputType | null
  }

  export type OrderAvgAggregateOutputType = {
    pages: Decimal | null
    cpp: number | null
    amount: number | null
  }

  export type OrderSumAggregateOutputType = {
    pages: Decimal | null
    cpp: number | null
    amount: number | null
  }

  export type OrderMinAggregateOutputType = {
    id: string | null
    orderId: string | null
    topic: string | null
    category: string | null
    service: string | null
    sources: string | null
    citation: string | null
    pages: Decimal | null
    cpp: number | null
    amount: number | null
    deadline: Date | null
    duration: string | null
    instructions: string | null
    additionalNotes: string | null
    status: $Enums.OrderStatus | null
    createdAt: Date | null
    updatedAt: Date | null
    freelancerId: string | null
    invoiceId: string | null
  }

  export type OrderMaxAggregateOutputType = {
    id: string | null
    orderId: string | null
    topic: string | null
    category: string | null
    service: string | null
    sources: string | null
    citation: string | null
    pages: Decimal | null
    cpp: number | null
    amount: number | null
    deadline: Date | null
    duration: string | null
    instructions: string | null
    additionalNotes: string | null
    status: $Enums.OrderStatus | null
    createdAt: Date | null
    updatedAt: Date | null
    freelancerId: string | null
    invoiceId: string | null
  }

  export type OrderCountAggregateOutputType = {
    id: number
    orderId: number
    topic: number
    category: number
    service: number
    sources: number
    citation: number
    pages: number
    cpp: number
    amount: number
    deadline: number
    duration: number
    instructions: number
    attachments: number
    additionalNotes: number
    status: number
    createdAt: number
    updatedAt: number
    freelancerId: number
    invoiceId: number
    _all: number
  }


  export type OrderAvgAggregateInputType = {
    pages?: true
    cpp?: true
    amount?: true
  }

  export type OrderSumAggregateInputType = {
    pages?: true
    cpp?: true
    amount?: true
  }

  export type OrderMinAggregateInputType = {
    id?: true
    orderId?: true
    topic?: true
    category?: true
    service?: true
    sources?: true
    citation?: true
    pages?: true
    cpp?: true
    amount?: true
    deadline?: true
    duration?: true
    instructions?: true
    additionalNotes?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    freelancerId?: true
    invoiceId?: true
  }

  export type OrderMaxAggregateInputType = {
    id?: true
    orderId?: true
    topic?: true
    category?: true
    service?: true
    sources?: true
    citation?: true
    pages?: true
    cpp?: true
    amount?: true
    deadline?: true
    duration?: true
    instructions?: true
    additionalNotes?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    freelancerId?: true
    invoiceId?: true
  }

  export type OrderCountAggregateInputType = {
    id?: true
    orderId?: true
    topic?: true
    category?: true
    service?: true
    sources?: true
    citation?: true
    pages?: true
    cpp?: true
    amount?: true
    deadline?: true
    duration?: true
    instructions?: true
    attachments?: true
    additionalNotes?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    freelancerId?: true
    invoiceId?: true
    _all?: true
  }

  export type OrderAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Order to aggregate.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Orders
    **/
    _count?: true | OrderCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrderAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrderSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrderMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrderMaxAggregateInputType
  }

  export type GetOrderAggregateType<T extends OrderAggregateArgs> = {
        [P in keyof T & keyof AggregateOrder]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrder[P]>
      : GetScalarType<T[P], AggregateOrder[P]>
  }




  export type OrderGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithAggregationInput | OrderOrderByWithAggregationInput[]
    by: OrderScalarFieldEnum[] | OrderScalarFieldEnum
    having?: OrderScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrderCountAggregateInputType | true
    _avg?: OrderAvgAggregateInputType
    _sum?: OrderSumAggregateInputType
    _min?: OrderMinAggregateInputType
    _max?: OrderMaxAggregateInputType
  }

  export type OrderGroupByOutputType = {
    id: string
    orderId: string
    topic: string
    category: string | null
    service: string | null
    sources: string | null
    citation: string | null
    pages: Decimal | null
    cpp: number
    amount: number
    deadline: Date
    duration: string
    instructions: string
    attachments: string[]
    additionalNotes: string | null
    status: $Enums.OrderStatus
    createdAt: Date
    updatedAt: Date
    freelancerId: string | null
    invoiceId: string | null
    _count: OrderCountAggregateOutputType | null
    _avg: OrderAvgAggregateOutputType | null
    _sum: OrderSumAggregateOutputType | null
    _min: OrderMinAggregateOutputType | null
    _max: OrderMaxAggregateOutputType | null
  }

  type GetOrderGroupByPayload<T extends OrderGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrderGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrderGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrderGroupByOutputType[P]>
            : GetScalarType<T[P], OrderGroupByOutputType[P]>
        }
      >
    >


  export type OrderSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    topic?: boolean
    category?: boolean
    service?: boolean
    sources?: boolean
    citation?: boolean
    pages?: boolean
    cpp?: boolean
    amount?: boolean
    deadline?: boolean
    duration?: boolean
    instructions?: boolean
    attachments?: boolean
    additionalNotes?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    freelancerId?: boolean
    invoiceId?: boolean
    freelancer?: boolean | Order$freelancerArgs<ExtArgs>
    bids?: boolean | Order$bidsArgs<ExtArgs>
    assignments?: boolean | Order$assignmentsArgs<ExtArgs>
    SubmittedJobs?: boolean | Order$SubmittedJobsArgs<ExtArgs>
    cancelledJobs?: boolean | Order$cancelledJobsArgs<ExtArgs>
    fines?: boolean | Order$finesArgs<ExtArgs>
    reviews?: boolean | Order$reviewsArgs<ExtArgs>
    invoice?: boolean | Order$invoiceArgs<ExtArgs>
    notifications?: boolean | Order$notificationsArgs<ExtArgs>
    _count?: boolean | OrderCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order"]>

  export type OrderSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    topic?: boolean
    category?: boolean
    service?: boolean
    sources?: boolean
    citation?: boolean
    pages?: boolean
    cpp?: boolean
    amount?: boolean
    deadline?: boolean
    duration?: boolean
    instructions?: boolean
    attachments?: boolean
    additionalNotes?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    freelancerId?: boolean
    invoiceId?: boolean
    freelancer?: boolean | Order$freelancerArgs<ExtArgs>
    invoice?: boolean | Order$invoiceArgs<ExtArgs>
  }, ExtArgs["result"]["order"]>

  export type OrderSelectScalar = {
    id?: boolean
    orderId?: boolean
    topic?: boolean
    category?: boolean
    service?: boolean
    sources?: boolean
    citation?: boolean
    pages?: boolean
    cpp?: boolean
    amount?: boolean
    deadline?: boolean
    duration?: boolean
    instructions?: boolean
    attachments?: boolean
    additionalNotes?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    freelancerId?: boolean
    invoiceId?: boolean
  }

  export type OrderInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    freelancer?: boolean | Order$freelancerArgs<ExtArgs>
    bids?: boolean | Order$bidsArgs<ExtArgs>
    assignments?: boolean | Order$assignmentsArgs<ExtArgs>
    SubmittedJobs?: boolean | Order$SubmittedJobsArgs<ExtArgs>
    cancelledJobs?: boolean | Order$cancelledJobsArgs<ExtArgs>
    fines?: boolean | Order$finesArgs<ExtArgs>
    reviews?: boolean | Order$reviewsArgs<ExtArgs>
    invoice?: boolean | Order$invoiceArgs<ExtArgs>
    notifications?: boolean | Order$notificationsArgs<ExtArgs>
    _count?: boolean | OrderCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type OrderIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    freelancer?: boolean | Order$freelancerArgs<ExtArgs>
    invoice?: boolean | Order$invoiceArgs<ExtArgs>
  }

  export type $OrderPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Order"
    objects: {
      freelancer: Prisma.$UserPayload<ExtArgs> | null
      bids: Prisma.$BidsPayload<ExtArgs>[]
      assignments: Prisma.$AssignmentPayload<ExtArgs>[]
      SubmittedJobs: Prisma.$SubmittedJobsPayload<ExtArgs>[]
      cancelledJobs: Prisma.$CancelledJobsPayload<ExtArgs>[]
      fines: Prisma.$FinesPayload<ExtArgs>[]
      reviews: Prisma.$ReviewPayload<ExtArgs>[]
      invoice: Prisma.$InvoicePayload<ExtArgs> | null
      notifications: Prisma.$NotificationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      orderId: string
      topic: string
      category: string | null
      service: string | null
      sources: string | null
      citation: string | null
      pages: Prisma.Decimal | null
      cpp: number
      amount: number
      deadline: Date
      duration: string
      instructions: string
      attachments: string[]
      additionalNotes: string | null
      status: $Enums.OrderStatus
      createdAt: Date
      updatedAt: Date
      freelancerId: string | null
      invoiceId: string | null
    }, ExtArgs["result"]["order"]>
    composites: {}
  }

  type OrderGetPayload<S extends boolean | null | undefined | OrderDefaultArgs> = $Result.GetResult<Prisma.$OrderPayload, S>

  type OrderCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<OrderFindManyArgs, 'select' | 'include' | 'distinct' | 'relationLoadStrategy'> & {
      select?: OrderCountAggregateInputType | true
    }

  export interface OrderDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Order'], meta: { name: 'Order' } }
    /**
     * Find zero or one Order that matches the filter.
     * @param {OrderFindUniqueArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrderFindUniqueArgs>(args: SelectSubset<T, OrderFindUniqueArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Order that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {OrderFindUniqueOrThrowArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrderFindUniqueOrThrowArgs>(args: SelectSubset<T, OrderFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Order that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindFirstArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrderFindFirstArgs>(args?: SelectSubset<T, OrderFindFirstArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Order that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindFirstOrThrowArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrderFindFirstOrThrowArgs>(args?: SelectSubset<T, OrderFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Orders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Orders
     * const orders = await prisma.order.findMany()
     * 
     * // Get first 10 Orders
     * const orders = await prisma.order.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const orderWithIdOnly = await prisma.order.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrderFindManyArgs>(args?: SelectSubset<T, OrderFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Order.
     * @param {OrderCreateArgs} args - Arguments to create a Order.
     * @example
     * // Create one Order
     * const Order = await prisma.order.create({
     *   data: {
     *     // ... data to create a Order
     *   }
     * })
     * 
     */
    create<T extends OrderCreateArgs>(args: SelectSubset<T, OrderCreateArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Orders.
     * @param {OrderCreateManyArgs} args - Arguments to create many Orders.
     * @example
     * // Create many Orders
     * const order = await prisma.order.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrderCreateManyArgs>(args?: SelectSubset<T, OrderCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Orders and returns the data saved in the database.
     * @param {OrderCreateManyAndReturnArgs} args - Arguments to create many Orders.
     * @example
     * // Create many Orders
     * const order = await prisma.order.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Orders and only return the `id`
     * const orderWithIdOnly = await prisma.order.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrderCreateManyAndReturnArgs>(args?: SelectSubset<T, OrderCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Order.
     * @param {OrderDeleteArgs} args - Arguments to delete one Order.
     * @example
     * // Delete one Order
     * const Order = await prisma.order.delete({
     *   where: {
     *     // ... filter to delete one Order
     *   }
     * })
     * 
     */
    delete<T extends OrderDeleteArgs>(args: SelectSubset<T, OrderDeleteArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Order.
     * @param {OrderUpdateArgs} args - Arguments to update one Order.
     * @example
     * // Update one Order
     * const order = await prisma.order.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrderUpdateArgs>(args: SelectSubset<T, OrderUpdateArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Orders.
     * @param {OrderDeleteManyArgs} args - Arguments to filter Orders to delete.
     * @example
     * // Delete a few Orders
     * const { count } = await prisma.order.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrderDeleteManyArgs>(args?: SelectSubset<T, OrderDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Orders
     * const order = await prisma.order.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrderUpdateManyArgs>(args: SelectSubset<T, OrderUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Order.
     * @param {OrderUpsertArgs} args - Arguments to update or create a Order.
     * @example
     * // Update or create a Order
     * const order = await prisma.order.upsert({
     *   create: {
     *     // ... data to create a Order
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Order we want to update
     *   }
     * })
     */
    upsert<T extends OrderUpsertArgs>(args: SelectSubset<T, OrderUpsertArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderCountArgs} args - Arguments to filter Orders to count.
     * @example
     * // Count the number of Orders
     * const count = await prisma.order.count({
     *   where: {
     *     // ... the filter for the Orders we want to count
     *   }
     * })
    **/
    count<T extends OrderCountArgs>(
      args?: Subset<T, OrderCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrderCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Order.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrderAggregateArgs>(args: Subset<T, OrderAggregateArgs>): Prisma.PrismaPromise<GetOrderAggregateType<T>>

    /**
     * Group by Order.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrderGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrderGroupByArgs['orderBy'] }
        : { orderBy?: OrderGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrderGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrderGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Order model
   */
  readonly fields: OrderFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Order.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrderClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    freelancer<T extends Order$freelancerArgs<ExtArgs> = {}>(args?: Subset<T, Order$freelancerArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    bids<T extends Order$bidsArgs<ExtArgs> = {}>(args?: Subset<T, Order$bidsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BidsPayload<ExtArgs>, T, "findMany"> | Null>
    assignments<T extends Order$assignmentsArgs<ExtArgs> = {}>(args?: Subset<T, Order$assignmentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AssignmentPayload<ExtArgs>, T, "findMany"> | Null>
    SubmittedJobs<T extends Order$SubmittedJobsArgs<ExtArgs> = {}>(args?: Subset<T, Order$SubmittedJobsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubmittedJobsPayload<ExtArgs>, T, "findMany"> | Null>
    cancelledJobs<T extends Order$cancelledJobsArgs<ExtArgs> = {}>(args?: Subset<T, Order$cancelledJobsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CancelledJobsPayload<ExtArgs>, T, "findMany"> | Null>
    fines<T extends Order$finesArgs<ExtArgs> = {}>(args?: Subset<T, Order$finesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FinesPayload<ExtArgs>, T, "findMany"> | Null>
    reviews<T extends Order$reviewsArgs<ExtArgs> = {}>(args?: Subset<T, Order$reviewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findMany"> | Null>
    invoice<T extends Order$invoiceArgs<ExtArgs> = {}>(args?: Subset<T, Order$invoiceArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    notifications<T extends Order$notificationsArgs<ExtArgs> = {}>(args?: Subset<T, Order$notificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Order model
   */ 
  interface OrderFieldRefs {
    readonly id: FieldRef<"Order", 'String'>
    readonly orderId: FieldRef<"Order", 'String'>
    readonly topic: FieldRef<"Order", 'String'>
    readonly category: FieldRef<"Order", 'String'>
    readonly service: FieldRef<"Order", 'String'>
    readonly sources: FieldRef<"Order", 'String'>
    readonly citation: FieldRef<"Order", 'String'>
    readonly pages: FieldRef<"Order", 'Decimal'>
    readonly cpp: FieldRef<"Order", 'Int'>
    readonly amount: FieldRef<"Order", 'Int'>
    readonly deadline: FieldRef<"Order", 'DateTime'>
    readonly duration: FieldRef<"Order", 'String'>
    readonly instructions: FieldRef<"Order", 'String'>
    readonly attachments: FieldRef<"Order", 'String[]'>
    readonly additionalNotes: FieldRef<"Order", 'String'>
    readonly status: FieldRef<"Order", 'OrderStatus'>
    readonly createdAt: FieldRef<"Order", 'DateTime'>
    readonly updatedAt: FieldRef<"Order", 'DateTime'>
    readonly freelancerId: FieldRef<"Order", 'String'>
    readonly invoiceId: FieldRef<"Order", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Order findUnique
   */
  export type OrderFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where: OrderWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Order findUniqueOrThrow
   */
  export type OrderFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where: OrderWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Order findFirst
   */
  export type OrderFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Orders.
     */
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Order findFirstOrThrow
   */
  export type OrderFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Orders.
     */
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Order findMany
   */
  export type OrderFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Orders to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Order create
   */
  export type OrderCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The data needed to create a Order.
     */
    data: XOR<OrderCreateInput, OrderUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Order createMany
   */
  export type OrderCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Orders.
     */
    data: OrderCreateManyInput | OrderCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Order createManyAndReturn
   */
  export type OrderCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Orders.
     */
    data: OrderCreateManyInput | OrderCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Order update
   */
  export type OrderUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The data needed to update a Order.
     */
    data: XOR<OrderUpdateInput, OrderUncheckedUpdateInput>
    /**
     * Choose, which Order to update.
     */
    where: OrderWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Order updateMany
   */
  export type OrderUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Orders.
     */
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyInput>
    /**
     * Filter which Orders to update
     */
    where?: OrderWhereInput
  }

  /**
   * Order upsert
   */
  export type OrderUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The filter to search for the Order to update in case it exists.
     */
    where: OrderWhereUniqueInput
    /**
     * In case the Order found by the `where` argument doesn't exist, create a new Order with this data.
     */
    create: XOR<OrderCreateInput, OrderUncheckedCreateInput>
    /**
     * In case the Order was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrderUpdateInput, OrderUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Order delete
   */
  export type OrderDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter which Order to delete.
     */
    where: OrderWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Order deleteMany
   */
  export type OrderDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Orders to delete
     */
    where?: OrderWhereInput
  }

  /**
   * Order.freelancer
   */
  export type Order$freelancerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Order.bids
   */
  export type Order$bidsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bids
     */
    select?: BidsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BidsInclude<ExtArgs> | null
    where?: BidsWhereInput
    orderBy?: BidsOrderByWithRelationInput | BidsOrderByWithRelationInput[]
    cursor?: BidsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BidsScalarFieldEnum | BidsScalarFieldEnum[]
  }

  /**
   * Order.assignments
   */
  export type Order$assignmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Assignment
     */
    select?: AssignmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssignmentInclude<ExtArgs> | null
    where?: AssignmentWhereInput
    orderBy?: AssignmentOrderByWithRelationInput | AssignmentOrderByWithRelationInput[]
    cursor?: AssignmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AssignmentScalarFieldEnum | AssignmentScalarFieldEnum[]
  }

  /**
   * Order.SubmittedJobs
   */
  export type Order$SubmittedJobsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubmittedJobs
     */
    select?: SubmittedJobsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubmittedJobsInclude<ExtArgs> | null
    where?: SubmittedJobsWhereInput
    orderBy?: SubmittedJobsOrderByWithRelationInput | SubmittedJobsOrderByWithRelationInput[]
    cursor?: SubmittedJobsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SubmittedJobsScalarFieldEnum | SubmittedJobsScalarFieldEnum[]
  }

  /**
   * Order.cancelledJobs
   */
  export type Order$cancelledJobsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CancelledJobs
     */
    select?: CancelledJobsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CancelledJobsInclude<ExtArgs> | null
    where?: CancelledJobsWhereInput
    orderBy?: CancelledJobsOrderByWithRelationInput | CancelledJobsOrderByWithRelationInput[]
    cursor?: CancelledJobsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CancelledJobsScalarFieldEnum | CancelledJobsScalarFieldEnum[]
  }

  /**
   * Order.fines
   */
  export type Order$finesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fines
     */
    select?: FinesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinesInclude<ExtArgs> | null
    where?: FinesWhereInput
    orderBy?: FinesOrderByWithRelationInput | FinesOrderByWithRelationInput[]
    cursor?: FinesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FinesScalarFieldEnum | FinesScalarFieldEnum[]
  }

  /**
   * Order.reviews
   */
  export type Order$reviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    where?: ReviewWhereInput
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    cursor?: ReviewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Order.invoice
   */
  export type Order$invoiceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    where?: InvoiceWhereInput
  }

  /**
   * Order.notifications
   */
  export type Order$notificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    cursor?: NotificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Order without action
   */
  export type OrderDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
  }


  /**
   * Model Bids
   */

  export type AggregateBids = {
    _count: BidsCountAggregateOutputType | null
    _min: BidsMinAggregateOutputType | null
    _max: BidsMaxAggregateOutputType | null
  }

  export type BidsMinAggregateOutputType = {
    id: string | null
    orderId: string | null
    freelancerId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    status: $Enums.OrderStatus | null
  }

  export type BidsMaxAggregateOutputType = {
    id: string | null
    orderId: string | null
    freelancerId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    status: $Enums.OrderStatus | null
  }

  export type BidsCountAggregateOutputType = {
    id: number
    orderId: number
    freelancerId: number
    createdAt: number
    updatedAt: number
    status: number
    _all: number
  }


  export type BidsMinAggregateInputType = {
    id?: true
    orderId?: true
    freelancerId?: true
    createdAt?: true
    updatedAt?: true
    status?: true
  }

  export type BidsMaxAggregateInputType = {
    id?: true
    orderId?: true
    freelancerId?: true
    createdAt?: true
    updatedAt?: true
    status?: true
  }

  export type BidsCountAggregateInputType = {
    id?: true
    orderId?: true
    freelancerId?: true
    createdAt?: true
    updatedAt?: true
    status?: true
    _all?: true
  }

  export type BidsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Bids to aggregate.
     */
    where?: BidsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Bids to fetch.
     */
    orderBy?: BidsOrderByWithRelationInput | BidsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BidsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Bids from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Bids.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Bids
    **/
    _count?: true | BidsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BidsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BidsMaxAggregateInputType
  }

  export type GetBidsAggregateType<T extends BidsAggregateArgs> = {
        [P in keyof T & keyof AggregateBids]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBids[P]>
      : GetScalarType<T[P], AggregateBids[P]>
  }




  export type BidsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BidsWhereInput
    orderBy?: BidsOrderByWithAggregationInput | BidsOrderByWithAggregationInput[]
    by: BidsScalarFieldEnum[] | BidsScalarFieldEnum
    having?: BidsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BidsCountAggregateInputType | true
    _min?: BidsMinAggregateInputType
    _max?: BidsMaxAggregateInputType
  }

  export type BidsGroupByOutputType = {
    id: string
    orderId: string
    freelancerId: string
    createdAt: Date
    updatedAt: Date
    status: $Enums.OrderStatus
    _count: BidsCountAggregateOutputType | null
    _min: BidsMinAggregateOutputType | null
    _max: BidsMaxAggregateOutputType | null
  }

  type GetBidsGroupByPayload<T extends BidsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BidsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BidsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BidsGroupByOutputType[P]>
            : GetScalarType<T[P], BidsGroupByOutputType[P]>
        }
      >
    >


  export type BidsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    freelancerId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    status?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    freelancer?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["bids"]>

  export type BidsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    freelancerId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    status?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    freelancer?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["bids"]>

  export type BidsSelectScalar = {
    id?: boolean
    orderId?: boolean
    freelancerId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    status?: boolean
  }

  export type BidsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    freelancer?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type BidsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    freelancer?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $BidsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Bids"
    objects: {
      order: Prisma.$OrderPayload<ExtArgs>
      freelancer: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      orderId: string
      freelancerId: string
      createdAt: Date
      updatedAt: Date
      status: $Enums.OrderStatus
    }, ExtArgs["result"]["bids"]>
    composites: {}
  }

  type BidsGetPayload<S extends boolean | null | undefined | BidsDefaultArgs> = $Result.GetResult<Prisma.$BidsPayload, S>

  type BidsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<BidsFindManyArgs, 'select' | 'include' | 'distinct' | 'relationLoadStrategy'> & {
      select?: BidsCountAggregateInputType | true
    }

  export interface BidsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Bids'], meta: { name: 'Bids' } }
    /**
     * Find zero or one Bids that matches the filter.
     * @param {BidsFindUniqueArgs} args - Arguments to find a Bids
     * @example
     * // Get one Bids
     * const bids = await prisma.bids.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BidsFindUniqueArgs>(args: SelectSubset<T, BidsFindUniqueArgs<ExtArgs>>): Prisma__BidsClient<$Result.GetResult<Prisma.$BidsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Bids that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {BidsFindUniqueOrThrowArgs} args - Arguments to find a Bids
     * @example
     * // Get one Bids
     * const bids = await prisma.bids.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BidsFindUniqueOrThrowArgs>(args: SelectSubset<T, BidsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BidsClient<$Result.GetResult<Prisma.$BidsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Bids that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BidsFindFirstArgs} args - Arguments to find a Bids
     * @example
     * // Get one Bids
     * const bids = await prisma.bids.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BidsFindFirstArgs>(args?: SelectSubset<T, BidsFindFirstArgs<ExtArgs>>): Prisma__BidsClient<$Result.GetResult<Prisma.$BidsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Bids that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BidsFindFirstOrThrowArgs} args - Arguments to find a Bids
     * @example
     * // Get one Bids
     * const bids = await prisma.bids.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BidsFindFirstOrThrowArgs>(args?: SelectSubset<T, BidsFindFirstOrThrowArgs<ExtArgs>>): Prisma__BidsClient<$Result.GetResult<Prisma.$BidsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Bids that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BidsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Bids
     * const bids = await prisma.bids.findMany()
     * 
     * // Get first 10 Bids
     * const bids = await prisma.bids.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const bidsWithIdOnly = await prisma.bids.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BidsFindManyArgs>(args?: SelectSubset<T, BidsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BidsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Bids.
     * @param {BidsCreateArgs} args - Arguments to create a Bids.
     * @example
     * // Create one Bids
     * const Bids = await prisma.bids.create({
     *   data: {
     *     // ... data to create a Bids
     *   }
     * })
     * 
     */
    create<T extends BidsCreateArgs>(args: SelectSubset<T, BidsCreateArgs<ExtArgs>>): Prisma__BidsClient<$Result.GetResult<Prisma.$BidsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Bids.
     * @param {BidsCreateManyArgs} args - Arguments to create many Bids.
     * @example
     * // Create many Bids
     * const bids = await prisma.bids.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BidsCreateManyArgs>(args?: SelectSubset<T, BidsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Bids and returns the data saved in the database.
     * @param {BidsCreateManyAndReturnArgs} args - Arguments to create many Bids.
     * @example
     * // Create many Bids
     * const bids = await prisma.bids.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Bids and only return the `id`
     * const bidsWithIdOnly = await prisma.bids.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BidsCreateManyAndReturnArgs>(args?: SelectSubset<T, BidsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BidsPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Bids.
     * @param {BidsDeleteArgs} args - Arguments to delete one Bids.
     * @example
     * // Delete one Bids
     * const Bids = await prisma.bids.delete({
     *   where: {
     *     // ... filter to delete one Bids
     *   }
     * })
     * 
     */
    delete<T extends BidsDeleteArgs>(args: SelectSubset<T, BidsDeleteArgs<ExtArgs>>): Prisma__BidsClient<$Result.GetResult<Prisma.$BidsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Bids.
     * @param {BidsUpdateArgs} args - Arguments to update one Bids.
     * @example
     * // Update one Bids
     * const bids = await prisma.bids.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BidsUpdateArgs>(args: SelectSubset<T, BidsUpdateArgs<ExtArgs>>): Prisma__BidsClient<$Result.GetResult<Prisma.$BidsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Bids.
     * @param {BidsDeleteManyArgs} args - Arguments to filter Bids to delete.
     * @example
     * // Delete a few Bids
     * const { count } = await prisma.bids.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BidsDeleteManyArgs>(args?: SelectSubset<T, BidsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Bids.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BidsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Bids
     * const bids = await prisma.bids.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BidsUpdateManyArgs>(args: SelectSubset<T, BidsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Bids.
     * @param {BidsUpsertArgs} args - Arguments to update or create a Bids.
     * @example
     * // Update or create a Bids
     * const bids = await prisma.bids.upsert({
     *   create: {
     *     // ... data to create a Bids
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Bids we want to update
     *   }
     * })
     */
    upsert<T extends BidsUpsertArgs>(args: SelectSubset<T, BidsUpsertArgs<ExtArgs>>): Prisma__BidsClient<$Result.GetResult<Prisma.$BidsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Bids.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BidsCountArgs} args - Arguments to filter Bids to count.
     * @example
     * // Count the number of Bids
     * const count = await prisma.bids.count({
     *   where: {
     *     // ... the filter for the Bids we want to count
     *   }
     * })
    **/
    count<T extends BidsCountArgs>(
      args?: Subset<T, BidsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BidsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Bids.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BidsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BidsAggregateArgs>(args: Subset<T, BidsAggregateArgs>): Prisma.PrismaPromise<GetBidsAggregateType<T>>

    /**
     * Group by Bids.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BidsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BidsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BidsGroupByArgs['orderBy'] }
        : { orderBy?: BidsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BidsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBidsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Bids model
   */
  readonly fields: BidsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Bids.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BidsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order<T extends OrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrderDefaultArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    freelancer<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Bids model
   */ 
  interface BidsFieldRefs {
    readonly id: FieldRef<"Bids", 'String'>
    readonly orderId: FieldRef<"Bids", 'String'>
    readonly freelancerId: FieldRef<"Bids", 'String'>
    readonly createdAt: FieldRef<"Bids", 'DateTime'>
    readonly updatedAt: FieldRef<"Bids", 'DateTime'>
    readonly status: FieldRef<"Bids", 'OrderStatus'>
  }
    

  // Custom InputTypes
  /**
   * Bids findUnique
   */
  export type BidsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bids
     */
    select?: BidsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BidsInclude<ExtArgs> | null
    /**
     * Filter, which Bids to fetch.
     */
    where: BidsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Bids findUniqueOrThrow
   */
  export type BidsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bids
     */
    select?: BidsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BidsInclude<ExtArgs> | null
    /**
     * Filter, which Bids to fetch.
     */
    where: BidsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Bids findFirst
   */
  export type BidsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bids
     */
    select?: BidsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BidsInclude<ExtArgs> | null
    /**
     * Filter, which Bids to fetch.
     */
    where?: BidsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Bids to fetch.
     */
    orderBy?: BidsOrderByWithRelationInput | BidsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Bids.
     */
    cursor?: BidsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Bids from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Bids.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Bids.
     */
    distinct?: BidsScalarFieldEnum | BidsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Bids findFirstOrThrow
   */
  export type BidsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bids
     */
    select?: BidsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BidsInclude<ExtArgs> | null
    /**
     * Filter, which Bids to fetch.
     */
    where?: BidsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Bids to fetch.
     */
    orderBy?: BidsOrderByWithRelationInput | BidsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Bids.
     */
    cursor?: BidsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Bids from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Bids.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Bids.
     */
    distinct?: BidsScalarFieldEnum | BidsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Bids findMany
   */
  export type BidsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bids
     */
    select?: BidsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BidsInclude<ExtArgs> | null
    /**
     * Filter, which Bids to fetch.
     */
    where?: BidsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Bids to fetch.
     */
    orderBy?: BidsOrderByWithRelationInput | BidsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Bids.
     */
    cursor?: BidsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Bids from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Bids.
     */
    skip?: number
    distinct?: BidsScalarFieldEnum | BidsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Bids create
   */
  export type BidsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bids
     */
    select?: BidsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BidsInclude<ExtArgs> | null
    /**
     * The data needed to create a Bids.
     */
    data: XOR<BidsCreateInput, BidsUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Bids createMany
   */
  export type BidsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Bids.
     */
    data: BidsCreateManyInput | BidsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Bids createManyAndReturn
   */
  export type BidsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bids
     */
    select?: BidsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Bids.
     */
    data: BidsCreateManyInput | BidsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BidsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Bids update
   */
  export type BidsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bids
     */
    select?: BidsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BidsInclude<ExtArgs> | null
    /**
     * The data needed to update a Bids.
     */
    data: XOR<BidsUpdateInput, BidsUncheckedUpdateInput>
    /**
     * Choose, which Bids to update.
     */
    where: BidsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Bids updateMany
   */
  export type BidsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Bids.
     */
    data: XOR<BidsUpdateManyMutationInput, BidsUncheckedUpdateManyInput>
    /**
     * Filter which Bids to update
     */
    where?: BidsWhereInput
  }

  /**
   * Bids upsert
   */
  export type BidsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bids
     */
    select?: BidsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BidsInclude<ExtArgs> | null
    /**
     * The filter to search for the Bids to update in case it exists.
     */
    where: BidsWhereUniqueInput
    /**
     * In case the Bids found by the `where` argument doesn't exist, create a new Bids with this data.
     */
    create: XOR<BidsCreateInput, BidsUncheckedCreateInput>
    /**
     * In case the Bids was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BidsUpdateInput, BidsUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Bids delete
   */
  export type BidsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bids
     */
    select?: BidsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BidsInclude<ExtArgs> | null
    /**
     * Filter which Bids to delete.
     */
    where: BidsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Bids deleteMany
   */
  export type BidsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Bids to delete
     */
    where?: BidsWhereInput
  }

  /**
   * Bids without action
   */
  export type BidsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bids
     */
    select?: BidsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BidsInclude<ExtArgs> | null
  }


  /**
   * Model Assignment
   */

  export type AggregateAssignment = {
    _count: AssignmentCountAggregateOutputType | null
    _min: AssignmentMinAggregateOutputType | null
    _max: AssignmentMaxAggregateOutputType | null
  }

  export type AssignmentMinAggregateOutputType = {
    id: string | null
    orderId: string | null
    freelancerId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    status: $Enums.OrderStatus | null
  }

  export type AssignmentMaxAggregateOutputType = {
    id: string | null
    orderId: string | null
    freelancerId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    status: $Enums.OrderStatus | null
  }

  export type AssignmentCountAggregateOutputType = {
    id: number
    orderId: number
    freelancerId: number
    createdAt: number
    updatedAt: number
    status: number
    _all: number
  }


  export type AssignmentMinAggregateInputType = {
    id?: true
    orderId?: true
    freelancerId?: true
    createdAt?: true
    updatedAt?: true
    status?: true
  }

  export type AssignmentMaxAggregateInputType = {
    id?: true
    orderId?: true
    freelancerId?: true
    createdAt?: true
    updatedAt?: true
    status?: true
  }

  export type AssignmentCountAggregateInputType = {
    id?: true
    orderId?: true
    freelancerId?: true
    createdAt?: true
    updatedAt?: true
    status?: true
    _all?: true
  }

  export type AssignmentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Assignment to aggregate.
     */
    where?: AssignmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Assignments to fetch.
     */
    orderBy?: AssignmentOrderByWithRelationInput | AssignmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AssignmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Assignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Assignments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Assignments
    **/
    _count?: true | AssignmentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AssignmentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AssignmentMaxAggregateInputType
  }

  export type GetAssignmentAggregateType<T extends AssignmentAggregateArgs> = {
        [P in keyof T & keyof AggregateAssignment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAssignment[P]>
      : GetScalarType<T[P], AggregateAssignment[P]>
  }




  export type AssignmentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AssignmentWhereInput
    orderBy?: AssignmentOrderByWithAggregationInput | AssignmentOrderByWithAggregationInput[]
    by: AssignmentScalarFieldEnum[] | AssignmentScalarFieldEnum
    having?: AssignmentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AssignmentCountAggregateInputType | true
    _min?: AssignmentMinAggregateInputType
    _max?: AssignmentMaxAggregateInputType
  }

  export type AssignmentGroupByOutputType = {
    id: string
    orderId: string
    freelancerId: string
    createdAt: Date
    updatedAt: Date
    status: $Enums.OrderStatus
    _count: AssignmentCountAggregateOutputType | null
    _min: AssignmentMinAggregateOutputType | null
    _max: AssignmentMaxAggregateOutputType | null
  }

  type GetAssignmentGroupByPayload<T extends AssignmentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AssignmentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AssignmentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AssignmentGroupByOutputType[P]>
            : GetScalarType<T[P], AssignmentGroupByOutputType[P]>
        }
      >
    >


  export type AssignmentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    freelancerId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    status?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    freelancer?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["assignment"]>

  export type AssignmentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    freelancerId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    status?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    freelancer?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["assignment"]>

  export type AssignmentSelectScalar = {
    id?: boolean
    orderId?: boolean
    freelancerId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    status?: boolean
  }

  export type AssignmentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    freelancer?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type AssignmentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    freelancer?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $AssignmentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Assignment"
    objects: {
      order: Prisma.$OrderPayload<ExtArgs>
      freelancer: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      orderId: string
      freelancerId: string
      createdAt: Date
      updatedAt: Date
      status: $Enums.OrderStatus
    }, ExtArgs["result"]["assignment"]>
    composites: {}
  }

  type AssignmentGetPayload<S extends boolean | null | undefined | AssignmentDefaultArgs> = $Result.GetResult<Prisma.$AssignmentPayload, S>

  type AssignmentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AssignmentFindManyArgs, 'select' | 'include' | 'distinct' | 'relationLoadStrategy'> & {
      select?: AssignmentCountAggregateInputType | true
    }

  export interface AssignmentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Assignment'], meta: { name: 'Assignment' } }
    /**
     * Find zero or one Assignment that matches the filter.
     * @param {AssignmentFindUniqueArgs} args - Arguments to find a Assignment
     * @example
     * // Get one Assignment
     * const assignment = await prisma.assignment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AssignmentFindUniqueArgs>(args: SelectSubset<T, AssignmentFindUniqueArgs<ExtArgs>>): Prisma__AssignmentClient<$Result.GetResult<Prisma.$AssignmentPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Assignment that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AssignmentFindUniqueOrThrowArgs} args - Arguments to find a Assignment
     * @example
     * // Get one Assignment
     * const assignment = await prisma.assignment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AssignmentFindUniqueOrThrowArgs>(args: SelectSubset<T, AssignmentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AssignmentClient<$Result.GetResult<Prisma.$AssignmentPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Assignment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssignmentFindFirstArgs} args - Arguments to find a Assignment
     * @example
     * // Get one Assignment
     * const assignment = await prisma.assignment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AssignmentFindFirstArgs>(args?: SelectSubset<T, AssignmentFindFirstArgs<ExtArgs>>): Prisma__AssignmentClient<$Result.GetResult<Prisma.$AssignmentPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Assignment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssignmentFindFirstOrThrowArgs} args - Arguments to find a Assignment
     * @example
     * // Get one Assignment
     * const assignment = await prisma.assignment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AssignmentFindFirstOrThrowArgs>(args?: SelectSubset<T, AssignmentFindFirstOrThrowArgs<ExtArgs>>): Prisma__AssignmentClient<$Result.GetResult<Prisma.$AssignmentPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Assignments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssignmentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Assignments
     * const assignments = await prisma.assignment.findMany()
     * 
     * // Get first 10 Assignments
     * const assignments = await prisma.assignment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const assignmentWithIdOnly = await prisma.assignment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AssignmentFindManyArgs>(args?: SelectSubset<T, AssignmentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AssignmentPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Assignment.
     * @param {AssignmentCreateArgs} args - Arguments to create a Assignment.
     * @example
     * // Create one Assignment
     * const Assignment = await prisma.assignment.create({
     *   data: {
     *     // ... data to create a Assignment
     *   }
     * })
     * 
     */
    create<T extends AssignmentCreateArgs>(args: SelectSubset<T, AssignmentCreateArgs<ExtArgs>>): Prisma__AssignmentClient<$Result.GetResult<Prisma.$AssignmentPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Assignments.
     * @param {AssignmentCreateManyArgs} args - Arguments to create many Assignments.
     * @example
     * // Create many Assignments
     * const assignment = await prisma.assignment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AssignmentCreateManyArgs>(args?: SelectSubset<T, AssignmentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Assignments and returns the data saved in the database.
     * @param {AssignmentCreateManyAndReturnArgs} args - Arguments to create many Assignments.
     * @example
     * // Create many Assignments
     * const assignment = await prisma.assignment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Assignments and only return the `id`
     * const assignmentWithIdOnly = await prisma.assignment.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AssignmentCreateManyAndReturnArgs>(args?: SelectSubset<T, AssignmentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AssignmentPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Assignment.
     * @param {AssignmentDeleteArgs} args - Arguments to delete one Assignment.
     * @example
     * // Delete one Assignment
     * const Assignment = await prisma.assignment.delete({
     *   where: {
     *     // ... filter to delete one Assignment
     *   }
     * })
     * 
     */
    delete<T extends AssignmentDeleteArgs>(args: SelectSubset<T, AssignmentDeleteArgs<ExtArgs>>): Prisma__AssignmentClient<$Result.GetResult<Prisma.$AssignmentPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Assignment.
     * @param {AssignmentUpdateArgs} args - Arguments to update one Assignment.
     * @example
     * // Update one Assignment
     * const assignment = await prisma.assignment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AssignmentUpdateArgs>(args: SelectSubset<T, AssignmentUpdateArgs<ExtArgs>>): Prisma__AssignmentClient<$Result.GetResult<Prisma.$AssignmentPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Assignments.
     * @param {AssignmentDeleteManyArgs} args - Arguments to filter Assignments to delete.
     * @example
     * // Delete a few Assignments
     * const { count } = await prisma.assignment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AssignmentDeleteManyArgs>(args?: SelectSubset<T, AssignmentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Assignments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssignmentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Assignments
     * const assignment = await prisma.assignment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AssignmentUpdateManyArgs>(args: SelectSubset<T, AssignmentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Assignment.
     * @param {AssignmentUpsertArgs} args - Arguments to update or create a Assignment.
     * @example
     * // Update or create a Assignment
     * const assignment = await prisma.assignment.upsert({
     *   create: {
     *     // ... data to create a Assignment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Assignment we want to update
     *   }
     * })
     */
    upsert<T extends AssignmentUpsertArgs>(args: SelectSubset<T, AssignmentUpsertArgs<ExtArgs>>): Prisma__AssignmentClient<$Result.GetResult<Prisma.$AssignmentPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Assignments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssignmentCountArgs} args - Arguments to filter Assignments to count.
     * @example
     * // Count the number of Assignments
     * const count = await prisma.assignment.count({
     *   where: {
     *     // ... the filter for the Assignments we want to count
     *   }
     * })
    **/
    count<T extends AssignmentCountArgs>(
      args?: Subset<T, AssignmentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AssignmentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Assignment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssignmentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AssignmentAggregateArgs>(args: Subset<T, AssignmentAggregateArgs>): Prisma.PrismaPromise<GetAssignmentAggregateType<T>>

    /**
     * Group by Assignment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssignmentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AssignmentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AssignmentGroupByArgs['orderBy'] }
        : { orderBy?: AssignmentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AssignmentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAssignmentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Assignment model
   */
  readonly fields: AssignmentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Assignment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AssignmentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order<T extends OrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrderDefaultArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    freelancer<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Assignment model
   */ 
  interface AssignmentFieldRefs {
    readonly id: FieldRef<"Assignment", 'String'>
    readonly orderId: FieldRef<"Assignment", 'String'>
    readonly freelancerId: FieldRef<"Assignment", 'String'>
    readonly createdAt: FieldRef<"Assignment", 'DateTime'>
    readonly updatedAt: FieldRef<"Assignment", 'DateTime'>
    readonly status: FieldRef<"Assignment", 'OrderStatus'>
  }
    

  // Custom InputTypes
  /**
   * Assignment findUnique
   */
  export type AssignmentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Assignment
     */
    select?: AssignmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssignmentInclude<ExtArgs> | null
    /**
     * Filter, which Assignment to fetch.
     */
    where: AssignmentWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Assignment findUniqueOrThrow
   */
  export type AssignmentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Assignment
     */
    select?: AssignmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssignmentInclude<ExtArgs> | null
    /**
     * Filter, which Assignment to fetch.
     */
    where: AssignmentWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Assignment findFirst
   */
  export type AssignmentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Assignment
     */
    select?: AssignmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssignmentInclude<ExtArgs> | null
    /**
     * Filter, which Assignment to fetch.
     */
    where?: AssignmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Assignments to fetch.
     */
    orderBy?: AssignmentOrderByWithRelationInput | AssignmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Assignments.
     */
    cursor?: AssignmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Assignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Assignments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Assignments.
     */
    distinct?: AssignmentScalarFieldEnum | AssignmentScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Assignment findFirstOrThrow
   */
  export type AssignmentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Assignment
     */
    select?: AssignmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssignmentInclude<ExtArgs> | null
    /**
     * Filter, which Assignment to fetch.
     */
    where?: AssignmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Assignments to fetch.
     */
    orderBy?: AssignmentOrderByWithRelationInput | AssignmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Assignments.
     */
    cursor?: AssignmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Assignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Assignments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Assignments.
     */
    distinct?: AssignmentScalarFieldEnum | AssignmentScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Assignment findMany
   */
  export type AssignmentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Assignment
     */
    select?: AssignmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssignmentInclude<ExtArgs> | null
    /**
     * Filter, which Assignments to fetch.
     */
    where?: AssignmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Assignments to fetch.
     */
    orderBy?: AssignmentOrderByWithRelationInput | AssignmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Assignments.
     */
    cursor?: AssignmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Assignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Assignments.
     */
    skip?: number
    distinct?: AssignmentScalarFieldEnum | AssignmentScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Assignment create
   */
  export type AssignmentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Assignment
     */
    select?: AssignmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssignmentInclude<ExtArgs> | null
    /**
     * The data needed to create a Assignment.
     */
    data: XOR<AssignmentCreateInput, AssignmentUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Assignment createMany
   */
  export type AssignmentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Assignments.
     */
    data: AssignmentCreateManyInput | AssignmentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Assignment createManyAndReturn
   */
  export type AssignmentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Assignment
     */
    select?: AssignmentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Assignments.
     */
    data: AssignmentCreateManyInput | AssignmentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssignmentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Assignment update
   */
  export type AssignmentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Assignment
     */
    select?: AssignmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssignmentInclude<ExtArgs> | null
    /**
     * The data needed to update a Assignment.
     */
    data: XOR<AssignmentUpdateInput, AssignmentUncheckedUpdateInput>
    /**
     * Choose, which Assignment to update.
     */
    where: AssignmentWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Assignment updateMany
   */
  export type AssignmentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Assignments.
     */
    data: XOR<AssignmentUpdateManyMutationInput, AssignmentUncheckedUpdateManyInput>
    /**
     * Filter which Assignments to update
     */
    where?: AssignmentWhereInput
  }

  /**
   * Assignment upsert
   */
  export type AssignmentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Assignment
     */
    select?: AssignmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssignmentInclude<ExtArgs> | null
    /**
     * The filter to search for the Assignment to update in case it exists.
     */
    where: AssignmentWhereUniqueInput
    /**
     * In case the Assignment found by the `where` argument doesn't exist, create a new Assignment with this data.
     */
    create: XOR<AssignmentCreateInput, AssignmentUncheckedCreateInput>
    /**
     * In case the Assignment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AssignmentUpdateInput, AssignmentUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Assignment delete
   */
  export type AssignmentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Assignment
     */
    select?: AssignmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssignmentInclude<ExtArgs> | null
    /**
     * Filter which Assignment to delete.
     */
    where: AssignmentWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Assignment deleteMany
   */
  export type AssignmentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Assignments to delete
     */
    where?: AssignmentWhereInput
  }

  /**
   * Assignment without action
   */
  export type AssignmentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Assignment
     */
    select?: AssignmentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssignmentInclude<ExtArgs> | null
  }


  /**
   * Model SubmittedJobs
   */

  export type AggregateSubmittedJobs = {
    _count: SubmittedJobsCountAggregateOutputType | null
    _min: SubmittedJobsMinAggregateOutputType | null
    _max: SubmittedJobsMaxAggregateOutputType | null
  }

  export type SubmittedJobsMinAggregateOutputType = {
    id: string | null
    orderId: string | null
    freelancerId: string | null
    file_Path: string | null
    file_mimeType: string | null
    createdAt: Date | null
    updatedAt: Date | null
    status: $Enums.OrderStatus | null
  }

  export type SubmittedJobsMaxAggregateOutputType = {
    id: string | null
    orderId: string | null
    freelancerId: string | null
    file_Path: string | null
    file_mimeType: string | null
    createdAt: Date | null
    updatedAt: Date | null
    status: $Enums.OrderStatus | null
  }

  export type SubmittedJobsCountAggregateOutputType = {
    id: number
    orderId: number
    freelancerId: number
    file_Path: number
    file_mimeType: number
    createdAt: number
    updatedAt: number
    status: number
    _all: number
  }


  export type SubmittedJobsMinAggregateInputType = {
    id?: true
    orderId?: true
    freelancerId?: true
    file_Path?: true
    file_mimeType?: true
    createdAt?: true
    updatedAt?: true
    status?: true
  }

  export type SubmittedJobsMaxAggregateInputType = {
    id?: true
    orderId?: true
    freelancerId?: true
    file_Path?: true
    file_mimeType?: true
    createdAt?: true
    updatedAt?: true
    status?: true
  }

  export type SubmittedJobsCountAggregateInputType = {
    id?: true
    orderId?: true
    freelancerId?: true
    file_Path?: true
    file_mimeType?: true
    createdAt?: true
    updatedAt?: true
    status?: true
    _all?: true
  }

  export type SubmittedJobsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SubmittedJobs to aggregate.
     */
    where?: SubmittedJobsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SubmittedJobs to fetch.
     */
    orderBy?: SubmittedJobsOrderByWithRelationInput | SubmittedJobsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SubmittedJobsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SubmittedJobs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SubmittedJobs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SubmittedJobs
    **/
    _count?: true | SubmittedJobsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SubmittedJobsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SubmittedJobsMaxAggregateInputType
  }

  export type GetSubmittedJobsAggregateType<T extends SubmittedJobsAggregateArgs> = {
        [P in keyof T & keyof AggregateSubmittedJobs]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSubmittedJobs[P]>
      : GetScalarType<T[P], AggregateSubmittedJobs[P]>
  }




  export type SubmittedJobsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SubmittedJobsWhereInput
    orderBy?: SubmittedJobsOrderByWithAggregationInput | SubmittedJobsOrderByWithAggregationInput[]
    by: SubmittedJobsScalarFieldEnum[] | SubmittedJobsScalarFieldEnum
    having?: SubmittedJobsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SubmittedJobsCountAggregateInputType | true
    _min?: SubmittedJobsMinAggregateInputType
    _max?: SubmittedJobsMaxAggregateInputType
  }

  export type SubmittedJobsGroupByOutputType = {
    id: string
    orderId: string
    freelancerId: string
    file_Path: string
    file_mimeType: string
    createdAt: Date
    updatedAt: Date
    status: $Enums.OrderStatus
    _count: SubmittedJobsCountAggregateOutputType | null
    _min: SubmittedJobsMinAggregateOutputType | null
    _max: SubmittedJobsMaxAggregateOutputType | null
  }

  type GetSubmittedJobsGroupByPayload<T extends SubmittedJobsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SubmittedJobsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SubmittedJobsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SubmittedJobsGroupByOutputType[P]>
            : GetScalarType<T[P], SubmittedJobsGroupByOutputType[P]>
        }
      >
    >


  export type SubmittedJobsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    freelancerId?: boolean
    file_Path?: boolean
    file_mimeType?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    status?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    freelancer?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["submittedJobs"]>

  export type SubmittedJobsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    freelancerId?: boolean
    file_Path?: boolean
    file_mimeType?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    status?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    freelancer?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["submittedJobs"]>

  export type SubmittedJobsSelectScalar = {
    id?: boolean
    orderId?: boolean
    freelancerId?: boolean
    file_Path?: boolean
    file_mimeType?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    status?: boolean
  }

  export type SubmittedJobsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    freelancer?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type SubmittedJobsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    freelancer?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $SubmittedJobsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SubmittedJobs"
    objects: {
      order: Prisma.$OrderPayload<ExtArgs>
      freelancer: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      orderId: string
      freelancerId: string
      file_Path: string
      file_mimeType: string
      createdAt: Date
      updatedAt: Date
      status: $Enums.OrderStatus
    }, ExtArgs["result"]["submittedJobs"]>
    composites: {}
  }

  type SubmittedJobsGetPayload<S extends boolean | null | undefined | SubmittedJobsDefaultArgs> = $Result.GetResult<Prisma.$SubmittedJobsPayload, S>

  type SubmittedJobsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SubmittedJobsFindManyArgs, 'select' | 'include' | 'distinct' | 'relationLoadStrategy'> & {
      select?: SubmittedJobsCountAggregateInputType | true
    }

  export interface SubmittedJobsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SubmittedJobs'], meta: { name: 'SubmittedJobs' } }
    /**
     * Find zero or one SubmittedJobs that matches the filter.
     * @param {SubmittedJobsFindUniqueArgs} args - Arguments to find a SubmittedJobs
     * @example
     * // Get one SubmittedJobs
     * const submittedJobs = await prisma.submittedJobs.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SubmittedJobsFindUniqueArgs>(args: SelectSubset<T, SubmittedJobsFindUniqueArgs<ExtArgs>>): Prisma__SubmittedJobsClient<$Result.GetResult<Prisma.$SubmittedJobsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one SubmittedJobs that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SubmittedJobsFindUniqueOrThrowArgs} args - Arguments to find a SubmittedJobs
     * @example
     * // Get one SubmittedJobs
     * const submittedJobs = await prisma.submittedJobs.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SubmittedJobsFindUniqueOrThrowArgs>(args: SelectSubset<T, SubmittedJobsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SubmittedJobsClient<$Result.GetResult<Prisma.$SubmittedJobsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first SubmittedJobs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubmittedJobsFindFirstArgs} args - Arguments to find a SubmittedJobs
     * @example
     * // Get one SubmittedJobs
     * const submittedJobs = await prisma.submittedJobs.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SubmittedJobsFindFirstArgs>(args?: SelectSubset<T, SubmittedJobsFindFirstArgs<ExtArgs>>): Prisma__SubmittedJobsClient<$Result.GetResult<Prisma.$SubmittedJobsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first SubmittedJobs that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubmittedJobsFindFirstOrThrowArgs} args - Arguments to find a SubmittedJobs
     * @example
     * // Get one SubmittedJobs
     * const submittedJobs = await prisma.submittedJobs.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SubmittedJobsFindFirstOrThrowArgs>(args?: SelectSubset<T, SubmittedJobsFindFirstOrThrowArgs<ExtArgs>>): Prisma__SubmittedJobsClient<$Result.GetResult<Prisma.$SubmittedJobsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more SubmittedJobs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubmittedJobsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SubmittedJobs
     * const submittedJobs = await prisma.submittedJobs.findMany()
     * 
     * // Get first 10 SubmittedJobs
     * const submittedJobs = await prisma.submittedJobs.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const submittedJobsWithIdOnly = await prisma.submittedJobs.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SubmittedJobsFindManyArgs>(args?: SelectSubset<T, SubmittedJobsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubmittedJobsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a SubmittedJobs.
     * @param {SubmittedJobsCreateArgs} args - Arguments to create a SubmittedJobs.
     * @example
     * // Create one SubmittedJobs
     * const SubmittedJobs = await prisma.submittedJobs.create({
     *   data: {
     *     // ... data to create a SubmittedJobs
     *   }
     * })
     * 
     */
    create<T extends SubmittedJobsCreateArgs>(args: SelectSubset<T, SubmittedJobsCreateArgs<ExtArgs>>): Prisma__SubmittedJobsClient<$Result.GetResult<Prisma.$SubmittedJobsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many SubmittedJobs.
     * @param {SubmittedJobsCreateManyArgs} args - Arguments to create many SubmittedJobs.
     * @example
     * // Create many SubmittedJobs
     * const submittedJobs = await prisma.submittedJobs.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SubmittedJobsCreateManyArgs>(args?: SelectSubset<T, SubmittedJobsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SubmittedJobs and returns the data saved in the database.
     * @param {SubmittedJobsCreateManyAndReturnArgs} args - Arguments to create many SubmittedJobs.
     * @example
     * // Create many SubmittedJobs
     * const submittedJobs = await prisma.submittedJobs.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SubmittedJobs and only return the `id`
     * const submittedJobsWithIdOnly = await prisma.submittedJobs.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SubmittedJobsCreateManyAndReturnArgs>(args?: SelectSubset<T, SubmittedJobsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubmittedJobsPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a SubmittedJobs.
     * @param {SubmittedJobsDeleteArgs} args - Arguments to delete one SubmittedJobs.
     * @example
     * // Delete one SubmittedJobs
     * const SubmittedJobs = await prisma.submittedJobs.delete({
     *   where: {
     *     // ... filter to delete one SubmittedJobs
     *   }
     * })
     * 
     */
    delete<T extends SubmittedJobsDeleteArgs>(args: SelectSubset<T, SubmittedJobsDeleteArgs<ExtArgs>>): Prisma__SubmittedJobsClient<$Result.GetResult<Prisma.$SubmittedJobsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one SubmittedJobs.
     * @param {SubmittedJobsUpdateArgs} args - Arguments to update one SubmittedJobs.
     * @example
     * // Update one SubmittedJobs
     * const submittedJobs = await prisma.submittedJobs.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SubmittedJobsUpdateArgs>(args: SelectSubset<T, SubmittedJobsUpdateArgs<ExtArgs>>): Prisma__SubmittedJobsClient<$Result.GetResult<Prisma.$SubmittedJobsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more SubmittedJobs.
     * @param {SubmittedJobsDeleteManyArgs} args - Arguments to filter SubmittedJobs to delete.
     * @example
     * // Delete a few SubmittedJobs
     * const { count } = await prisma.submittedJobs.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SubmittedJobsDeleteManyArgs>(args?: SelectSubset<T, SubmittedJobsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SubmittedJobs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubmittedJobsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SubmittedJobs
     * const submittedJobs = await prisma.submittedJobs.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SubmittedJobsUpdateManyArgs>(args: SelectSubset<T, SubmittedJobsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SubmittedJobs.
     * @param {SubmittedJobsUpsertArgs} args - Arguments to update or create a SubmittedJobs.
     * @example
     * // Update or create a SubmittedJobs
     * const submittedJobs = await prisma.submittedJobs.upsert({
     *   create: {
     *     // ... data to create a SubmittedJobs
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SubmittedJobs we want to update
     *   }
     * })
     */
    upsert<T extends SubmittedJobsUpsertArgs>(args: SelectSubset<T, SubmittedJobsUpsertArgs<ExtArgs>>): Prisma__SubmittedJobsClient<$Result.GetResult<Prisma.$SubmittedJobsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of SubmittedJobs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubmittedJobsCountArgs} args - Arguments to filter SubmittedJobs to count.
     * @example
     * // Count the number of SubmittedJobs
     * const count = await prisma.submittedJobs.count({
     *   where: {
     *     // ... the filter for the SubmittedJobs we want to count
     *   }
     * })
    **/
    count<T extends SubmittedJobsCountArgs>(
      args?: Subset<T, SubmittedJobsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SubmittedJobsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SubmittedJobs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubmittedJobsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SubmittedJobsAggregateArgs>(args: Subset<T, SubmittedJobsAggregateArgs>): Prisma.PrismaPromise<GetSubmittedJobsAggregateType<T>>

    /**
     * Group by SubmittedJobs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubmittedJobsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SubmittedJobsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SubmittedJobsGroupByArgs['orderBy'] }
        : { orderBy?: SubmittedJobsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SubmittedJobsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSubmittedJobsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SubmittedJobs model
   */
  readonly fields: SubmittedJobsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SubmittedJobs.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SubmittedJobsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order<T extends OrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrderDefaultArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    freelancer<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SubmittedJobs model
   */ 
  interface SubmittedJobsFieldRefs {
    readonly id: FieldRef<"SubmittedJobs", 'String'>
    readonly orderId: FieldRef<"SubmittedJobs", 'String'>
    readonly freelancerId: FieldRef<"SubmittedJobs", 'String'>
    readonly file_Path: FieldRef<"SubmittedJobs", 'String'>
    readonly file_mimeType: FieldRef<"SubmittedJobs", 'String'>
    readonly createdAt: FieldRef<"SubmittedJobs", 'DateTime'>
    readonly updatedAt: FieldRef<"SubmittedJobs", 'DateTime'>
    readonly status: FieldRef<"SubmittedJobs", 'OrderStatus'>
  }
    

  // Custom InputTypes
  /**
   * SubmittedJobs findUnique
   */
  export type SubmittedJobsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubmittedJobs
     */
    select?: SubmittedJobsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubmittedJobsInclude<ExtArgs> | null
    /**
     * Filter, which SubmittedJobs to fetch.
     */
    where: SubmittedJobsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * SubmittedJobs findUniqueOrThrow
   */
  export type SubmittedJobsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubmittedJobs
     */
    select?: SubmittedJobsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubmittedJobsInclude<ExtArgs> | null
    /**
     * Filter, which SubmittedJobs to fetch.
     */
    where: SubmittedJobsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * SubmittedJobs findFirst
   */
  export type SubmittedJobsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubmittedJobs
     */
    select?: SubmittedJobsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubmittedJobsInclude<ExtArgs> | null
    /**
     * Filter, which SubmittedJobs to fetch.
     */
    where?: SubmittedJobsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SubmittedJobs to fetch.
     */
    orderBy?: SubmittedJobsOrderByWithRelationInput | SubmittedJobsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SubmittedJobs.
     */
    cursor?: SubmittedJobsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SubmittedJobs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SubmittedJobs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SubmittedJobs.
     */
    distinct?: SubmittedJobsScalarFieldEnum | SubmittedJobsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * SubmittedJobs findFirstOrThrow
   */
  export type SubmittedJobsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubmittedJobs
     */
    select?: SubmittedJobsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubmittedJobsInclude<ExtArgs> | null
    /**
     * Filter, which SubmittedJobs to fetch.
     */
    where?: SubmittedJobsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SubmittedJobs to fetch.
     */
    orderBy?: SubmittedJobsOrderByWithRelationInput | SubmittedJobsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SubmittedJobs.
     */
    cursor?: SubmittedJobsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SubmittedJobs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SubmittedJobs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SubmittedJobs.
     */
    distinct?: SubmittedJobsScalarFieldEnum | SubmittedJobsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * SubmittedJobs findMany
   */
  export type SubmittedJobsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubmittedJobs
     */
    select?: SubmittedJobsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubmittedJobsInclude<ExtArgs> | null
    /**
     * Filter, which SubmittedJobs to fetch.
     */
    where?: SubmittedJobsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SubmittedJobs to fetch.
     */
    orderBy?: SubmittedJobsOrderByWithRelationInput | SubmittedJobsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SubmittedJobs.
     */
    cursor?: SubmittedJobsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SubmittedJobs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SubmittedJobs.
     */
    skip?: number
    distinct?: SubmittedJobsScalarFieldEnum | SubmittedJobsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * SubmittedJobs create
   */
  export type SubmittedJobsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubmittedJobs
     */
    select?: SubmittedJobsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubmittedJobsInclude<ExtArgs> | null
    /**
     * The data needed to create a SubmittedJobs.
     */
    data: XOR<SubmittedJobsCreateInput, SubmittedJobsUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * SubmittedJobs createMany
   */
  export type SubmittedJobsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SubmittedJobs.
     */
    data: SubmittedJobsCreateManyInput | SubmittedJobsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SubmittedJobs createManyAndReturn
   */
  export type SubmittedJobsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubmittedJobs
     */
    select?: SubmittedJobsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many SubmittedJobs.
     */
    data: SubmittedJobsCreateManyInput | SubmittedJobsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubmittedJobsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SubmittedJobs update
   */
  export type SubmittedJobsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubmittedJobs
     */
    select?: SubmittedJobsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubmittedJobsInclude<ExtArgs> | null
    /**
     * The data needed to update a SubmittedJobs.
     */
    data: XOR<SubmittedJobsUpdateInput, SubmittedJobsUncheckedUpdateInput>
    /**
     * Choose, which SubmittedJobs to update.
     */
    where: SubmittedJobsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * SubmittedJobs updateMany
   */
  export type SubmittedJobsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SubmittedJobs.
     */
    data: XOR<SubmittedJobsUpdateManyMutationInput, SubmittedJobsUncheckedUpdateManyInput>
    /**
     * Filter which SubmittedJobs to update
     */
    where?: SubmittedJobsWhereInput
  }

  /**
   * SubmittedJobs upsert
   */
  export type SubmittedJobsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubmittedJobs
     */
    select?: SubmittedJobsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubmittedJobsInclude<ExtArgs> | null
    /**
     * The filter to search for the SubmittedJobs to update in case it exists.
     */
    where: SubmittedJobsWhereUniqueInput
    /**
     * In case the SubmittedJobs found by the `where` argument doesn't exist, create a new SubmittedJobs with this data.
     */
    create: XOR<SubmittedJobsCreateInput, SubmittedJobsUncheckedCreateInput>
    /**
     * In case the SubmittedJobs was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SubmittedJobsUpdateInput, SubmittedJobsUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * SubmittedJobs delete
   */
  export type SubmittedJobsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubmittedJobs
     */
    select?: SubmittedJobsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubmittedJobsInclude<ExtArgs> | null
    /**
     * Filter which SubmittedJobs to delete.
     */
    where: SubmittedJobsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * SubmittedJobs deleteMany
   */
  export type SubmittedJobsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SubmittedJobs to delete
     */
    where?: SubmittedJobsWhereInput
  }

  /**
   * SubmittedJobs without action
   */
  export type SubmittedJobsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubmittedJobs
     */
    select?: SubmittedJobsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubmittedJobsInclude<ExtArgs> | null
  }


  /**
   * Model CancelledJobs
   */

  export type AggregateCancelledJobs = {
    _count: CancelledJobsCountAggregateOutputType | null
    _min: CancelledJobsMinAggregateOutputType | null
    _max: CancelledJobsMaxAggregateOutputType | null
  }

  export type CancelledJobsMinAggregateOutputType = {
    id: string | null
    orderId: string | null
    freelancerId: string | null
    attachments: string | null
    createdAt: Date | null
    updatedAt: Date | null
    status: $Enums.OrderStatus | null
  }

  export type CancelledJobsMaxAggregateOutputType = {
    id: string | null
    orderId: string | null
    freelancerId: string | null
    attachments: string | null
    createdAt: Date | null
    updatedAt: Date | null
    status: $Enums.OrderStatus | null
  }

  export type CancelledJobsCountAggregateOutputType = {
    id: number
    orderId: number
    freelancerId: number
    attachments: number
    createdAt: number
    updatedAt: number
    status: number
    _all: number
  }


  export type CancelledJobsMinAggregateInputType = {
    id?: true
    orderId?: true
    freelancerId?: true
    attachments?: true
    createdAt?: true
    updatedAt?: true
    status?: true
  }

  export type CancelledJobsMaxAggregateInputType = {
    id?: true
    orderId?: true
    freelancerId?: true
    attachments?: true
    createdAt?: true
    updatedAt?: true
    status?: true
  }

  export type CancelledJobsCountAggregateInputType = {
    id?: true
    orderId?: true
    freelancerId?: true
    attachments?: true
    createdAt?: true
    updatedAt?: true
    status?: true
    _all?: true
  }

  export type CancelledJobsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CancelledJobs to aggregate.
     */
    where?: CancelledJobsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CancelledJobs to fetch.
     */
    orderBy?: CancelledJobsOrderByWithRelationInput | CancelledJobsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CancelledJobsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CancelledJobs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CancelledJobs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CancelledJobs
    **/
    _count?: true | CancelledJobsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CancelledJobsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CancelledJobsMaxAggregateInputType
  }

  export type GetCancelledJobsAggregateType<T extends CancelledJobsAggregateArgs> = {
        [P in keyof T & keyof AggregateCancelledJobs]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCancelledJobs[P]>
      : GetScalarType<T[P], AggregateCancelledJobs[P]>
  }




  export type CancelledJobsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CancelledJobsWhereInput
    orderBy?: CancelledJobsOrderByWithAggregationInput | CancelledJobsOrderByWithAggregationInput[]
    by: CancelledJobsScalarFieldEnum[] | CancelledJobsScalarFieldEnum
    having?: CancelledJobsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CancelledJobsCountAggregateInputType | true
    _min?: CancelledJobsMinAggregateInputType
    _max?: CancelledJobsMaxAggregateInputType
  }

  export type CancelledJobsGroupByOutputType = {
    id: string
    orderId: string
    freelancerId: string
    attachments: string | null
    createdAt: Date
    updatedAt: Date
    status: $Enums.OrderStatus
    _count: CancelledJobsCountAggregateOutputType | null
    _min: CancelledJobsMinAggregateOutputType | null
    _max: CancelledJobsMaxAggregateOutputType | null
  }

  type GetCancelledJobsGroupByPayload<T extends CancelledJobsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CancelledJobsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CancelledJobsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CancelledJobsGroupByOutputType[P]>
            : GetScalarType<T[P], CancelledJobsGroupByOutputType[P]>
        }
      >
    >


  export type CancelledJobsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    freelancerId?: boolean
    attachments?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    status?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    freelancer?: boolean | CancelledJobs$freelancerArgs<ExtArgs>
  }, ExtArgs["result"]["cancelledJobs"]>

  export type CancelledJobsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    freelancerId?: boolean
    attachments?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    status?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    freelancer?: boolean | CancelledJobs$freelancerArgs<ExtArgs>
  }, ExtArgs["result"]["cancelledJobs"]>

  export type CancelledJobsSelectScalar = {
    id?: boolean
    orderId?: boolean
    freelancerId?: boolean
    attachments?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    status?: boolean
  }

  export type CancelledJobsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    freelancer?: boolean | CancelledJobs$freelancerArgs<ExtArgs>
  }
  export type CancelledJobsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    freelancer?: boolean | CancelledJobs$freelancerArgs<ExtArgs>
  }

  export type $CancelledJobsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CancelledJobs"
    objects: {
      order: Prisma.$OrderPayload<ExtArgs>
      freelancer: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      orderId: string
      freelancerId: string
      attachments: string | null
      createdAt: Date
      updatedAt: Date
      status: $Enums.OrderStatus
    }, ExtArgs["result"]["cancelledJobs"]>
    composites: {}
  }

  type CancelledJobsGetPayload<S extends boolean | null | undefined | CancelledJobsDefaultArgs> = $Result.GetResult<Prisma.$CancelledJobsPayload, S>

  type CancelledJobsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CancelledJobsFindManyArgs, 'select' | 'include' | 'distinct' | 'relationLoadStrategy'> & {
      select?: CancelledJobsCountAggregateInputType | true
    }

  export interface CancelledJobsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CancelledJobs'], meta: { name: 'CancelledJobs' } }
    /**
     * Find zero or one CancelledJobs that matches the filter.
     * @param {CancelledJobsFindUniqueArgs} args - Arguments to find a CancelledJobs
     * @example
     * // Get one CancelledJobs
     * const cancelledJobs = await prisma.cancelledJobs.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CancelledJobsFindUniqueArgs>(args: SelectSubset<T, CancelledJobsFindUniqueArgs<ExtArgs>>): Prisma__CancelledJobsClient<$Result.GetResult<Prisma.$CancelledJobsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one CancelledJobs that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CancelledJobsFindUniqueOrThrowArgs} args - Arguments to find a CancelledJobs
     * @example
     * // Get one CancelledJobs
     * const cancelledJobs = await prisma.cancelledJobs.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CancelledJobsFindUniqueOrThrowArgs>(args: SelectSubset<T, CancelledJobsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CancelledJobsClient<$Result.GetResult<Prisma.$CancelledJobsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first CancelledJobs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CancelledJobsFindFirstArgs} args - Arguments to find a CancelledJobs
     * @example
     * // Get one CancelledJobs
     * const cancelledJobs = await prisma.cancelledJobs.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CancelledJobsFindFirstArgs>(args?: SelectSubset<T, CancelledJobsFindFirstArgs<ExtArgs>>): Prisma__CancelledJobsClient<$Result.GetResult<Prisma.$CancelledJobsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first CancelledJobs that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CancelledJobsFindFirstOrThrowArgs} args - Arguments to find a CancelledJobs
     * @example
     * // Get one CancelledJobs
     * const cancelledJobs = await prisma.cancelledJobs.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CancelledJobsFindFirstOrThrowArgs>(args?: SelectSubset<T, CancelledJobsFindFirstOrThrowArgs<ExtArgs>>): Prisma__CancelledJobsClient<$Result.GetResult<Prisma.$CancelledJobsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more CancelledJobs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CancelledJobsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CancelledJobs
     * const cancelledJobs = await prisma.cancelledJobs.findMany()
     * 
     * // Get first 10 CancelledJobs
     * const cancelledJobs = await prisma.cancelledJobs.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cancelledJobsWithIdOnly = await prisma.cancelledJobs.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CancelledJobsFindManyArgs>(args?: SelectSubset<T, CancelledJobsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CancelledJobsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a CancelledJobs.
     * @param {CancelledJobsCreateArgs} args - Arguments to create a CancelledJobs.
     * @example
     * // Create one CancelledJobs
     * const CancelledJobs = await prisma.cancelledJobs.create({
     *   data: {
     *     // ... data to create a CancelledJobs
     *   }
     * })
     * 
     */
    create<T extends CancelledJobsCreateArgs>(args: SelectSubset<T, CancelledJobsCreateArgs<ExtArgs>>): Prisma__CancelledJobsClient<$Result.GetResult<Prisma.$CancelledJobsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many CancelledJobs.
     * @param {CancelledJobsCreateManyArgs} args - Arguments to create many CancelledJobs.
     * @example
     * // Create many CancelledJobs
     * const cancelledJobs = await prisma.cancelledJobs.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CancelledJobsCreateManyArgs>(args?: SelectSubset<T, CancelledJobsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CancelledJobs and returns the data saved in the database.
     * @param {CancelledJobsCreateManyAndReturnArgs} args - Arguments to create many CancelledJobs.
     * @example
     * // Create many CancelledJobs
     * const cancelledJobs = await prisma.cancelledJobs.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CancelledJobs and only return the `id`
     * const cancelledJobsWithIdOnly = await prisma.cancelledJobs.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CancelledJobsCreateManyAndReturnArgs>(args?: SelectSubset<T, CancelledJobsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CancelledJobsPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a CancelledJobs.
     * @param {CancelledJobsDeleteArgs} args - Arguments to delete one CancelledJobs.
     * @example
     * // Delete one CancelledJobs
     * const CancelledJobs = await prisma.cancelledJobs.delete({
     *   where: {
     *     // ... filter to delete one CancelledJobs
     *   }
     * })
     * 
     */
    delete<T extends CancelledJobsDeleteArgs>(args: SelectSubset<T, CancelledJobsDeleteArgs<ExtArgs>>): Prisma__CancelledJobsClient<$Result.GetResult<Prisma.$CancelledJobsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one CancelledJobs.
     * @param {CancelledJobsUpdateArgs} args - Arguments to update one CancelledJobs.
     * @example
     * // Update one CancelledJobs
     * const cancelledJobs = await prisma.cancelledJobs.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CancelledJobsUpdateArgs>(args: SelectSubset<T, CancelledJobsUpdateArgs<ExtArgs>>): Prisma__CancelledJobsClient<$Result.GetResult<Prisma.$CancelledJobsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more CancelledJobs.
     * @param {CancelledJobsDeleteManyArgs} args - Arguments to filter CancelledJobs to delete.
     * @example
     * // Delete a few CancelledJobs
     * const { count } = await prisma.cancelledJobs.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CancelledJobsDeleteManyArgs>(args?: SelectSubset<T, CancelledJobsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CancelledJobs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CancelledJobsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CancelledJobs
     * const cancelledJobs = await prisma.cancelledJobs.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CancelledJobsUpdateManyArgs>(args: SelectSubset<T, CancelledJobsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one CancelledJobs.
     * @param {CancelledJobsUpsertArgs} args - Arguments to update or create a CancelledJobs.
     * @example
     * // Update or create a CancelledJobs
     * const cancelledJobs = await prisma.cancelledJobs.upsert({
     *   create: {
     *     // ... data to create a CancelledJobs
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CancelledJobs we want to update
     *   }
     * })
     */
    upsert<T extends CancelledJobsUpsertArgs>(args: SelectSubset<T, CancelledJobsUpsertArgs<ExtArgs>>): Prisma__CancelledJobsClient<$Result.GetResult<Prisma.$CancelledJobsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of CancelledJobs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CancelledJobsCountArgs} args - Arguments to filter CancelledJobs to count.
     * @example
     * // Count the number of CancelledJobs
     * const count = await prisma.cancelledJobs.count({
     *   where: {
     *     // ... the filter for the CancelledJobs we want to count
     *   }
     * })
    **/
    count<T extends CancelledJobsCountArgs>(
      args?: Subset<T, CancelledJobsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CancelledJobsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CancelledJobs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CancelledJobsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CancelledJobsAggregateArgs>(args: Subset<T, CancelledJobsAggregateArgs>): Prisma.PrismaPromise<GetCancelledJobsAggregateType<T>>

    /**
     * Group by CancelledJobs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CancelledJobsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CancelledJobsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CancelledJobsGroupByArgs['orderBy'] }
        : { orderBy?: CancelledJobsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CancelledJobsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCancelledJobsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CancelledJobs model
   */
  readonly fields: CancelledJobsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CancelledJobs.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CancelledJobsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order<T extends OrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrderDefaultArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    freelancer<T extends CancelledJobs$freelancerArgs<ExtArgs> = {}>(args?: Subset<T, CancelledJobs$freelancerArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CancelledJobs model
   */ 
  interface CancelledJobsFieldRefs {
    readonly id: FieldRef<"CancelledJobs", 'String'>
    readonly orderId: FieldRef<"CancelledJobs", 'String'>
    readonly freelancerId: FieldRef<"CancelledJobs", 'String'>
    readonly attachments: FieldRef<"CancelledJobs", 'String'>
    readonly createdAt: FieldRef<"CancelledJobs", 'DateTime'>
    readonly updatedAt: FieldRef<"CancelledJobs", 'DateTime'>
    readonly status: FieldRef<"CancelledJobs", 'OrderStatus'>
  }
    

  // Custom InputTypes
  /**
   * CancelledJobs findUnique
   */
  export type CancelledJobsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CancelledJobs
     */
    select?: CancelledJobsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CancelledJobsInclude<ExtArgs> | null
    /**
     * Filter, which CancelledJobs to fetch.
     */
    where: CancelledJobsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * CancelledJobs findUniqueOrThrow
   */
  export type CancelledJobsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CancelledJobs
     */
    select?: CancelledJobsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CancelledJobsInclude<ExtArgs> | null
    /**
     * Filter, which CancelledJobs to fetch.
     */
    where: CancelledJobsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * CancelledJobs findFirst
   */
  export type CancelledJobsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CancelledJobs
     */
    select?: CancelledJobsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CancelledJobsInclude<ExtArgs> | null
    /**
     * Filter, which CancelledJobs to fetch.
     */
    where?: CancelledJobsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CancelledJobs to fetch.
     */
    orderBy?: CancelledJobsOrderByWithRelationInput | CancelledJobsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CancelledJobs.
     */
    cursor?: CancelledJobsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CancelledJobs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CancelledJobs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CancelledJobs.
     */
    distinct?: CancelledJobsScalarFieldEnum | CancelledJobsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * CancelledJobs findFirstOrThrow
   */
  export type CancelledJobsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CancelledJobs
     */
    select?: CancelledJobsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CancelledJobsInclude<ExtArgs> | null
    /**
     * Filter, which CancelledJobs to fetch.
     */
    where?: CancelledJobsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CancelledJobs to fetch.
     */
    orderBy?: CancelledJobsOrderByWithRelationInput | CancelledJobsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CancelledJobs.
     */
    cursor?: CancelledJobsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CancelledJobs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CancelledJobs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CancelledJobs.
     */
    distinct?: CancelledJobsScalarFieldEnum | CancelledJobsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * CancelledJobs findMany
   */
  export type CancelledJobsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CancelledJobs
     */
    select?: CancelledJobsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CancelledJobsInclude<ExtArgs> | null
    /**
     * Filter, which CancelledJobs to fetch.
     */
    where?: CancelledJobsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CancelledJobs to fetch.
     */
    orderBy?: CancelledJobsOrderByWithRelationInput | CancelledJobsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CancelledJobs.
     */
    cursor?: CancelledJobsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CancelledJobs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CancelledJobs.
     */
    skip?: number
    distinct?: CancelledJobsScalarFieldEnum | CancelledJobsScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * CancelledJobs create
   */
  export type CancelledJobsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CancelledJobs
     */
    select?: CancelledJobsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CancelledJobsInclude<ExtArgs> | null
    /**
     * The data needed to create a CancelledJobs.
     */
    data: XOR<CancelledJobsCreateInput, CancelledJobsUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * CancelledJobs createMany
   */
  export type CancelledJobsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CancelledJobs.
     */
    data: CancelledJobsCreateManyInput | CancelledJobsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CancelledJobs createManyAndReturn
   */
  export type CancelledJobsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CancelledJobs
     */
    select?: CancelledJobsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many CancelledJobs.
     */
    data: CancelledJobsCreateManyInput | CancelledJobsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CancelledJobsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CancelledJobs update
   */
  export type CancelledJobsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CancelledJobs
     */
    select?: CancelledJobsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CancelledJobsInclude<ExtArgs> | null
    /**
     * The data needed to update a CancelledJobs.
     */
    data: XOR<CancelledJobsUpdateInput, CancelledJobsUncheckedUpdateInput>
    /**
     * Choose, which CancelledJobs to update.
     */
    where: CancelledJobsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * CancelledJobs updateMany
   */
  export type CancelledJobsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CancelledJobs.
     */
    data: XOR<CancelledJobsUpdateManyMutationInput, CancelledJobsUncheckedUpdateManyInput>
    /**
     * Filter which CancelledJobs to update
     */
    where?: CancelledJobsWhereInput
  }

  /**
   * CancelledJobs upsert
   */
  export type CancelledJobsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CancelledJobs
     */
    select?: CancelledJobsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CancelledJobsInclude<ExtArgs> | null
    /**
     * The filter to search for the CancelledJobs to update in case it exists.
     */
    where: CancelledJobsWhereUniqueInput
    /**
     * In case the CancelledJobs found by the `where` argument doesn't exist, create a new CancelledJobs with this data.
     */
    create: XOR<CancelledJobsCreateInput, CancelledJobsUncheckedCreateInput>
    /**
     * In case the CancelledJobs was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CancelledJobsUpdateInput, CancelledJobsUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * CancelledJobs delete
   */
  export type CancelledJobsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CancelledJobs
     */
    select?: CancelledJobsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CancelledJobsInclude<ExtArgs> | null
    /**
     * Filter which CancelledJobs to delete.
     */
    where: CancelledJobsWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * CancelledJobs deleteMany
   */
  export type CancelledJobsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CancelledJobs to delete
     */
    where?: CancelledJobsWhereInput
  }

  /**
   * CancelledJobs.freelancer
   */
  export type CancelledJobs$freelancerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * CancelledJobs without action
   */
  export type CancelledJobsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CancelledJobs
     */
    select?: CancelledJobsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CancelledJobsInclude<ExtArgs> | null
  }


  /**
   * Model Invoice
   */

  export type AggregateInvoice = {
    _count: InvoiceCountAggregateOutputType | null
    _avg: InvoiceAvgAggregateOutputType | null
    _sum: InvoiceSumAggregateOutputType | null
    _min: InvoiceMinAggregateOutputType | null
    _max: InvoiceMaxAggregateOutputType | null
  }

  export type InvoiceAvgAggregateOutputType = {
    totalAmount: number | null
    finalAmount: number | null
  }

  export type InvoiceSumAggregateOutputType = {
    totalAmount: number | null
    finalAmount: number | null
  }

  export type InvoiceMinAggregateOutputType = {
    id: string | null
    invoiceNumber: string | null
    createdAt: Date | null
    updatedAt: Date | null
    totalAmount: number | null
    finalAmount: number | null
    userId: string | null
    isDraft: boolean | null
  }

  export type InvoiceMaxAggregateOutputType = {
    id: string | null
    invoiceNumber: string | null
    createdAt: Date | null
    updatedAt: Date | null
    totalAmount: number | null
    finalAmount: number | null
    userId: string | null
    isDraft: boolean | null
  }

  export type InvoiceCountAggregateOutputType = {
    id: number
    invoiceNumber: number
    createdAt: number
    updatedAt: number
    totalAmount: number
    finalAmount: number
    userId: number
    isDraft: number
    _all: number
  }


  export type InvoiceAvgAggregateInputType = {
    totalAmount?: true
    finalAmount?: true
  }

  export type InvoiceSumAggregateInputType = {
    totalAmount?: true
    finalAmount?: true
  }

  export type InvoiceMinAggregateInputType = {
    id?: true
    invoiceNumber?: true
    createdAt?: true
    updatedAt?: true
    totalAmount?: true
    finalAmount?: true
    userId?: true
    isDraft?: true
  }

  export type InvoiceMaxAggregateInputType = {
    id?: true
    invoiceNumber?: true
    createdAt?: true
    updatedAt?: true
    totalAmount?: true
    finalAmount?: true
    userId?: true
    isDraft?: true
  }

  export type InvoiceCountAggregateInputType = {
    id?: true
    invoiceNumber?: true
    createdAt?: true
    updatedAt?: true
    totalAmount?: true
    finalAmount?: true
    userId?: true
    isDraft?: true
    _all?: true
  }

  export type InvoiceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Invoice to aggregate.
     */
    where?: InvoiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Invoices to fetch.
     */
    orderBy?: InvoiceOrderByWithRelationInput | InvoiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: InvoiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Invoices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Invoices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Invoices
    **/
    _count?: true | InvoiceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: InvoiceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: InvoiceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InvoiceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InvoiceMaxAggregateInputType
  }

  export type GetInvoiceAggregateType<T extends InvoiceAggregateArgs> = {
        [P in keyof T & keyof AggregateInvoice]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInvoice[P]>
      : GetScalarType<T[P], AggregateInvoice[P]>
  }




  export type InvoiceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvoiceWhereInput
    orderBy?: InvoiceOrderByWithAggregationInput | InvoiceOrderByWithAggregationInput[]
    by: InvoiceScalarFieldEnum[] | InvoiceScalarFieldEnum
    having?: InvoiceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InvoiceCountAggregateInputType | true
    _avg?: InvoiceAvgAggregateInputType
    _sum?: InvoiceSumAggregateInputType
    _min?: InvoiceMinAggregateInputType
    _max?: InvoiceMaxAggregateInputType
  }

  export type InvoiceGroupByOutputType = {
    id: string
    invoiceNumber: string
    createdAt: Date
    updatedAt: Date
    totalAmount: number
    finalAmount: number
    userId: string
    isDraft: boolean
    _count: InvoiceCountAggregateOutputType | null
    _avg: InvoiceAvgAggregateOutputType | null
    _sum: InvoiceSumAggregateOutputType | null
    _min: InvoiceMinAggregateOutputType | null
    _max: InvoiceMaxAggregateOutputType | null
  }

  type GetInvoiceGroupByPayload<T extends InvoiceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InvoiceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InvoiceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InvoiceGroupByOutputType[P]>
            : GetScalarType<T[P], InvoiceGroupByOutputType[P]>
        }
      >
    >


  export type InvoiceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    invoiceNumber?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    totalAmount?: boolean
    finalAmount?: boolean
    userId?: boolean
    isDraft?: boolean
    orders?: boolean | Invoice$ordersArgs<ExtArgs>
    payments?: boolean | Invoice$paymentsArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    fines?: boolean | Invoice$finesArgs<ExtArgs>
    reviews?: boolean | Invoice$reviewsArgs<ExtArgs>
    _count?: boolean | InvoiceCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["invoice"]>

  export type InvoiceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    invoiceNumber?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    totalAmount?: boolean
    finalAmount?: boolean
    userId?: boolean
    isDraft?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["invoice"]>

  export type InvoiceSelectScalar = {
    id?: boolean
    invoiceNumber?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    totalAmount?: boolean
    finalAmount?: boolean
    userId?: boolean
    isDraft?: boolean
  }

  export type InvoiceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders?: boolean | Invoice$ordersArgs<ExtArgs>
    payments?: boolean | Invoice$paymentsArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    fines?: boolean | Invoice$finesArgs<ExtArgs>
    reviews?: boolean | Invoice$reviewsArgs<ExtArgs>
    _count?: boolean | InvoiceCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type InvoiceIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $InvoicePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Invoice"
    objects: {
      orders: Prisma.$OrderPayload<ExtArgs>[]
      payments: Prisma.$PaymentPayload<ExtArgs>[]
      user: Prisma.$UserPayload<ExtArgs>
      fines: Prisma.$FinesPayload<ExtArgs>[]
      reviews: Prisma.$ReviewPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      invoiceNumber: string
      createdAt: Date
      updatedAt: Date
      totalAmount: number
      finalAmount: number
      userId: string
      isDraft: boolean
    }, ExtArgs["result"]["invoice"]>
    composites: {}
  }

  type InvoiceGetPayload<S extends boolean | null | undefined | InvoiceDefaultArgs> = $Result.GetResult<Prisma.$InvoicePayload, S>

  type InvoiceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<InvoiceFindManyArgs, 'select' | 'include' | 'distinct' | 'relationLoadStrategy'> & {
      select?: InvoiceCountAggregateInputType | true
    }

  export interface InvoiceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Invoice'], meta: { name: 'Invoice' } }
    /**
     * Find zero or one Invoice that matches the filter.
     * @param {InvoiceFindUniqueArgs} args - Arguments to find a Invoice
     * @example
     * // Get one Invoice
     * const invoice = await prisma.invoice.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends InvoiceFindUniqueArgs>(args: SelectSubset<T, InvoiceFindUniqueArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Invoice that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {InvoiceFindUniqueOrThrowArgs} args - Arguments to find a Invoice
     * @example
     * // Get one Invoice
     * const invoice = await prisma.invoice.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends InvoiceFindUniqueOrThrowArgs>(args: SelectSubset<T, InvoiceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Invoice that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceFindFirstArgs} args - Arguments to find a Invoice
     * @example
     * // Get one Invoice
     * const invoice = await prisma.invoice.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends InvoiceFindFirstArgs>(args?: SelectSubset<T, InvoiceFindFirstArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Invoice that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceFindFirstOrThrowArgs} args - Arguments to find a Invoice
     * @example
     * // Get one Invoice
     * const invoice = await prisma.invoice.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends InvoiceFindFirstOrThrowArgs>(args?: SelectSubset<T, InvoiceFindFirstOrThrowArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Invoices that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Invoices
     * const invoices = await prisma.invoice.findMany()
     * 
     * // Get first 10 Invoices
     * const invoices = await prisma.invoice.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const invoiceWithIdOnly = await prisma.invoice.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends InvoiceFindManyArgs>(args?: SelectSubset<T, InvoiceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Invoice.
     * @param {InvoiceCreateArgs} args - Arguments to create a Invoice.
     * @example
     * // Create one Invoice
     * const Invoice = await prisma.invoice.create({
     *   data: {
     *     // ... data to create a Invoice
     *   }
     * })
     * 
     */
    create<T extends InvoiceCreateArgs>(args: SelectSubset<T, InvoiceCreateArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Invoices.
     * @param {InvoiceCreateManyArgs} args - Arguments to create many Invoices.
     * @example
     * // Create many Invoices
     * const invoice = await prisma.invoice.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends InvoiceCreateManyArgs>(args?: SelectSubset<T, InvoiceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Invoices and returns the data saved in the database.
     * @param {InvoiceCreateManyAndReturnArgs} args - Arguments to create many Invoices.
     * @example
     * // Create many Invoices
     * const invoice = await prisma.invoice.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Invoices and only return the `id`
     * const invoiceWithIdOnly = await prisma.invoice.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends InvoiceCreateManyAndReturnArgs>(args?: SelectSubset<T, InvoiceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Invoice.
     * @param {InvoiceDeleteArgs} args - Arguments to delete one Invoice.
     * @example
     * // Delete one Invoice
     * const Invoice = await prisma.invoice.delete({
     *   where: {
     *     // ... filter to delete one Invoice
     *   }
     * })
     * 
     */
    delete<T extends InvoiceDeleteArgs>(args: SelectSubset<T, InvoiceDeleteArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Invoice.
     * @param {InvoiceUpdateArgs} args - Arguments to update one Invoice.
     * @example
     * // Update one Invoice
     * const invoice = await prisma.invoice.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends InvoiceUpdateArgs>(args: SelectSubset<T, InvoiceUpdateArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Invoices.
     * @param {InvoiceDeleteManyArgs} args - Arguments to filter Invoices to delete.
     * @example
     * // Delete a few Invoices
     * const { count } = await prisma.invoice.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends InvoiceDeleteManyArgs>(args?: SelectSubset<T, InvoiceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Invoices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Invoices
     * const invoice = await prisma.invoice.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends InvoiceUpdateManyArgs>(args: SelectSubset<T, InvoiceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Invoice.
     * @param {InvoiceUpsertArgs} args - Arguments to update or create a Invoice.
     * @example
     * // Update or create a Invoice
     * const invoice = await prisma.invoice.upsert({
     *   create: {
     *     // ... data to create a Invoice
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Invoice we want to update
     *   }
     * })
     */
    upsert<T extends InvoiceUpsertArgs>(args: SelectSubset<T, InvoiceUpsertArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Invoices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceCountArgs} args - Arguments to filter Invoices to count.
     * @example
     * // Count the number of Invoices
     * const count = await prisma.invoice.count({
     *   where: {
     *     // ... the filter for the Invoices we want to count
     *   }
     * })
    **/
    count<T extends InvoiceCountArgs>(
      args?: Subset<T, InvoiceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InvoiceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Invoice.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InvoiceAggregateArgs>(args: Subset<T, InvoiceAggregateArgs>): Prisma.PrismaPromise<GetInvoiceAggregateType<T>>

    /**
     * Group by Invoice.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvoiceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InvoiceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InvoiceGroupByArgs['orderBy'] }
        : { orderBy?: InvoiceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InvoiceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInvoiceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Invoice model
   */
  readonly fields: InvoiceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Invoice.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__InvoiceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    orders<T extends Invoice$ordersArgs<ExtArgs> = {}>(args?: Subset<T, Invoice$ordersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany"> | Null>
    payments<T extends Invoice$paymentsArgs<ExtArgs> = {}>(args?: Subset<T, Invoice$paymentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findMany"> | Null>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    fines<T extends Invoice$finesArgs<ExtArgs> = {}>(args?: Subset<T, Invoice$finesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FinesPayload<ExtArgs>, T, "findMany"> | Null>
    reviews<T extends Invoice$reviewsArgs<ExtArgs> = {}>(args?: Subset<T, Invoice$reviewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Invoice model
   */ 
  interface InvoiceFieldRefs {
    readonly id: FieldRef<"Invoice", 'String'>
    readonly invoiceNumber: FieldRef<"Invoice", 'String'>
    readonly createdAt: FieldRef<"Invoice", 'DateTime'>
    readonly updatedAt: FieldRef<"Invoice", 'DateTime'>
    readonly totalAmount: FieldRef<"Invoice", 'Int'>
    readonly finalAmount: FieldRef<"Invoice", 'Int'>
    readonly userId: FieldRef<"Invoice", 'String'>
    readonly isDraft: FieldRef<"Invoice", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Invoice findUnique
   */
  export type InvoiceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * Filter, which Invoice to fetch.
     */
    where: InvoiceWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Invoice findUniqueOrThrow
   */
  export type InvoiceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * Filter, which Invoice to fetch.
     */
    where: InvoiceWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Invoice findFirst
   */
  export type InvoiceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * Filter, which Invoice to fetch.
     */
    where?: InvoiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Invoices to fetch.
     */
    orderBy?: InvoiceOrderByWithRelationInput | InvoiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Invoices.
     */
    cursor?: InvoiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Invoices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Invoices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Invoices.
     */
    distinct?: InvoiceScalarFieldEnum | InvoiceScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Invoice findFirstOrThrow
   */
  export type InvoiceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * Filter, which Invoice to fetch.
     */
    where?: InvoiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Invoices to fetch.
     */
    orderBy?: InvoiceOrderByWithRelationInput | InvoiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Invoices.
     */
    cursor?: InvoiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Invoices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Invoices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Invoices.
     */
    distinct?: InvoiceScalarFieldEnum | InvoiceScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Invoice findMany
   */
  export type InvoiceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * Filter, which Invoices to fetch.
     */
    where?: InvoiceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Invoices to fetch.
     */
    orderBy?: InvoiceOrderByWithRelationInput | InvoiceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Invoices.
     */
    cursor?: InvoiceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Invoices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Invoices.
     */
    skip?: number
    distinct?: InvoiceScalarFieldEnum | InvoiceScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Invoice create
   */
  export type InvoiceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * The data needed to create a Invoice.
     */
    data: XOR<InvoiceCreateInput, InvoiceUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Invoice createMany
   */
  export type InvoiceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Invoices.
     */
    data: InvoiceCreateManyInput | InvoiceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Invoice createManyAndReturn
   */
  export type InvoiceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Invoices.
     */
    data: InvoiceCreateManyInput | InvoiceCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Invoice update
   */
  export type InvoiceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * The data needed to update a Invoice.
     */
    data: XOR<InvoiceUpdateInput, InvoiceUncheckedUpdateInput>
    /**
     * Choose, which Invoice to update.
     */
    where: InvoiceWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Invoice updateMany
   */
  export type InvoiceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Invoices.
     */
    data: XOR<InvoiceUpdateManyMutationInput, InvoiceUncheckedUpdateManyInput>
    /**
     * Filter which Invoices to update
     */
    where?: InvoiceWhereInput
  }

  /**
   * Invoice upsert
   */
  export type InvoiceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * The filter to search for the Invoice to update in case it exists.
     */
    where: InvoiceWhereUniqueInput
    /**
     * In case the Invoice found by the `where` argument doesn't exist, create a new Invoice with this data.
     */
    create: XOR<InvoiceCreateInput, InvoiceUncheckedCreateInput>
    /**
     * In case the Invoice was found with the provided `where` argument, update it with this data.
     */
    update: XOR<InvoiceUpdateInput, InvoiceUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Invoice delete
   */
  export type InvoiceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    /**
     * Filter which Invoice to delete.
     */
    where: InvoiceWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Invoice deleteMany
   */
  export type InvoiceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Invoices to delete
     */
    where?: InvoiceWhereInput
  }

  /**
   * Invoice.orders
   */
  export type Invoice$ordersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Invoice.payments
   */
  export type Invoice$paymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    where?: PaymentWhereInput
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    cursor?: PaymentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Invoice.fines
   */
  export type Invoice$finesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fines
     */
    select?: FinesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinesInclude<ExtArgs> | null
    where?: FinesWhereInput
    orderBy?: FinesOrderByWithRelationInput | FinesOrderByWithRelationInput[]
    cursor?: FinesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FinesScalarFieldEnum | FinesScalarFieldEnum[]
  }

  /**
   * Invoice.reviews
   */
  export type Invoice$reviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    where?: ReviewWhereInput
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    cursor?: ReviewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Invoice without action
   */
  export type InvoiceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
  }


  /**
   * Model Payment
   */

  export type AggregatePayment = {
    _count: PaymentCountAggregateOutputType | null
    _avg: PaymentAvgAggregateOutputType | null
    _sum: PaymentSumAggregateOutputType | null
    _min: PaymentMinAggregateOutputType | null
    _max: PaymentMaxAggregateOutputType | null
  }

  export type PaymentAvgAggregateOutputType = {
    amount: number | null
  }

  export type PaymentSumAggregateOutputType = {
    amount: number | null
  }

  export type PaymentMinAggregateOutputType = {
    id: string | null
    paymentRef: string | null
    amount: number | null
    modeOfPayment: $Enums.ModeOfPayment | null
    createdAt: Date | null
    updatedAt: Date | null
    invoiceId: string | null
    userId: string | null
  }

  export type PaymentMaxAggregateOutputType = {
    id: string | null
    paymentRef: string | null
    amount: number | null
    modeOfPayment: $Enums.ModeOfPayment | null
    createdAt: Date | null
    updatedAt: Date | null
    invoiceId: string | null
    userId: string | null
  }

  export type PaymentCountAggregateOutputType = {
    id: number
    paymentRef: number
    amount: number
    modeOfPayment: number
    createdAt: number
    updatedAt: number
    invoiceId: number
    userId: number
    _all: number
  }


  export type PaymentAvgAggregateInputType = {
    amount?: true
  }

  export type PaymentSumAggregateInputType = {
    amount?: true
  }

  export type PaymentMinAggregateInputType = {
    id?: true
    paymentRef?: true
    amount?: true
    modeOfPayment?: true
    createdAt?: true
    updatedAt?: true
    invoiceId?: true
    userId?: true
  }

  export type PaymentMaxAggregateInputType = {
    id?: true
    paymentRef?: true
    amount?: true
    modeOfPayment?: true
    createdAt?: true
    updatedAt?: true
    invoiceId?: true
    userId?: true
  }

  export type PaymentCountAggregateInputType = {
    id?: true
    paymentRef?: true
    amount?: true
    modeOfPayment?: true
    createdAt?: true
    updatedAt?: true
    invoiceId?: true
    userId?: true
    _all?: true
  }

  export type PaymentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Payment to aggregate.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Payments
    **/
    _count?: true | PaymentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PaymentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PaymentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PaymentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PaymentMaxAggregateInputType
  }

  export type GetPaymentAggregateType<T extends PaymentAggregateArgs> = {
        [P in keyof T & keyof AggregatePayment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePayment[P]>
      : GetScalarType<T[P], AggregatePayment[P]>
  }




  export type PaymentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentWhereInput
    orderBy?: PaymentOrderByWithAggregationInput | PaymentOrderByWithAggregationInput[]
    by: PaymentScalarFieldEnum[] | PaymentScalarFieldEnum
    having?: PaymentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PaymentCountAggregateInputType | true
    _avg?: PaymentAvgAggregateInputType
    _sum?: PaymentSumAggregateInputType
    _min?: PaymentMinAggregateInputType
    _max?: PaymentMaxAggregateInputType
  }

  export type PaymentGroupByOutputType = {
    id: string
    paymentRef: string
    amount: number
    modeOfPayment: $Enums.ModeOfPayment
    createdAt: Date
    updatedAt: Date
    invoiceId: string
    userId: string
    _count: PaymentCountAggregateOutputType | null
    _avg: PaymentAvgAggregateOutputType | null
    _sum: PaymentSumAggregateOutputType | null
    _min: PaymentMinAggregateOutputType | null
    _max: PaymentMaxAggregateOutputType | null
  }

  type GetPaymentGroupByPayload<T extends PaymentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PaymentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PaymentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PaymentGroupByOutputType[P]>
            : GetScalarType<T[P], PaymentGroupByOutputType[P]>
        }
      >
    >


  export type PaymentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    paymentRef?: boolean
    amount?: boolean
    modeOfPayment?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    invoiceId?: boolean
    userId?: boolean
    invoice?: boolean | InvoiceDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["payment"]>

  export type PaymentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    paymentRef?: boolean
    amount?: boolean
    modeOfPayment?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    invoiceId?: boolean
    userId?: boolean
    invoice?: boolean | InvoiceDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["payment"]>

  export type PaymentSelectScalar = {
    id?: boolean
    paymentRef?: boolean
    amount?: boolean
    modeOfPayment?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    invoiceId?: boolean
    userId?: boolean
  }

  export type PaymentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    invoice?: boolean | InvoiceDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type PaymentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    invoice?: boolean | InvoiceDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $PaymentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Payment"
    objects: {
      invoice: Prisma.$InvoicePayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      paymentRef: string
      amount: number
      modeOfPayment: $Enums.ModeOfPayment
      createdAt: Date
      updatedAt: Date
      invoiceId: string
      userId: string
    }, ExtArgs["result"]["payment"]>
    composites: {}
  }

  type PaymentGetPayload<S extends boolean | null | undefined | PaymentDefaultArgs> = $Result.GetResult<Prisma.$PaymentPayload, S>

  type PaymentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PaymentFindManyArgs, 'select' | 'include' | 'distinct' | 'relationLoadStrategy'> & {
      select?: PaymentCountAggregateInputType | true
    }

  export interface PaymentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Payment'], meta: { name: 'Payment' } }
    /**
     * Find zero or one Payment that matches the filter.
     * @param {PaymentFindUniqueArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PaymentFindUniqueArgs>(args: SelectSubset<T, PaymentFindUniqueArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Payment that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PaymentFindUniqueOrThrowArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PaymentFindUniqueOrThrowArgs>(args: SelectSubset<T, PaymentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Payment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindFirstArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PaymentFindFirstArgs>(args?: SelectSubset<T, PaymentFindFirstArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Payment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindFirstOrThrowArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PaymentFindFirstOrThrowArgs>(args?: SelectSubset<T, PaymentFindFirstOrThrowArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Payments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Payments
     * const payments = await prisma.payment.findMany()
     * 
     * // Get first 10 Payments
     * const payments = await prisma.payment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const paymentWithIdOnly = await prisma.payment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PaymentFindManyArgs>(args?: SelectSubset<T, PaymentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Payment.
     * @param {PaymentCreateArgs} args - Arguments to create a Payment.
     * @example
     * // Create one Payment
     * const Payment = await prisma.payment.create({
     *   data: {
     *     // ... data to create a Payment
     *   }
     * })
     * 
     */
    create<T extends PaymentCreateArgs>(args: SelectSubset<T, PaymentCreateArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Payments.
     * @param {PaymentCreateManyArgs} args - Arguments to create many Payments.
     * @example
     * // Create many Payments
     * const payment = await prisma.payment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PaymentCreateManyArgs>(args?: SelectSubset<T, PaymentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Payments and returns the data saved in the database.
     * @param {PaymentCreateManyAndReturnArgs} args - Arguments to create many Payments.
     * @example
     * // Create many Payments
     * const payment = await prisma.payment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Payments and only return the `id`
     * const paymentWithIdOnly = await prisma.payment.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PaymentCreateManyAndReturnArgs>(args?: SelectSubset<T, PaymentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Payment.
     * @param {PaymentDeleteArgs} args - Arguments to delete one Payment.
     * @example
     * // Delete one Payment
     * const Payment = await prisma.payment.delete({
     *   where: {
     *     // ... filter to delete one Payment
     *   }
     * })
     * 
     */
    delete<T extends PaymentDeleteArgs>(args: SelectSubset<T, PaymentDeleteArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Payment.
     * @param {PaymentUpdateArgs} args - Arguments to update one Payment.
     * @example
     * // Update one Payment
     * const payment = await prisma.payment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PaymentUpdateArgs>(args: SelectSubset<T, PaymentUpdateArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Payments.
     * @param {PaymentDeleteManyArgs} args - Arguments to filter Payments to delete.
     * @example
     * // Delete a few Payments
     * const { count } = await prisma.payment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PaymentDeleteManyArgs>(args?: SelectSubset<T, PaymentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Payments
     * const payment = await prisma.payment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PaymentUpdateManyArgs>(args: SelectSubset<T, PaymentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Payment.
     * @param {PaymentUpsertArgs} args - Arguments to update or create a Payment.
     * @example
     * // Update or create a Payment
     * const payment = await prisma.payment.upsert({
     *   create: {
     *     // ... data to create a Payment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Payment we want to update
     *   }
     * })
     */
    upsert<T extends PaymentUpsertArgs>(args: SelectSubset<T, PaymentUpsertArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentCountArgs} args - Arguments to filter Payments to count.
     * @example
     * // Count the number of Payments
     * const count = await prisma.payment.count({
     *   where: {
     *     // ... the filter for the Payments we want to count
     *   }
     * })
    **/
    count<T extends PaymentCountArgs>(
      args?: Subset<T, PaymentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PaymentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Payment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PaymentAggregateArgs>(args: Subset<T, PaymentAggregateArgs>): Prisma.PrismaPromise<GetPaymentAggregateType<T>>

    /**
     * Group by Payment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PaymentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PaymentGroupByArgs['orderBy'] }
        : { orderBy?: PaymentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PaymentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPaymentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Payment model
   */
  readonly fields: PaymentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Payment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PaymentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    invoice<T extends InvoiceDefaultArgs<ExtArgs> = {}>(args?: Subset<T, InvoiceDefaultArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Payment model
   */ 
  interface PaymentFieldRefs {
    readonly id: FieldRef<"Payment", 'String'>
    readonly paymentRef: FieldRef<"Payment", 'String'>
    readonly amount: FieldRef<"Payment", 'Int'>
    readonly modeOfPayment: FieldRef<"Payment", 'ModeOfPayment'>
    readonly createdAt: FieldRef<"Payment", 'DateTime'>
    readonly updatedAt: FieldRef<"Payment", 'DateTime'>
    readonly invoiceId: FieldRef<"Payment", 'String'>
    readonly userId: FieldRef<"Payment", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Payment findUnique
   */
  export type PaymentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where: PaymentWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Payment findUniqueOrThrow
   */
  export type PaymentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where: PaymentWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Payment findFirst
   */
  export type PaymentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Payments.
     */
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Payment findFirstOrThrow
   */
  export type PaymentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Payments.
     */
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Payment findMany
   */
  export type PaymentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payments to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Payment create
   */
  export type PaymentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The data needed to create a Payment.
     */
    data: XOR<PaymentCreateInput, PaymentUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Payment createMany
   */
  export type PaymentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Payments.
     */
    data: PaymentCreateManyInput | PaymentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Payment createManyAndReturn
   */
  export type PaymentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Payments.
     */
    data: PaymentCreateManyInput | PaymentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Payment update
   */
  export type PaymentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The data needed to update a Payment.
     */
    data: XOR<PaymentUpdateInput, PaymentUncheckedUpdateInput>
    /**
     * Choose, which Payment to update.
     */
    where: PaymentWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Payment updateMany
   */
  export type PaymentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Payments.
     */
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyInput>
    /**
     * Filter which Payments to update
     */
    where?: PaymentWhereInput
  }

  /**
   * Payment upsert
   */
  export type PaymentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The filter to search for the Payment to update in case it exists.
     */
    where: PaymentWhereUniqueInput
    /**
     * In case the Payment found by the `where` argument doesn't exist, create a new Payment with this data.
     */
    create: XOR<PaymentCreateInput, PaymentUncheckedCreateInput>
    /**
     * In case the Payment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PaymentUpdateInput, PaymentUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Payment delete
   */
  export type PaymentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter which Payment to delete.
     */
    where: PaymentWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Payment deleteMany
   */
  export type PaymentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Payments to delete
     */
    where?: PaymentWhereInput
  }

  /**
   * Payment without action
   */
  export type PaymentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
  }


  /**
   * Model Fines
   */

  export type AggregateFines = {
    _count: FinesCountAggregateOutputType | null
    _avg: FinesAvgAggregateOutputType | null
    _sum: FinesSumAggregateOutputType | null
    _min: FinesMinAggregateOutputType | null
    _max: FinesMaxAggregateOutputType | null
  }

  export type FinesAvgAggregateOutputType = {
    amount: number | null
  }

  export type FinesSumAggregateOutputType = {
    amount: number | null
  }

  export type FinesMinAggregateOutputType = {
    id: string | null
    orderId: string | null
    freelancerId: string | null
    amount: number | null
    reason: string | null
    invoiceId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FinesMaxAggregateOutputType = {
    id: string | null
    orderId: string | null
    freelancerId: string | null
    amount: number | null
    reason: string | null
    invoiceId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FinesCountAggregateOutputType = {
    id: number
    orderId: number
    freelancerId: number
    amount: number
    reason: number
    invoiceId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type FinesAvgAggregateInputType = {
    amount?: true
  }

  export type FinesSumAggregateInputType = {
    amount?: true
  }

  export type FinesMinAggregateInputType = {
    id?: true
    orderId?: true
    freelancerId?: true
    amount?: true
    reason?: true
    invoiceId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FinesMaxAggregateInputType = {
    id?: true
    orderId?: true
    freelancerId?: true
    amount?: true
    reason?: true
    invoiceId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FinesCountAggregateInputType = {
    id?: true
    orderId?: true
    freelancerId?: true
    amount?: true
    reason?: true
    invoiceId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type FinesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Fines to aggregate.
     */
    where?: FinesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Fines to fetch.
     */
    orderBy?: FinesOrderByWithRelationInput | FinesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FinesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Fines from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Fines.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Fines
    **/
    _count?: true | FinesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FinesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FinesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FinesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FinesMaxAggregateInputType
  }

  export type GetFinesAggregateType<T extends FinesAggregateArgs> = {
        [P in keyof T & keyof AggregateFines]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFines[P]>
      : GetScalarType<T[P], AggregateFines[P]>
  }




  export type FinesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FinesWhereInput
    orderBy?: FinesOrderByWithAggregationInput | FinesOrderByWithAggregationInput[]
    by: FinesScalarFieldEnum[] | FinesScalarFieldEnum
    having?: FinesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FinesCountAggregateInputType | true
    _avg?: FinesAvgAggregateInputType
    _sum?: FinesSumAggregateInputType
    _min?: FinesMinAggregateInputType
    _max?: FinesMaxAggregateInputType
  }

  export type FinesGroupByOutputType = {
    id: string
    orderId: string
    freelancerId: string
    amount: number
    reason: string | null
    invoiceId: string | null
    createdAt: Date
    updatedAt: Date
    _count: FinesCountAggregateOutputType | null
    _avg: FinesAvgAggregateOutputType | null
    _sum: FinesSumAggregateOutputType | null
    _min: FinesMinAggregateOutputType | null
    _max: FinesMaxAggregateOutputType | null
  }

  type GetFinesGroupByPayload<T extends FinesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FinesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FinesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FinesGroupByOutputType[P]>
            : GetScalarType<T[P], FinesGroupByOutputType[P]>
        }
      >
    >


  export type FinesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    freelancerId?: boolean
    amount?: boolean
    reason?: boolean
    invoiceId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    freelancer?: boolean | UserDefaultArgs<ExtArgs>
    invoice?: boolean | Fines$invoiceArgs<ExtArgs>
  }, ExtArgs["result"]["fines"]>

  export type FinesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    freelancerId?: boolean
    amount?: boolean
    reason?: boolean
    invoiceId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    freelancer?: boolean | UserDefaultArgs<ExtArgs>
    invoice?: boolean | Fines$invoiceArgs<ExtArgs>
  }, ExtArgs["result"]["fines"]>

  export type FinesSelectScalar = {
    id?: boolean
    orderId?: boolean
    freelancerId?: boolean
    amount?: boolean
    reason?: boolean
    invoiceId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type FinesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    freelancer?: boolean | UserDefaultArgs<ExtArgs>
    invoice?: boolean | Fines$invoiceArgs<ExtArgs>
  }
  export type FinesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    freelancer?: boolean | UserDefaultArgs<ExtArgs>
    invoice?: boolean | Fines$invoiceArgs<ExtArgs>
  }

  export type $FinesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Fines"
    objects: {
      order: Prisma.$OrderPayload<ExtArgs>
      freelancer: Prisma.$UserPayload<ExtArgs>
      invoice: Prisma.$InvoicePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      orderId: string
      freelancerId: string
      amount: number
      reason: string | null
      invoiceId: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["fines"]>
    composites: {}
  }

  type FinesGetPayload<S extends boolean | null | undefined | FinesDefaultArgs> = $Result.GetResult<Prisma.$FinesPayload, S>

  type FinesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<FinesFindManyArgs, 'select' | 'include' | 'distinct' | 'relationLoadStrategy'> & {
      select?: FinesCountAggregateInputType | true
    }

  export interface FinesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Fines'], meta: { name: 'Fines' } }
    /**
     * Find zero or one Fines that matches the filter.
     * @param {FinesFindUniqueArgs} args - Arguments to find a Fines
     * @example
     * // Get one Fines
     * const fines = await prisma.fines.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FinesFindUniqueArgs>(args: SelectSubset<T, FinesFindUniqueArgs<ExtArgs>>): Prisma__FinesClient<$Result.GetResult<Prisma.$FinesPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Fines that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {FinesFindUniqueOrThrowArgs} args - Arguments to find a Fines
     * @example
     * // Get one Fines
     * const fines = await prisma.fines.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FinesFindUniqueOrThrowArgs>(args: SelectSubset<T, FinesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FinesClient<$Result.GetResult<Prisma.$FinesPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Fines that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinesFindFirstArgs} args - Arguments to find a Fines
     * @example
     * // Get one Fines
     * const fines = await prisma.fines.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FinesFindFirstArgs>(args?: SelectSubset<T, FinesFindFirstArgs<ExtArgs>>): Prisma__FinesClient<$Result.GetResult<Prisma.$FinesPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Fines that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinesFindFirstOrThrowArgs} args - Arguments to find a Fines
     * @example
     * // Get one Fines
     * const fines = await prisma.fines.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FinesFindFirstOrThrowArgs>(args?: SelectSubset<T, FinesFindFirstOrThrowArgs<ExtArgs>>): Prisma__FinesClient<$Result.GetResult<Prisma.$FinesPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Fines that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Fines
     * const fines = await prisma.fines.findMany()
     * 
     * // Get first 10 Fines
     * const fines = await prisma.fines.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const finesWithIdOnly = await prisma.fines.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FinesFindManyArgs>(args?: SelectSubset<T, FinesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FinesPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Fines.
     * @param {FinesCreateArgs} args - Arguments to create a Fines.
     * @example
     * // Create one Fines
     * const Fines = await prisma.fines.create({
     *   data: {
     *     // ... data to create a Fines
     *   }
     * })
     * 
     */
    create<T extends FinesCreateArgs>(args: SelectSubset<T, FinesCreateArgs<ExtArgs>>): Prisma__FinesClient<$Result.GetResult<Prisma.$FinesPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Fines.
     * @param {FinesCreateManyArgs} args - Arguments to create many Fines.
     * @example
     * // Create many Fines
     * const fines = await prisma.fines.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FinesCreateManyArgs>(args?: SelectSubset<T, FinesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Fines and returns the data saved in the database.
     * @param {FinesCreateManyAndReturnArgs} args - Arguments to create many Fines.
     * @example
     * // Create many Fines
     * const fines = await prisma.fines.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Fines and only return the `id`
     * const finesWithIdOnly = await prisma.fines.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FinesCreateManyAndReturnArgs>(args?: SelectSubset<T, FinesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FinesPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Fines.
     * @param {FinesDeleteArgs} args - Arguments to delete one Fines.
     * @example
     * // Delete one Fines
     * const Fines = await prisma.fines.delete({
     *   where: {
     *     // ... filter to delete one Fines
     *   }
     * })
     * 
     */
    delete<T extends FinesDeleteArgs>(args: SelectSubset<T, FinesDeleteArgs<ExtArgs>>): Prisma__FinesClient<$Result.GetResult<Prisma.$FinesPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Fines.
     * @param {FinesUpdateArgs} args - Arguments to update one Fines.
     * @example
     * // Update one Fines
     * const fines = await prisma.fines.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FinesUpdateArgs>(args: SelectSubset<T, FinesUpdateArgs<ExtArgs>>): Prisma__FinesClient<$Result.GetResult<Prisma.$FinesPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Fines.
     * @param {FinesDeleteManyArgs} args - Arguments to filter Fines to delete.
     * @example
     * // Delete a few Fines
     * const { count } = await prisma.fines.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FinesDeleteManyArgs>(args?: SelectSubset<T, FinesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Fines.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Fines
     * const fines = await prisma.fines.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FinesUpdateManyArgs>(args: SelectSubset<T, FinesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Fines.
     * @param {FinesUpsertArgs} args - Arguments to update or create a Fines.
     * @example
     * // Update or create a Fines
     * const fines = await prisma.fines.upsert({
     *   create: {
     *     // ... data to create a Fines
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Fines we want to update
     *   }
     * })
     */
    upsert<T extends FinesUpsertArgs>(args: SelectSubset<T, FinesUpsertArgs<ExtArgs>>): Prisma__FinesClient<$Result.GetResult<Prisma.$FinesPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Fines.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinesCountArgs} args - Arguments to filter Fines to count.
     * @example
     * // Count the number of Fines
     * const count = await prisma.fines.count({
     *   where: {
     *     // ... the filter for the Fines we want to count
     *   }
     * })
    **/
    count<T extends FinesCountArgs>(
      args?: Subset<T, FinesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FinesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Fines.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FinesAggregateArgs>(args: Subset<T, FinesAggregateArgs>): Prisma.PrismaPromise<GetFinesAggregateType<T>>

    /**
     * Group by Fines.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FinesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FinesGroupByArgs['orderBy'] }
        : { orderBy?: FinesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FinesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFinesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Fines model
   */
  readonly fields: FinesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Fines.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FinesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order<T extends OrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrderDefaultArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    freelancer<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    invoice<T extends Fines$invoiceArgs<ExtArgs> = {}>(args?: Subset<T, Fines$invoiceArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Fines model
   */ 
  interface FinesFieldRefs {
    readonly id: FieldRef<"Fines", 'String'>
    readonly orderId: FieldRef<"Fines", 'String'>
    readonly freelancerId: FieldRef<"Fines", 'String'>
    readonly amount: FieldRef<"Fines", 'Int'>
    readonly reason: FieldRef<"Fines", 'String'>
    readonly invoiceId: FieldRef<"Fines", 'String'>
    readonly createdAt: FieldRef<"Fines", 'DateTime'>
    readonly updatedAt: FieldRef<"Fines", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Fines findUnique
   */
  export type FinesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fines
     */
    select?: FinesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinesInclude<ExtArgs> | null
    /**
     * Filter, which Fines to fetch.
     */
    where: FinesWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Fines findUniqueOrThrow
   */
  export type FinesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fines
     */
    select?: FinesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinesInclude<ExtArgs> | null
    /**
     * Filter, which Fines to fetch.
     */
    where: FinesWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Fines findFirst
   */
  export type FinesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fines
     */
    select?: FinesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinesInclude<ExtArgs> | null
    /**
     * Filter, which Fines to fetch.
     */
    where?: FinesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Fines to fetch.
     */
    orderBy?: FinesOrderByWithRelationInput | FinesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Fines.
     */
    cursor?: FinesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Fines from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Fines.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Fines.
     */
    distinct?: FinesScalarFieldEnum | FinesScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Fines findFirstOrThrow
   */
  export type FinesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fines
     */
    select?: FinesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinesInclude<ExtArgs> | null
    /**
     * Filter, which Fines to fetch.
     */
    where?: FinesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Fines to fetch.
     */
    orderBy?: FinesOrderByWithRelationInput | FinesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Fines.
     */
    cursor?: FinesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Fines from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Fines.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Fines.
     */
    distinct?: FinesScalarFieldEnum | FinesScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Fines findMany
   */
  export type FinesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fines
     */
    select?: FinesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinesInclude<ExtArgs> | null
    /**
     * Filter, which Fines to fetch.
     */
    where?: FinesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Fines to fetch.
     */
    orderBy?: FinesOrderByWithRelationInput | FinesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Fines.
     */
    cursor?: FinesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Fines from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Fines.
     */
    skip?: number
    distinct?: FinesScalarFieldEnum | FinesScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Fines create
   */
  export type FinesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fines
     */
    select?: FinesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinesInclude<ExtArgs> | null
    /**
     * The data needed to create a Fines.
     */
    data: XOR<FinesCreateInput, FinesUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Fines createMany
   */
  export type FinesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Fines.
     */
    data: FinesCreateManyInput | FinesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Fines createManyAndReturn
   */
  export type FinesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fines
     */
    select?: FinesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Fines.
     */
    data: FinesCreateManyInput | FinesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Fines update
   */
  export type FinesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fines
     */
    select?: FinesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinesInclude<ExtArgs> | null
    /**
     * The data needed to update a Fines.
     */
    data: XOR<FinesUpdateInput, FinesUncheckedUpdateInput>
    /**
     * Choose, which Fines to update.
     */
    where: FinesWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Fines updateMany
   */
  export type FinesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Fines.
     */
    data: XOR<FinesUpdateManyMutationInput, FinesUncheckedUpdateManyInput>
    /**
     * Filter which Fines to update
     */
    where?: FinesWhereInput
  }

  /**
   * Fines upsert
   */
  export type FinesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fines
     */
    select?: FinesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinesInclude<ExtArgs> | null
    /**
     * The filter to search for the Fines to update in case it exists.
     */
    where: FinesWhereUniqueInput
    /**
     * In case the Fines found by the `where` argument doesn't exist, create a new Fines with this data.
     */
    create: XOR<FinesCreateInput, FinesUncheckedCreateInput>
    /**
     * In case the Fines was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FinesUpdateInput, FinesUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Fines delete
   */
  export type FinesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fines
     */
    select?: FinesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinesInclude<ExtArgs> | null
    /**
     * Filter which Fines to delete.
     */
    where: FinesWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Fines deleteMany
   */
  export type FinesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Fines to delete
     */
    where?: FinesWhereInput
  }

  /**
   * Fines.invoice
   */
  export type Fines$invoiceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    where?: InvoiceWhereInput
  }

  /**
   * Fines without action
   */
  export type FinesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Fines
     */
    select?: FinesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinesInclude<ExtArgs> | null
  }


  /**
   * Model Review
   */

  export type AggregateReview = {
    _count: ReviewCountAggregateOutputType | null
    _avg: ReviewAvgAggregateOutputType | null
    _sum: ReviewSumAggregateOutputType | null
    _min: ReviewMinAggregateOutputType | null
    _max: ReviewMaxAggregateOutputType | null
  }

  export type ReviewAvgAggregateOutputType = {
    rating: number | null
  }

  export type ReviewSumAggregateOutputType = {
    rating: number | null
  }

  export type ReviewMinAggregateOutputType = {
    id: string | null
    orderId: string | null
    reviewerId: string | null
    freelancerId: string | null
    rating: number | null
    comment: string | null
    invoiceId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ReviewMaxAggregateOutputType = {
    id: string | null
    orderId: string | null
    reviewerId: string | null
    freelancerId: string | null
    rating: number | null
    comment: string | null
    invoiceId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ReviewCountAggregateOutputType = {
    id: number
    orderId: number
    reviewerId: number
    freelancerId: number
    rating: number
    comment: number
    invoiceId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ReviewAvgAggregateInputType = {
    rating?: true
  }

  export type ReviewSumAggregateInputType = {
    rating?: true
  }

  export type ReviewMinAggregateInputType = {
    id?: true
    orderId?: true
    reviewerId?: true
    freelancerId?: true
    rating?: true
    comment?: true
    invoiceId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ReviewMaxAggregateInputType = {
    id?: true
    orderId?: true
    reviewerId?: true
    freelancerId?: true
    rating?: true
    comment?: true
    invoiceId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ReviewCountAggregateInputType = {
    id?: true
    orderId?: true
    reviewerId?: true
    freelancerId?: true
    rating?: true
    comment?: true
    invoiceId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ReviewAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Review to aggregate.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Reviews
    **/
    _count?: true | ReviewCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReviewAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReviewSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReviewMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReviewMaxAggregateInputType
  }

  export type GetReviewAggregateType<T extends ReviewAggregateArgs> = {
        [P in keyof T & keyof AggregateReview]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReview[P]>
      : GetScalarType<T[P], AggregateReview[P]>
  }




  export type ReviewGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReviewWhereInput
    orderBy?: ReviewOrderByWithAggregationInput | ReviewOrderByWithAggregationInput[]
    by: ReviewScalarFieldEnum[] | ReviewScalarFieldEnum
    having?: ReviewScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReviewCountAggregateInputType | true
    _avg?: ReviewAvgAggregateInputType
    _sum?: ReviewSumAggregateInputType
    _min?: ReviewMinAggregateInputType
    _max?: ReviewMaxAggregateInputType
  }

  export type ReviewGroupByOutputType = {
    id: string
    orderId: string
    reviewerId: string
    freelancerId: string
    rating: number | null
    comment: string | null
    invoiceId: string | null
    createdAt: Date
    updatedAt: Date
    _count: ReviewCountAggregateOutputType | null
    _avg: ReviewAvgAggregateOutputType | null
    _sum: ReviewSumAggregateOutputType | null
    _min: ReviewMinAggregateOutputType | null
    _max: ReviewMaxAggregateOutputType | null
  }

  type GetReviewGroupByPayload<T extends ReviewGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReviewGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReviewGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReviewGroupByOutputType[P]>
            : GetScalarType<T[P], ReviewGroupByOutputType[P]>
        }
      >
    >


  export type ReviewSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    reviewerId?: boolean
    freelancerId?: boolean
    rating?: boolean
    comment?: boolean
    invoiceId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    reviewer?: boolean | UserDefaultArgs<ExtArgs>
    freelancer?: boolean | UserDefaultArgs<ExtArgs>
    invoice?: boolean | Review$invoiceArgs<ExtArgs>
  }, ExtArgs["result"]["review"]>

  export type ReviewSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    reviewerId?: boolean
    freelancerId?: boolean
    rating?: boolean
    comment?: boolean
    invoiceId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    reviewer?: boolean | UserDefaultArgs<ExtArgs>
    freelancer?: boolean | UserDefaultArgs<ExtArgs>
    invoice?: boolean | Review$invoiceArgs<ExtArgs>
  }, ExtArgs["result"]["review"]>

  export type ReviewSelectScalar = {
    id?: boolean
    orderId?: boolean
    reviewerId?: boolean
    freelancerId?: boolean
    rating?: boolean
    comment?: boolean
    invoiceId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ReviewInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    reviewer?: boolean | UserDefaultArgs<ExtArgs>
    freelancer?: boolean | UserDefaultArgs<ExtArgs>
    invoice?: boolean | Review$invoiceArgs<ExtArgs>
  }
  export type ReviewIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    reviewer?: boolean | UserDefaultArgs<ExtArgs>
    freelancer?: boolean | UserDefaultArgs<ExtArgs>
    invoice?: boolean | Review$invoiceArgs<ExtArgs>
  }

  export type $ReviewPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Review"
    objects: {
      order: Prisma.$OrderPayload<ExtArgs>
      reviewer: Prisma.$UserPayload<ExtArgs>
      freelancer: Prisma.$UserPayload<ExtArgs>
      invoice: Prisma.$InvoicePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      orderId: string
      reviewerId: string
      freelancerId: string
      rating: number | null
      comment: string | null
      invoiceId: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["review"]>
    composites: {}
  }

  type ReviewGetPayload<S extends boolean | null | undefined | ReviewDefaultArgs> = $Result.GetResult<Prisma.$ReviewPayload, S>

  type ReviewCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ReviewFindManyArgs, 'select' | 'include' | 'distinct' | 'relationLoadStrategy'> & {
      select?: ReviewCountAggregateInputType | true
    }

  export interface ReviewDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Review'], meta: { name: 'Review' } }
    /**
     * Find zero or one Review that matches the filter.
     * @param {ReviewFindUniqueArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReviewFindUniqueArgs>(args: SelectSubset<T, ReviewFindUniqueArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Review that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ReviewFindUniqueOrThrowArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReviewFindUniqueOrThrowArgs>(args: SelectSubset<T, ReviewFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Review that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewFindFirstArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReviewFindFirstArgs>(args?: SelectSubset<T, ReviewFindFirstArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Review that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewFindFirstOrThrowArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReviewFindFirstOrThrowArgs>(args?: SelectSubset<T, ReviewFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Reviews that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reviews
     * const reviews = await prisma.review.findMany()
     * 
     * // Get first 10 Reviews
     * const reviews = await prisma.review.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reviewWithIdOnly = await prisma.review.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReviewFindManyArgs>(args?: SelectSubset<T, ReviewFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Review.
     * @param {ReviewCreateArgs} args - Arguments to create a Review.
     * @example
     * // Create one Review
     * const Review = await prisma.review.create({
     *   data: {
     *     // ... data to create a Review
     *   }
     * })
     * 
     */
    create<T extends ReviewCreateArgs>(args: SelectSubset<T, ReviewCreateArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Reviews.
     * @param {ReviewCreateManyArgs} args - Arguments to create many Reviews.
     * @example
     * // Create many Reviews
     * const review = await prisma.review.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReviewCreateManyArgs>(args?: SelectSubset<T, ReviewCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Reviews and returns the data saved in the database.
     * @param {ReviewCreateManyAndReturnArgs} args - Arguments to create many Reviews.
     * @example
     * // Create many Reviews
     * const review = await prisma.review.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Reviews and only return the `id`
     * const reviewWithIdOnly = await prisma.review.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ReviewCreateManyAndReturnArgs>(args?: SelectSubset<T, ReviewCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Review.
     * @param {ReviewDeleteArgs} args - Arguments to delete one Review.
     * @example
     * // Delete one Review
     * const Review = await prisma.review.delete({
     *   where: {
     *     // ... filter to delete one Review
     *   }
     * })
     * 
     */
    delete<T extends ReviewDeleteArgs>(args: SelectSubset<T, ReviewDeleteArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Review.
     * @param {ReviewUpdateArgs} args - Arguments to update one Review.
     * @example
     * // Update one Review
     * const review = await prisma.review.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReviewUpdateArgs>(args: SelectSubset<T, ReviewUpdateArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Reviews.
     * @param {ReviewDeleteManyArgs} args - Arguments to filter Reviews to delete.
     * @example
     * // Delete a few Reviews
     * const { count } = await prisma.review.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReviewDeleteManyArgs>(args?: SelectSubset<T, ReviewDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reviews
     * const review = await prisma.review.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReviewUpdateManyArgs>(args: SelectSubset<T, ReviewUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Review.
     * @param {ReviewUpsertArgs} args - Arguments to update or create a Review.
     * @example
     * // Update or create a Review
     * const review = await prisma.review.upsert({
     *   create: {
     *     // ... data to create a Review
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Review we want to update
     *   }
     * })
     */
    upsert<T extends ReviewUpsertArgs>(args: SelectSubset<T, ReviewUpsertArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Reviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewCountArgs} args - Arguments to filter Reviews to count.
     * @example
     * // Count the number of Reviews
     * const count = await prisma.review.count({
     *   where: {
     *     // ... the filter for the Reviews we want to count
     *   }
     * })
    **/
    count<T extends ReviewCountArgs>(
      args?: Subset<T, ReviewCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReviewCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Review.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReviewAggregateArgs>(args: Subset<T, ReviewAggregateArgs>): Prisma.PrismaPromise<GetReviewAggregateType<T>>

    /**
     * Group by Review.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReviewGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReviewGroupByArgs['orderBy'] }
        : { orderBy?: ReviewGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReviewGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReviewGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Review model
   */
  readonly fields: ReviewFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Review.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReviewClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order<T extends OrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrderDefaultArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    reviewer<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    freelancer<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    invoice<T extends Review$invoiceArgs<ExtArgs> = {}>(args?: Subset<T, Review$invoiceArgs<ExtArgs>>): Prisma__InvoiceClient<$Result.GetResult<Prisma.$InvoicePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Review model
   */ 
  interface ReviewFieldRefs {
    readonly id: FieldRef<"Review", 'String'>
    readonly orderId: FieldRef<"Review", 'String'>
    readonly reviewerId: FieldRef<"Review", 'String'>
    readonly freelancerId: FieldRef<"Review", 'String'>
    readonly rating: FieldRef<"Review", 'Int'>
    readonly comment: FieldRef<"Review", 'String'>
    readonly invoiceId: FieldRef<"Review", 'String'>
    readonly createdAt: FieldRef<"Review", 'DateTime'>
    readonly updatedAt: FieldRef<"Review", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Review findUnique
   */
  export type ReviewFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where: ReviewWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Review findUniqueOrThrow
   */
  export type ReviewFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where: ReviewWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Review findFirst
   */
  export type ReviewFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reviews.
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reviews.
     */
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Review findFirstOrThrow
   */
  export type ReviewFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reviews.
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reviews.
     */
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Review findMany
   */
  export type ReviewFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Reviews to fetch.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Reviews.
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Review create
   */
  export type ReviewCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * The data needed to create a Review.
     */
    data: XOR<ReviewCreateInput, ReviewUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Review createMany
   */
  export type ReviewCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Reviews.
     */
    data: ReviewCreateManyInput | ReviewCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Review createManyAndReturn
   */
  export type ReviewCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Reviews.
     */
    data: ReviewCreateManyInput | ReviewCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Review update
   */
  export type ReviewUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * The data needed to update a Review.
     */
    data: XOR<ReviewUpdateInput, ReviewUncheckedUpdateInput>
    /**
     * Choose, which Review to update.
     */
    where: ReviewWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Review updateMany
   */
  export type ReviewUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Reviews.
     */
    data: XOR<ReviewUpdateManyMutationInput, ReviewUncheckedUpdateManyInput>
    /**
     * Filter which Reviews to update
     */
    where?: ReviewWhereInput
  }

  /**
   * Review upsert
   */
  export type ReviewUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * The filter to search for the Review to update in case it exists.
     */
    where: ReviewWhereUniqueInput
    /**
     * In case the Review found by the `where` argument doesn't exist, create a new Review with this data.
     */
    create: XOR<ReviewCreateInput, ReviewUncheckedCreateInput>
    /**
     * In case the Review was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReviewUpdateInput, ReviewUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Review delete
   */
  export type ReviewDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter which Review to delete.
     */
    where: ReviewWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Review deleteMany
   */
  export type ReviewDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reviews to delete
     */
    where?: ReviewWhereInput
  }

  /**
   * Review.invoice
   */
  export type Review$invoiceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invoice
     */
    select?: InvoiceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvoiceInclude<ExtArgs> | null
    where?: InvoiceWhereInput
  }

  /**
   * Review without action
   */
  export type ReviewDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
  }


  /**
   * Model Notification
   */

  export type AggregateNotification = {
    _count: NotificationCountAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  export type NotificationMinAggregateOutputType = {
    id: string | null
    userId: string | null
    orderId: string | null
    title: string | null
    message: string | null
    read: boolean | null
    type: $Enums.NotificationType | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type NotificationMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    orderId: string | null
    title: string | null
    message: string | null
    read: boolean | null
    type: $Enums.NotificationType | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type NotificationCountAggregateOutputType = {
    id: number
    userId: number
    orderId: number
    title: number
    message: number
    read: number
    type: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type NotificationMinAggregateInputType = {
    id?: true
    userId?: true
    orderId?: true
    title?: true
    message?: true
    read?: true
    type?: true
    createdAt?: true
    updatedAt?: true
  }

  export type NotificationMaxAggregateInputType = {
    id?: true
    userId?: true
    orderId?: true
    title?: true
    message?: true
    read?: true
    type?: true
    createdAt?: true
    updatedAt?: true
  }

  export type NotificationCountAggregateInputType = {
    id?: true
    userId?: true
    orderId?: true
    title?: true
    message?: true
    read?: true
    type?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type NotificationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notification to aggregate.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Notifications
    **/
    _count?: true | NotificationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotificationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotificationMaxAggregateInputType
  }

  export type GetNotificationAggregateType<T extends NotificationAggregateArgs> = {
        [P in keyof T & keyof AggregateNotification]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotification[P]>
      : GetScalarType<T[P], AggregateNotification[P]>
  }




  export type NotificationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithAggregationInput | NotificationOrderByWithAggregationInput[]
    by: NotificationScalarFieldEnum[] | NotificationScalarFieldEnum
    having?: NotificationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotificationCountAggregateInputType | true
    _min?: NotificationMinAggregateInputType
    _max?: NotificationMaxAggregateInputType
  }

  export type NotificationGroupByOutputType = {
    id: string
    userId: string
    orderId: string | null
    title: string | null
    message: string | null
    read: boolean
    type: $Enums.NotificationType
    createdAt: Date
    updatedAt: Date
    _count: NotificationCountAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  type GetNotificationGroupByPayload<T extends NotificationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NotificationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotificationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotificationGroupByOutputType[P]>
            : GetScalarType<T[P], NotificationGroupByOutputType[P]>
        }
      >
    >


  export type NotificationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    orderId?: boolean
    title?: boolean
    message?: boolean
    read?: boolean
    type?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    order?: boolean | Notification$orderArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>

  export type NotificationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    orderId?: boolean
    title?: boolean
    message?: boolean
    read?: boolean
    type?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    order?: boolean | Notification$orderArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>

  export type NotificationSelectScalar = {
    id?: boolean
    userId?: boolean
    orderId?: boolean
    title?: boolean
    message?: boolean
    read?: boolean
    type?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type NotificationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    order?: boolean | Notification$orderArgs<ExtArgs>
  }
  export type NotificationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    order?: boolean | Notification$orderArgs<ExtArgs>
  }

  export type $NotificationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Notification"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      order: Prisma.$OrderPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      orderId: string | null
      title: string | null
      message: string | null
      read: boolean
      type: $Enums.NotificationType
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["notification"]>
    composites: {}
  }

  type NotificationGetPayload<S extends boolean | null | undefined | NotificationDefaultArgs> = $Result.GetResult<Prisma.$NotificationPayload, S>

  type NotificationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<NotificationFindManyArgs, 'select' | 'include' | 'distinct' | 'relationLoadStrategy'> & {
      select?: NotificationCountAggregateInputType | true
    }

  export interface NotificationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Notification'], meta: { name: 'Notification' } }
    /**
     * Find zero or one Notification that matches the filter.
     * @param {NotificationFindUniqueArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends NotificationFindUniqueArgs>(args: SelectSubset<T, NotificationFindUniqueArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Notification that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {NotificationFindUniqueOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends NotificationFindUniqueOrThrowArgs>(args: SelectSubset<T, NotificationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Notification that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindFirstArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends NotificationFindFirstArgs>(args?: SelectSubset<T, NotificationFindFirstArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Notification that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindFirstOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends NotificationFindFirstOrThrowArgs>(args?: SelectSubset<T, NotificationFindFirstOrThrowArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Notifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Notifications
     * const notifications = await prisma.notification.findMany()
     * 
     * // Get first 10 Notifications
     * const notifications = await prisma.notification.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const notificationWithIdOnly = await prisma.notification.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends NotificationFindManyArgs>(args?: SelectSubset<T, NotificationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Notification.
     * @param {NotificationCreateArgs} args - Arguments to create a Notification.
     * @example
     * // Create one Notification
     * const Notification = await prisma.notification.create({
     *   data: {
     *     // ... data to create a Notification
     *   }
     * })
     * 
     */
    create<T extends NotificationCreateArgs>(args: SelectSubset<T, NotificationCreateArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Notifications.
     * @param {NotificationCreateManyArgs} args - Arguments to create many Notifications.
     * @example
     * // Create many Notifications
     * const notification = await prisma.notification.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends NotificationCreateManyArgs>(args?: SelectSubset<T, NotificationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Notifications and returns the data saved in the database.
     * @param {NotificationCreateManyAndReturnArgs} args - Arguments to create many Notifications.
     * @example
     * // Create many Notifications
     * const notification = await prisma.notification.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Notifications and only return the `id`
     * const notificationWithIdOnly = await prisma.notification.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends NotificationCreateManyAndReturnArgs>(args?: SelectSubset<T, NotificationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Notification.
     * @param {NotificationDeleteArgs} args - Arguments to delete one Notification.
     * @example
     * // Delete one Notification
     * const Notification = await prisma.notification.delete({
     *   where: {
     *     // ... filter to delete one Notification
     *   }
     * })
     * 
     */
    delete<T extends NotificationDeleteArgs>(args: SelectSubset<T, NotificationDeleteArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Notification.
     * @param {NotificationUpdateArgs} args - Arguments to update one Notification.
     * @example
     * // Update one Notification
     * const notification = await prisma.notification.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends NotificationUpdateArgs>(args: SelectSubset<T, NotificationUpdateArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Notifications.
     * @param {NotificationDeleteManyArgs} args - Arguments to filter Notifications to delete.
     * @example
     * // Delete a few Notifications
     * const { count } = await prisma.notification.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends NotificationDeleteManyArgs>(args?: SelectSubset<T, NotificationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Notifications
     * const notification = await prisma.notification.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends NotificationUpdateManyArgs>(args: SelectSubset<T, NotificationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Notification.
     * @param {NotificationUpsertArgs} args - Arguments to update or create a Notification.
     * @example
     * // Update or create a Notification
     * const notification = await prisma.notification.upsert({
     *   create: {
     *     // ... data to create a Notification
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Notification we want to update
     *   }
     * })
     */
    upsert<T extends NotificationUpsertArgs>(args: SelectSubset<T, NotificationUpsertArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationCountArgs} args - Arguments to filter Notifications to count.
     * @example
     * // Count the number of Notifications
     * const count = await prisma.notification.count({
     *   where: {
     *     // ... the filter for the Notifications we want to count
     *   }
     * })
    **/
    count<T extends NotificationCountArgs>(
      args?: Subset<T, NotificationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotificationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotificationAggregateArgs>(args: Subset<T, NotificationAggregateArgs>): Prisma.PrismaPromise<GetNotificationAggregateType<T>>

    /**
     * Group by Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends NotificationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: NotificationGroupByArgs['orderBy'] }
        : { orderBy?: NotificationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, NotificationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotificationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Notification model
   */
  readonly fields: NotificationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Notification.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__NotificationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    order<T extends Notification$orderArgs<ExtArgs> = {}>(args?: Subset<T, Notification$orderArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Notification model
   */ 
  interface NotificationFieldRefs {
    readonly id: FieldRef<"Notification", 'String'>
    readonly userId: FieldRef<"Notification", 'String'>
    readonly orderId: FieldRef<"Notification", 'String'>
    readonly title: FieldRef<"Notification", 'String'>
    readonly message: FieldRef<"Notification", 'String'>
    readonly read: FieldRef<"Notification", 'Boolean'>
    readonly type: FieldRef<"Notification", 'NotificationType'>
    readonly createdAt: FieldRef<"Notification", 'DateTime'>
    readonly updatedAt: FieldRef<"Notification", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Notification findUnique
   */
  export type NotificationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where: NotificationWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Notification findUniqueOrThrow
   */
  export type NotificationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where: NotificationWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Notification findFirst
   */
  export type NotificationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notifications.
     */
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Notification findFirstOrThrow
   */
  export type NotificationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notifications.
     */
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Notification findMany
   */
  export type NotificationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notifications to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Notification create
   */
  export type NotificationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The data needed to create a Notification.
     */
    data: XOR<NotificationCreateInput, NotificationUncheckedCreateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Notification createMany
   */
  export type NotificationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Notifications.
     */
    data: NotificationCreateManyInput | NotificationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Notification createManyAndReturn
   */
  export type NotificationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Notifications.
     */
    data: NotificationCreateManyInput | NotificationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Notification update
   */
  export type NotificationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The data needed to update a Notification.
     */
    data: XOR<NotificationUpdateInput, NotificationUncheckedUpdateInput>
    /**
     * Choose, which Notification to update.
     */
    where: NotificationWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Notification updateMany
   */
  export type NotificationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Notifications.
     */
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyInput>
    /**
     * Filter which Notifications to update
     */
    where?: NotificationWhereInput
  }

  /**
   * Notification upsert
   */
  export type NotificationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The filter to search for the Notification to update in case it exists.
     */
    where: NotificationWhereUniqueInput
    /**
     * In case the Notification found by the `where` argument doesn't exist, create a new Notification with this data.
     */
    create: XOR<NotificationCreateInput, NotificationUncheckedCreateInput>
    /**
     * In case the Notification was found with the provided `where` argument, update it with this data.
     */
    update: XOR<NotificationUpdateInput, NotificationUncheckedUpdateInput>
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Notification delete
   */
  export type NotificationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter which Notification to delete.
     */
    where: NotificationWhereUniqueInput
    relationLoadStrategy?: RelationLoadStrategy
  }

  /**
   * Notification deleteMany
   */
  export type NotificationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notifications to delete
     */
    where?: NotificationWhereInput
  }

  /**
   * Notification.order
   */
  export type Notification$orderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
  }

  /**
   * Notification without action
   */
  export type NotificationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    fname: 'fname',
    lname: 'lname',
    email: 'email',
    password: 'password',
    role: 'role',
    profilePic: 'profilePic',
    refreshToken: 'refreshToken',
    refreshTokenExp: 'refreshTokenExp',
    online: 'online',
    active: 'active',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    experience: 'experience',
    leadershipStyle: 'leadershipStyle',
    teamSize: 'teamSize',
    achievements: 'achievements',
    professionalDevelopment: 'professionalDevelopment',
    gender: 'gender',
    country: 'country',
    city: 'city',
    altEmail: 'altEmail',
    phone: 'phone',
    altPhone: 'altPhone',
    highestDegree: 'highestDegree',
    citationStyles: 'citationStyles',
    languages: 'languages',
    disciplines: 'disciplines',
    specialization: 'specialization',
    additionalSoftware: 'additionalSoftware',
    aboutMe: 'aboutMe'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const RelationLoadStrategy: {
    query: 'query',
    join: 'join'
  };

  export type RelationLoadStrategy = (typeof RelationLoadStrategy)[keyof typeof RelationLoadStrategy]


  export const FreelancerApplicationScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    status: 'status',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type FreelancerApplicationScalarFieldEnum = (typeof FreelancerApplicationScalarFieldEnum)[keyof typeof FreelancerApplicationScalarFieldEnum]


  export const OrderScalarFieldEnum: {
    id: 'id',
    orderId: 'orderId',
    topic: 'topic',
    category: 'category',
    service: 'service',
    sources: 'sources',
    citation: 'citation',
    pages: 'pages',
    cpp: 'cpp',
    amount: 'amount',
    deadline: 'deadline',
    duration: 'duration',
    instructions: 'instructions',
    attachments: 'attachments',
    additionalNotes: 'additionalNotes',
    status: 'status',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    freelancerId: 'freelancerId',
    invoiceId: 'invoiceId'
  };

  export type OrderScalarFieldEnum = (typeof OrderScalarFieldEnum)[keyof typeof OrderScalarFieldEnum]


  export const BidsScalarFieldEnum: {
    id: 'id',
    orderId: 'orderId',
    freelancerId: 'freelancerId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    status: 'status'
  };

  export type BidsScalarFieldEnum = (typeof BidsScalarFieldEnum)[keyof typeof BidsScalarFieldEnum]


  export const AssignmentScalarFieldEnum: {
    id: 'id',
    orderId: 'orderId',
    freelancerId: 'freelancerId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    status: 'status'
  };

  export type AssignmentScalarFieldEnum = (typeof AssignmentScalarFieldEnum)[keyof typeof AssignmentScalarFieldEnum]


  export const SubmittedJobsScalarFieldEnum: {
    id: 'id',
    orderId: 'orderId',
    freelancerId: 'freelancerId',
    file_Path: 'file_Path',
    file_mimeType: 'file_mimeType',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    status: 'status'
  };

  export type SubmittedJobsScalarFieldEnum = (typeof SubmittedJobsScalarFieldEnum)[keyof typeof SubmittedJobsScalarFieldEnum]


  export const CancelledJobsScalarFieldEnum: {
    id: 'id',
    orderId: 'orderId',
    freelancerId: 'freelancerId',
    attachments: 'attachments',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    status: 'status'
  };

  export type CancelledJobsScalarFieldEnum = (typeof CancelledJobsScalarFieldEnum)[keyof typeof CancelledJobsScalarFieldEnum]


  export const InvoiceScalarFieldEnum: {
    id: 'id',
    invoiceNumber: 'invoiceNumber',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    totalAmount: 'totalAmount',
    finalAmount: 'finalAmount',
    userId: 'userId',
    isDraft: 'isDraft'
  };

  export type InvoiceScalarFieldEnum = (typeof InvoiceScalarFieldEnum)[keyof typeof InvoiceScalarFieldEnum]


  export const PaymentScalarFieldEnum: {
    id: 'id',
    paymentRef: 'paymentRef',
    amount: 'amount',
    modeOfPayment: 'modeOfPayment',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    invoiceId: 'invoiceId',
    userId: 'userId'
  };

  export type PaymentScalarFieldEnum = (typeof PaymentScalarFieldEnum)[keyof typeof PaymentScalarFieldEnum]


  export const FinesScalarFieldEnum: {
    id: 'id',
    orderId: 'orderId',
    freelancerId: 'freelancerId',
    amount: 'amount',
    reason: 'reason',
    invoiceId: 'invoiceId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type FinesScalarFieldEnum = (typeof FinesScalarFieldEnum)[keyof typeof FinesScalarFieldEnum]


  export const ReviewScalarFieldEnum: {
    id: 'id',
    orderId: 'orderId',
    reviewerId: 'reviewerId',
    freelancerId: 'freelancerId',
    rating: 'rating',
    comment: 'comment',
    invoiceId: 'invoiceId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ReviewScalarFieldEnum = (typeof ReviewScalarFieldEnum)[keyof typeof ReviewScalarFieldEnum]


  export const NotificationScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    orderId: 'orderId',
    title: 'title',
    message: 'message',
    read: 'read',
    type: 'type',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type NotificationScalarFieldEnum = (typeof NotificationScalarFieldEnum)[keyof typeof NotificationScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Role'
   */
  export type EnumRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Role'>
    


  /**
   * Reference to a field of type 'Role[]'
   */
  export type ListEnumRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Role[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'ApplicationStatus'
   */
  export type EnumApplicationStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ApplicationStatus'>
    


  /**
   * Reference to a field of type 'ApplicationStatus[]'
   */
  export type ListEnumApplicationStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ApplicationStatus[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'OrderStatus'
   */
  export type EnumOrderStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderStatus'>
    


  /**
   * Reference to a field of type 'OrderStatus[]'
   */
  export type ListEnumOrderStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderStatus[]'>
    


  /**
   * Reference to a field of type 'ModeOfPayment'
   */
  export type EnumModeOfPaymentFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ModeOfPayment'>
    


  /**
   * Reference to a field of type 'ModeOfPayment[]'
   */
  export type ListEnumModeOfPaymentFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ModeOfPayment[]'>
    


  /**
   * Reference to a field of type 'NotificationType'
   */
  export type EnumNotificationTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'NotificationType'>
    


  /**
   * Reference to a field of type 'NotificationType[]'
   */
  export type ListEnumNotificationTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'NotificationType[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    fname?: StringFilter<"User"> | string
    lname?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    role?: EnumRoleNullableFilter<"User"> | $Enums.Role | null
    profilePic?: StringNullableFilter<"User"> | string | null
    refreshToken?: StringNullableFilter<"User"> | string | null
    refreshTokenExp?: DateTimeNullableFilter<"User"> | Date | string | null
    online?: BoolFilter<"User"> | boolean
    active?: BoolFilter<"User"> | boolean
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    experience?: StringNullableFilter<"User"> | string | null
    leadershipStyle?: StringNullableFilter<"User"> | string | null
    teamSize?: StringNullableFilter<"User"> | string | null
    achievements?: StringNullableFilter<"User"> | string | null
    professionalDevelopment?: StringNullableFilter<"User"> | string | null
    gender?: StringNullableFilter<"User"> | string | null
    country?: StringNullableFilter<"User"> | string | null
    city?: StringNullableFilter<"User"> | string | null
    altEmail?: StringNullableFilter<"User"> | string | null
    phone?: StringNullableFilter<"User"> | string | null
    altPhone?: StringNullableFilter<"User"> | string | null
    highestDegree?: StringNullableFilter<"User"> | string | null
    citationStyles?: StringNullableFilter<"User"> | string | null
    languages?: StringNullableFilter<"User"> | string | null
    disciplines?: StringNullableFilter<"User"> | string | null
    specialization?: StringNullableFilter<"User"> | string | null
    additionalSoftware?: StringNullableFilter<"User"> | string | null
    aboutMe?: StringNullableFilter<"User"> | string | null
    orders?: OrderListRelationFilter
    bids?: BidsListRelationFilter
    assignments?: AssignmentListRelationFilter
    SubmittedJobs?: SubmittedJobsListRelationFilter
    cancelledJobs?: CancelledJobsListRelationFilter
    invoices?: InvoiceListRelationFilter
    payments?: PaymentListRelationFilter
    fines?: FinesListRelationFilter
    reviews?: ReviewListRelationFilter
    reviewed?: ReviewListRelationFilter
    notifications?: NotificationListRelationFilter
    freelancerApplications?: FreelancerApplicationListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    fname?: SortOrder
    lname?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role?: SortOrderInput | SortOrder
    profilePic?: SortOrderInput | SortOrder
    refreshToken?: SortOrderInput | SortOrder
    refreshTokenExp?: SortOrderInput | SortOrder
    online?: SortOrder
    active?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    experience?: SortOrderInput | SortOrder
    leadershipStyle?: SortOrderInput | SortOrder
    teamSize?: SortOrderInput | SortOrder
    achievements?: SortOrderInput | SortOrder
    professionalDevelopment?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    country?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    altEmail?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    altPhone?: SortOrderInput | SortOrder
    highestDegree?: SortOrderInput | SortOrder
    citationStyles?: SortOrderInput | SortOrder
    languages?: SortOrderInput | SortOrder
    disciplines?: SortOrderInput | SortOrder
    specialization?: SortOrderInput | SortOrder
    additionalSoftware?: SortOrderInput | SortOrder
    aboutMe?: SortOrderInput | SortOrder
    orders?: OrderOrderByRelationAggregateInput
    bids?: BidsOrderByRelationAggregateInput
    assignments?: AssignmentOrderByRelationAggregateInput
    SubmittedJobs?: SubmittedJobsOrderByRelationAggregateInput
    cancelledJobs?: CancelledJobsOrderByRelationAggregateInput
    invoices?: InvoiceOrderByRelationAggregateInput
    payments?: PaymentOrderByRelationAggregateInput
    fines?: FinesOrderByRelationAggregateInput
    reviews?: ReviewOrderByRelationAggregateInput
    reviewed?: ReviewOrderByRelationAggregateInput
    notifications?: NotificationOrderByRelationAggregateInput
    freelancerApplications?: FreelancerApplicationOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    fname?: StringFilter<"User"> | string
    lname?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    role?: EnumRoleNullableFilter<"User"> | $Enums.Role | null
    profilePic?: StringNullableFilter<"User"> | string | null
    refreshToken?: StringNullableFilter<"User"> | string | null
    refreshTokenExp?: DateTimeNullableFilter<"User"> | Date | string | null
    online?: BoolFilter<"User"> | boolean
    active?: BoolFilter<"User"> | boolean
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    experience?: StringNullableFilter<"User"> | string | null
    leadershipStyle?: StringNullableFilter<"User"> | string | null
    teamSize?: StringNullableFilter<"User"> | string | null
    achievements?: StringNullableFilter<"User"> | string | null
    professionalDevelopment?: StringNullableFilter<"User"> | string | null
    gender?: StringNullableFilter<"User"> | string | null
    country?: StringNullableFilter<"User"> | string | null
    city?: StringNullableFilter<"User"> | string | null
    altEmail?: StringNullableFilter<"User"> | string | null
    phone?: StringNullableFilter<"User"> | string | null
    altPhone?: StringNullableFilter<"User"> | string | null
    highestDegree?: StringNullableFilter<"User"> | string | null
    citationStyles?: StringNullableFilter<"User"> | string | null
    languages?: StringNullableFilter<"User"> | string | null
    disciplines?: StringNullableFilter<"User"> | string | null
    specialization?: StringNullableFilter<"User"> | string | null
    additionalSoftware?: StringNullableFilter<"User"> | string | null
    aboutMe?: StringNullableFilter<"User"> | string | null
    orders?: OrderListRelationFilter
    bids?: BidsListRelationFilter
    assignments?: AssignmentListRelationFilter
    SubmittedJobs?: SubmittedJobsListRelationFilter
    cancelledJobs?: CancelledJobsListRelationFilter
    invoices?: InvoiceListRelationFilter
    payments?: PaymentListRelationFilter
    fines?: FinesListRelationFilter
    reviews?: ReviewListRelationFilter
    reviewed?: ReviewListRelationFilter
    notifications?: NotificationListRelationFilter
    freelancerApplications?: FreelancerApplicationListRelationFilter
  }, "id" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    fname?: SortOrder
    lname?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role?: SortOrderInput | SortOrder
    profilePic?: SortOrderInput | SortOrder
    refreshToken?: SortOrderInput | SortOrder
    refreshTokenExp?: SortOrderInput | SortOrder
    online?: SortOrder
    active?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    experience?: SortOrderInput | SortOrder
    leadershipStyle?: SortOrderInput | SortOrder
    teamSize?: SortOrderInput | SortOrder
    achievements?: SortOrderInput | SortOrder
    professionalDevelopment?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    country?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    altEmail?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    altPhone?: SortOrderInput | SortOrder
    highestDegree?: SortOrderInput | SortOrder
    citationStyles?: SortOrderInput | SortOrder
    languages?: SortOrderInput | SortOrder
    disciplines?: SortOrderInput | SortOrder
    specialization?: SortOrderInput | SortOrder
    additionalSoftware?: SortOrderInput | SortOrder
    aboutMe?: SortOrderInput | SortOrder
    _count?: UserCountOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    fname?: StringWithAggregatesFilter<"User"> | string
    lname?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    password?: StringWithAggregatesFilter<"User"> | string
    role?: EnumRoleNullableWithAggregatesFilter<"User"> | $Enums.Role | null
    profilePic?: StringNullableWithAggregatesFilter<"User"> | string | null
    refreshToken?: StringNullableWithAggregatesFilter<"User"> | string | null
    refreshTokenExp?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    online?: BoolWithAggregatesFilter<"User"> | boolean
    active?: BoolWithAggregatesFilter<"User"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    experience?: StringNullableWithAggregatesFilter<"User"> | string | null
    leadershipStyle?: StringNullableWithAggregatesFilter<"User"> | string | null
    teamSize?: StringNullableWithAggregatesFilter<"User"> | string | null
    achievements?: StringNullableWithAggregatesFilter<"User"> | string | null
    professionalDevelopment?: StringNullableWithAggregatesFilter<"User"> | string | null
    gender?: StringNullableWithAggregatesFilter<"User"> | string | null
    country?: StringNullableWithAggregatesFilter<"User"> | string | null
    city?: StringNullableWithAggregatesFilter<"User"> | string | null
    altEmail?: StringNullableWithAggregatesFilter<"User"> | string | null
    phone?: StringNullableWithAggregatesFilter<"User"> | string | null
    altPhone?: StringNullableWithAggregatesFilter<"User"> | string | null
    highestDegree?: StringNullableWithAggregatesFilter<"User"> | string | null
    citationStyles?: StringNullableWithAggregatesFilter<"User"> | string | null
    languages?: StringNullableWithAggregatesFilter<"User"> | string | null
    disciplines?: StringNullableWithAggregatesFilter<"User"> | string | null
    specialization?: StringNullableWithAggregatesFilter<"User"> | string | null
    additionalSoftware?: StringNullableWithAggregatesFilter<"User"> | string | null
    aboutMe?: StringNullableWithAggregatesFilter<"User"> | string | null
  }

  export type FreelancerApplicationWhereInput = {
    AND?: FreelancerApplicationWhereInput | FreelancerApplicationWhereInput[]
    OR?: FreelancerApplicationWhereInput[]
    NOT?: FreelancerApplicationWhereInput | FreelancerApplicationWhereInput[]
    id?: StringFilter<"FreelancerApplication"> | string
    userId?: StringFilter<"FreelancerApplication"> | string
    status?: EnumApplicationStatusFilter<"FreelancerApplication"> | $Enums.ApplicationStatus
    createdAt?: DateTimeFilter<"FreelancerApplication"> | Date | string
    updatedAt?: DateTimeFilter<"FreelancerApplication"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type FreelancerApplicationOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type FreelancerApplicationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: FreelancerApplicationWhereInput | FreelancerApplicationWhereInput[]
    OR?: FreelancerApplicationWhereInput[]
    NOT?: FreelancerApplicationWhereInput | FreelancerApplicationWhereInput[]
    userId?: StringFilter<"FreelancerApplication"> | string
    status?: EnumApplicationStatusFilter<"FreelancerApplication"> | $Enums.ApplicationStatus
    createdAt?: DateTimeFilter<"FreelancerApplication"> | Date | string
    updatedAt?: DateTimeFilter<"FreelancerApplication"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id">

  export type FreelancerApplicationOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: FreelancerApplicationCountOrderByAggregateInput
    _max?: FreelancerApplicationMaxOrderByAggregateInput
    _min?: FreelancerApplicationMinOrderByAggregateInput
  }

  export type FreelancerApplicationScalarWhereWithAggregatesInput = {
    AND?: FreelancerApplicationScalarWhereWithAggregatesInput | FreelancerApplicationScalarWhereWithAggregatesInput[]
    OR?: FreelancerApplicationScalarWhereWithAggregatesInput[]
    NOT?: FreelancerApplicationScalarWhereWithAggregatesInput | FreelancerApplicationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"FreelancerApplication"> | string
    userId?: StringWithAggregatesFilter<"FreelancerApplication"> | string
    status?: EnumApplicationStatusWithAggregatesFilter<"FreelancerApplication"> | $Enums.ApplicationStatus
    createdAt?: DateTimeWithAggregatesFilter<"FreelancerApplication"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"FreelancerApplication"> | Date | string
  }

  export type OrderWhereInput = {
    AND?: OrderWhereInput | OrderWhereInput[]
    OR?: OrderWhereInput[]
    NOT?: OrderWhereInput | OrderWhereInput[]
    id?: StringFilter<"Order"> | string
    orderId?: StringFilter<"Order"> | string
    topic?: StringFilter<"Order"> | string
    category?: StringNullableFilter<"Order"> | string | null
    service?: StringNullableFilter<"Order"> | string | null
    sources?: StringNullableFilter<"Order"> | string | null
    citation?: StringNullableFilter<"Order"> | string | null
    pages?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    cpp?: IntFilter<"Order"> | number
    amount?: IntFilter<"Order"> | number
    deadline?: DateTimeFilter<"Order"> | Date | string
    duration?: StringFilter<"Order"> | string
    instructions?: StringFilter<"Order"> | string
    attachments?: StringNullableListFilter<"Order">
    additionalNotes?: StringNullableFilter<"Order"> | string | null
    status?: EnumOrderStatusFilter<"Order"> | $Enums.OrderStatus
    createdAt?: DateTimeFilter<"Order"> | Date | string
    updatedAt?: DateTimeFilter<"Order"> | Date | string
    freelancerId?: StringNullableFilter<"Order"> | string | null
    invoiceId?: StringNullableFilter<"Order"> | string | null
    freelancer?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    bids?: BidsListRelationFilter
    assignments?: AssignmentListRelationFilter
    SubmittedJobs?: SubmittedJobsListRelationFilter
    cancelledJobs?: CancelledJobsListRelationFilter
    fines?: FinesListRelationFilter
    reviews?: ReviewListRelationFilter
    invoice?: XOR<InvoiceNullableRelationFilter, InvoiceWhereInput> | null
    notifications?: NotificationListRelationFilter
  }

  export type OrderOrderByWithRelationInput = {
    id?: SortOrder
    orderId?: SortOrder
    topic?: SortOrder
    category?: SortOrderInput | SortOrder
    service?: SortOrderInput | SortOrder
    sources?: SortOrderInput | SortOrder
    citation?: SortOrderInput | SortOrder
    pages?: SortOrderInput | SortOrder
    cpp?: SortOrder
    amount?: SortOrder
    deadline?: SortOrder
    duration?: SortOrder
    instructions?: SortOrder
    attachments?: SortOrder
    additionalNotes?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    freelancerId?: SortOrderInput | SortOrder
    invoiceId?: SortOrderInput | SortOrder
    freelancer?: UserOrderByWithRelationInput
    bids?: BidsOrderByRelationAggregateInput
    assignments?: AssignmentOrderByRelationAggregateInput
    SubmittedJobs?: SubmittedJobsOrderByRelationAggregateInput
    cancelledJobs?: CancelledJobsOrderByRelationAggregateInput
    fines?: FinesOrderByRelationAggregateInput
    reviews?: ReviewOrderByRelationAggregateInput
    invoice?: InvoiceOrderByWithRelationInput
    notifications?: NotificationOrderByRelationAggregateInput
  }

  export type OrderWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: OrderWhereInput | OrderWhereInput[]
    OR?: OrderWhereInput[]
    NOT?: OrderWhereInput | OrderWhereInput[]
    orderId?: StringFilter<"Order"> | string
    topic?: StringFilter<"Order"> | string
    category?: StringNullableFilter<"Order"> | string | null
    service?: StringNullableFilter<"Order"> | string | null
    sources?: StringNullableFilter<"Order"> | string | null
    citation?: StringNullableFilter<"Order"> | string | null
    pages?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    cpp?: IntFilter<"Order"> | number
    amount?: IntFilter<"Order"> | number
    deadline?: DateTimeFilter<"Order"> | Date | string
    duration?: StringFilter<"Order"> | string
    instructions?: StringFilter<"Order"> | string
    attachments?: StringNullableListFilter<"Order">
    additionalNotes?: StringNullableFilter<"Order"> | string | null
    status?: EnumOrderStatusFilter<"Order"> | $Enums.OrderStatus
    createdAt?: DateTimeFilter<"Order"> | Date | string
    updatedAt?: DateTimeFilter<"Order"> | Date | string
    freelancerId?: StringNullableFilter<"Order"> | string | null
    invoiceId?: StringNullableFilter<"Order"> | string | null
    freelancer?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    bids?: BidsListRelationFilter
    assignments?: AssignmentListRelationFilter
    SubmittedJobs?: SubmittedJobsListRelationFilter
    cancelledJobs?: CancelledJobsListRelationFilter
    fines?: FinesListRelationFilter
    reviews?: ReviewListRelationFilter
    invoice?: XOR<InvoiceNullableRelationFilter, InvoiceWhereInput> | null
    notifications?: NotificationListRelationFilter
  }, "id">

  export type OrderOrderByWithAggregationInput = {
    id?: SortOrder
    orderId?: SortOrder
    topic?: SortOrder
    category?: SortOrderInput | SortOrder
    service?: SortOrderInput | SortOrder
    sources?: SortOrderInput | SortOrder
    citation?: SortOrderInput | SortOrder
    pages?: SortOrderInput | SortOrder
    cpp?: SortOrder
    amount?: SortOrder
    deadline?: SortOrder
    duration?: SortOrder
    instructions?: SortOrder
    attachments?: SortOrder
    additionalNotes?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    freelancerId?: SortOrderInput | SortOrder
    invoiceId?: SortOrderInput | SortOrder
    _count?: OrderCountOrderByAggregateInput
    _avg?: OrderAvgOrderByAggregateInput
    _max?: OrderMaxOrderByAggregateInput
    _min?: OrderMinOrderByAggregateInput
    _sum?: OrderSumOrderByAggregateInput
  }

  export type OrderScalarWhereWithAggregatesInput = {
    AND?: OrderScalarWhereWithAggregatesInput | OrderScalarWhereWithAggregatesInput[]
    OR?: OrderScalarWhereWithAggregatesInput[]
    NOT?: OrderScalarWhereWithAggregatesInput | OrderScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Order"> | string
    orderId?: StringWithAggregatesFilter<"Order"> | string
    topic?: StringWithAggregatesFilter<"Order"> | string
    category?: StringNullableWithAggregatesFilter<"Order"> | string | null
    service?: StringNullableWithAggregatesFilter<"Order"> | string | null
    sources?: StringNullableWithAggregatesFilter<"Order"> | string | null
    citation?: StringNullableWithAggregatesFilter<"Order"> | string | null
    pages?: DecimalNullableWithAggregatesFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    cpp?: IntWithAggregatesFilter<"Order"> | number
    amount?: IntWithAggregatesFilter<"Order"> | number
    deadline?: DateTimeWithAggregatesFilter<"Order"> | Date | string
    duration?: StringWithAggregatesFilter<"Order"> | string
    instructions?: StringWithAggregatesFilter<"Order"> | string
    attachments?: StringNullableListFilter<"Order">
    additionalNotes?: StringNullableWithAggregatesFilter<"Order"> | string | null
    status?: EnumOrderStatusWithAggregatesFilter<"Order"> | $Enums.OrderStatus
    createdAt?: DateTimeWithAggregatesFilter<"Order"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Order"> | Date | string
    freelancerId?: StringNullableWithAggregatesFilter<"Order"> | string | null
    invoiceId?: StringNullableWithAggregatesFilter<"Order"> | string | null
  }

  export type BidsWhereInput = {
    AND?: BidsWhereInput | BidsWhereInput[]
    OR?: BidsWhereInput[]
    NOT?: BidsWhereInput | BidsWhereInput[]
    id?: StringFilter<"Bids"> | string
    orderId?: StringFilter<"Bids"> | string
    freelancerId?: StringFilter<"Bids"> | string
    createdAt?: DateTimeFilter<"Bids"> | Date | string
    updatedAt?: DateTimeFilter<"Bids"> | Date | string
    status?: EnumOrderStatusFilter<"Bids"> | $Enums.OrderStatus
    order?: XOR<OrderRelationFilter, OrderWhereInput>
    freelancer?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type BidsOrderByWithRelationInput = {
    id?: SortOrder
    orderId?: SortOrder
    freelancerId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    status?: SortOrder
    order?: OrderOrderByWithRelationInput
    freelancer?: UserOrderByWithRelationInput
  }

  export type BidsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: BidsWhereInput | BidsWhereInput[]
    OR?: BidsWhereInput[]
    NOT?: BidsWhereInput | BidsWhereInput[]
    orderId?: StringFilter<"Bids"> | string
    freelancerId?: StringFilter<"Bids"> | string
    createdAt?: DateTimeFilter<"Bids"> | Date | string
    updatedAt?: DateTimeFilter<"Bids"> | Date | string
    status?: EnumOrderStatusFilter<"Bids"> | $Enums.OrderStatus
    order?: XOR<OrderRelationFilter, OrderWhereInput>
    freelancer?: XOR<UserRelationFilter, UserWhereInput>
  }, "id">

  export type BidsOrderByWithAggregationInput = {
    id?: SortOrder
    orderId?: SortOrder
    freelancerId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    status?: SortOrder
    _count?: BidsCountOrderByAggregateInput
    _max?: BidsMaxOrderByAggregateInput
    _min?: BidsMinOrderByAggregateInput
  }

  export type BidsScalarWhereWithAggregatesInput = {
    AND?: BidsScalarWhereWithAggregatesInput | BidsScalarWhereWithAggregatesInput[]
    OR?: BidsScalarWhereWithAggregatesInput[]
    NOT?: BidsScalarWhereWithAggregatesInput | BidsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Bids"> | string
    orderId?: StringWithAggregatesFilter<"Bids"> | string
    freelancerId?: StringWithAggregatesFilter<"Bids"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Bids"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Bids"> | Date | string
    status?: EnumOrderStatusWithAggregatesFilter<"Bids"> | $Enums.OrderStatus
  }

  export type AssignmentWhereInput = {
    AND?: AssignmentWhereInput | AssignmentWhereInput[]
    OR?: AssignmentWhereInput[]
    NOT?: AssignmentWhereInput | AssignmentWhereInput[]
    id?: StringFilter<"Assignment"> | string
    orderId?: StringFilter<"Assignment"> | string
    freelancerId?: StringFilter<"Assignment"> | string
    createdAt?: DateTimeFilter<"Assignment"> | Date | string
    updatedAt?: DateTimeFilter<"Assignment"> | Date | string
    status?: EnumOrderStatusFilter<"Assignment"> | $Enums.OrderStatus
    order?: XOR<OrderRelationFilter, OrderWhereInput>
    freelancer?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type AssignmentOrderByWithRelationInput = {
    id?: SortOrder
    orderId?: SortOrder
    freelancerId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    status?: SortOrder
    order?: OrderOrderByWithRelationInput
    freelancer?: UserOrderByWithRelationInput
  }

  export type AssignmentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AssignmentWhereInput | AssignmentWhereInput[]
    OR?: AssignmentWhereInput[]
    NOT?: AssignmentWhereInput | AssignmentWhereInput[]
    orderId?: StringFilter<"Assignment"> | string
    freelancerId?: StringFilter<"Assignment"> | string
    createdAt?: DateTimeFilter<"Assignment"> | Date | string
    updatedAt?: DateTimeFilter<"Assignment"> | Date | string
    status?: EnumOrderStatusFilter<"Assignment"> | $Enums.OrderStatus
    order?: XOR<OrderRelationFilter, OrderWhereInput>
    freelancer?: XOR<UserRelationFilter, UserWhereInput>
  }, "id">

  export type AssignmentOrderByWithAggregationInput = {
    id?: SortOrder
    orderId?: SortOrder
    freelancerId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    status?: SortOrder
    _count?: AssignmentCountOrderByAggregateInput
    _max?: AssignmentMaxOrderByAggregateInput
    _min?: AssignmentMinOrderByAggregateInput
  }

  export type AssignmentScalarWhereWithAggregatesInput = {
    AND?: AssignmentScalarWhereWithAggregatesInput | AssignmentScalarWhereWithAggregatesInput[]
    OR?: AssignmentScalarWhereWithAggregatesInput[]
    NOT?: AssignmentScalarWhereWithAggregatesInput | AssignmentScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Assignment"> | string
    orderId?: StringWithAggregatesFilter<"Assignment"> | string
    freelancerId?: StringWithAggregatesFilter<"Assignment"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Assignment"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Assignment"> | Date | string
    status?: EnumOrderStatusWithAggregatesFilter<"Assignment"> | $Enums.OrderStatus
  }

  export type SubmittedJobsWhereInput = {
    AND?: SubmittedJobsWhereInput | SubmittedJobsWhereInput[]
    OR?: SubmittedJobsWhereInput[]
    NOT?: SubmittedJobsWhereInput | SubmittedJobsWhereInput[]
    id?: StringFilter<"SubmittedJobs"> | string
    orderId?: StringFilter<"SubmittedJobs"> | string
    freelancerId?: StringFilter<"SubmittedJobs"> | string
    file_Path?: StringFilter<"SubmittedJobs"> | string
    file_mimeType?: StringFilter<"SubmittedJobs"> | string
    createdAt?: DateTimeFilter<"SubmittedJobs"> | Date | string
    updatedAt?: DateTimeFilter<"SubmittedJobs"> | Date | string
    status?: EnumOrderStatusFilter<"SubmittedJobs"> | $Enums.OrderStatus
    order?: XOR<OrderRelationFilter, OrderWhereInput>
    freelancer?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type SubmittedJobsOrderByWithRelationInput = {
    id?: SortOrder
    orderId?: SortOrder
    freelancerId?: SortOrder
    file_Path?: SortOrder
    file_mimeType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    status?: SortOrder
    order?: OrderOrderByWithRelationInput
    freelancer?: UserOrderByWithRelationInput
  }

  export type SubmittedJobsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SubmittedJobsWhereInput | SubmittedJobsWhereInput[]
    OR?: SubmittedJobsWhereInput[]
    NOT?: SubmittedJobsWhereInput | SubmittedJobsWhereInput[]
    orderId?: StringFilter<"SubmittedJobs"> | string
    freelancerId?: StringFilter<"SubmittedJobs"> | string
    file_Path?: StringFilter<"SubmittedJobs"> | string
    file_mimeType?: StringFilter<"SubmittedJobs"> | string
    createdAt?: DateTimeFilter<"SubmittedJobs"> | Date | string
    updatedAt?: DateTimeFilter<"SubmittedJobs"> | Date | string
    status?: EnumOrderStatusFilter<"SubmittedJobs"> | $Enums.OrderStatus
    order?: XOR<OrderRelationFilter, OrderWhereInput>
    freelancer?: XOR<UserRelationFilter, UserWhereInput>
  }, "id">

  export type SubmittedJobsOrderByWithAggregationInput = {
    id?: SortOrder
    orderId?: SortOrder
    freelancerId?: SortOrder
    file_Path?: SortOrder
    file_mimeType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    status?: SortOrder
    _count?: SubmittedJobsCountOrderByAggregateInput
    _max?: SubmittedJobsMaxOrderByAggregateInput
    _min?: SubmittedJobsMinOrderByAggregateInput
  }

  export type SubmittedJobsScalarWhereWithAggregatesInput = {
    AND?: SubmittedJobsScalarWhereWithAggregatesInput | SubmittedJobsScalarWhereWithAggregatesInput[]
    OR?: SubmittedJobsScalarWhereWithAggregatesInput[]
    NOT?: SubmittedJobsScalarWhereWithAggregatesInput | SubmittedJobsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SubmittedJobs"> | string
    orderId?: StringWithAggregatesFilter<"SubmittedJobs"> | string
    freelancerId?: StringWithAggregatesFilter<"SubmittedJobs"> | string
    file_Path?: StringWithAggregatesFilter<"SubmittedJobs"> | string
    file_mimeType?: StringWithAggregatesFilter<"SubmittedJobs"> | string
    createdAt?: DateTimeWithAggregatesFilter<"SubmittedJobs"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"SubmittedJobs"> | Date | string
    status?: EnumOrderStatusWithAggregatesFilter<"SubmittedJobs"> | $Enums.OrderStatus
  }

  export type CancelledJobsWhereInput = {
    AND?: CancelledJobsWhereInput | CancelledJobsWhereInput[]
    OR?: CancelledJobsWhereInput[]
    NOT?: CancelledJobsWhereInput | CancelledJobsWhereInput[]
    id?: StringFilter<"CancelledJobs"> | string
    orderId?: StringFilter<"CancelledJobs"> | string
    freelancerId?: StringFilter<"CancelledJobs"> | string
    attachments?: StringNullableFilter<"CancelledJobs"> | string | null
    createdAt?: DateTimeFilter<"CancelledJobs"> | Date | string
    updatedAt?: DateTimeFilter<"CancelledJobs"> | Date | string
    status?: EnumOrderStatusFilter<"CancelledJobs"> | $Enums.OrderStatus
    order?: XOR<OrderRelationFilter, OrderWhereInput>
    freelancer?: XOR<UserNullableRelationFilter, UserWhereInput> | null
  }

  export type CancelledJobsOrderByWithRelationInput = {
    id?: SortOrder
    orderId?: SortOrder
    freelancerId?: SortOrder
    attachments?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    status?: SortOrder
    order?: OrderOrderByWithRelationInput
    freelancer?: UserOrderByWithRelationInput
  }

  export type CancelledJobsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: CancelledJobsWhereInput | CancelledJobsWhereInput[]
    OR?: CancelledJobsWhereInput[]
    NOT?: CancelledJobsWhereInput | CancelledJobsWhereInput[]
    orderId?: StringFilter<"CancelledJobs"> | string
    freelancerId?: StringFilter<"CancelledJobs"> | string
    attachments?: StringNullableFilter<"CancelledJobs"> | string | null
    createdAt?: DateTimeFilter<"CancelledJobs"> | Date | string
    updatedAt?: DateTimeFilter<"CancelledJobs"> | Date | string
    status?: EnumOrderStatusFilter<"CancelledJobs"> | $Enums.OrderStatus
    order?: XOR<OrderRelationFilter, OrderWhereInput>
    freelancer?: XOR<UserNullableRelationFilter, UserWhereInput> | null
  }, "id">

  export type CancelledJobsOrderByWithAggregationInput = {
    id?: SortOrder
    orderId?: SortOrder
    freelancerId?: SortOrder
    attachments?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    status?: SortOrder
    _count?: CancelledJobsCountOrderByAggregateInput
    _max?: CancelledJobsMaxOrderByAggregateInput
    _min?: CancelledJobsMinOrderByAggregateInput
  }

  export type CancelledJobsScalarWhereWithAggregatesInput = {
    AND?: CancelledJobsScalarWhereWithAggregatesInput | CancelledJobsScalarWhereWithAggregatesInput[]
    OR?: CancelledJobsScalarWhereWithAggregatesInput[]
    NOT?: CancelledJobsScalarWhereWithAggregatesInput | CancelledJobsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CancelledJobs"> | string
    orderId?: StringWithAggregatesFilter<"CancelledJobs"> | string
    freelancerId?: StringWithAggregatesFilter<"CancelledJobs"> | string
    attachments?: StringNullableWithAggregatesFilter<"CancelledJobs"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"CancelledJobs"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"CancelledJobs"> | Date | string
    status?: EnumOrderStatusWithAggregatesFilter<"CancelledJobs"> | $Enums.OrderStatus
  }

  export type InvoiceWhereInput = {
    AND?: InvoiceWhereInput | InvoiceWhereInput[]
    OR?: InvoiceWhereInput[]
    NOT?: InvoiceWhereInput | InvoiceWhereInput[]
    id?: StringFilter<"Invoice"> | string
    invoiceNumber?: StringFilter<"Invoice"> | string
    createdAt?: DateTimeFilter<"Invoice"> | Date | string
    updatedAt?: DateTimeFilter<"Invoice"> | Date | string
    totalAmount?: IntFilter<"Invoice"> | number
    finalAmount?: IntFilter<"Invoice"> | number
    userId?: StringFilter<"Invoice"> | string
    isDraft?: BoolFilter<"Invoice"> | boolean
    orders?: OrderListRelationFilter
    payments?: PaymentListRelationFilter
    user?: XOR<UserRelationFilter, UserWhereInput>
    fines?: FinesListRelationFilter
    reviews?: ReviewListRelationFilter
  }

  export type InvoiceOrderByWithRelationInput = {
    id?: SortOrder
    invoiceNumber?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    totalAmount?: SortOrder
    finalAmount?: SortOrder
    userId?: SortOrder
    isDraft?: SortOrder
    orders?: OrderOrderByRelationAggregateInput
    payments?: PaymentOrderByRelationAggregateInput
    user?: UserOrderByWithRelationInput
    fines?: FinesOrderByRelationAggregateInput
    reviews?: ReviewOrderByRelationAggregateInput
  }

  export type InvoiceWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    invoiceNumber?: string
    AND?: InvoiceWhereInput | InvoiceWhereInput[]
    OR?: InvoiceWhereInput[]
    NOT?: InvoiceWhereInput | InvoiceWhereInput[]
    createdAt?: DateTimeFilter<"Invoice"> | Date | string
    updatedAt?: DateTimeFilter<"Invoice"> | Date | string
    totalAmount?: IntFilter<"Invoice"> | number
    finalAmount?: IntFilter<"Invoice"> | number
    userId?: StringFilter<"Invoice"> | string
    isDraft?: BoolFilter<"Invoice"> | boolean
    orders?: OrderListRelationFilter
    payments?: PaymentListRelationFilter
    user?: XOR<UserRelationFilter, UserWhereInput>
    fines?: FinesListRelationFilter
    reviews?: ReviewListRelationFilter
  }, "id" | "invoiceNumber">

  export type InvoiceOrderByWithAggregationInput = {
    id?: SortOrder
    invoiceNumber?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    totalAmount?: SortOrder
    finalAmount?: SortOrder
    userId?: SortOrder
    isDraft?: SortOrder
    _count?: InvoiceCountOrderByAggregateInput
    _avg?: InvoiceAvgOrderByAggregateInput
    _max?: InvoiceMaxOrderByAggregateInput
    _min?: InvoiceMinOrderByAggregateInput
    _sum?: InvoiceSumOrderByAggregateInput
  }

  export type InvoiceScalarWhereWithAggregatesInput = {
    AND?: InvoiceScalarWhereWithAggregatesInput | InvoiceScalarWhereWithAggregatesInput[]
    OR?: InvoiceScalarWhereWithAggregatesInput[]
    NOT?: InvoiceScalarWhereWithAggregatesInput | InvoiceScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Invoice"> | string
    invoiceNumber?: StringWithAggregatesFilter<"Invoice"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Invoice"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Invoice"> | Date | string
    totalAmount?: IntWithAggregatesFilter<"Invoice"> | number
    finalAmount?: IntWithAggregatesFilter<"Invoice"> | number
    userId?: StringWithAggregatesFilter<"Invoice"> | string
    isDraft?: BoolWithAggregatesFilter<"Invoice"> | boolean
  }

  export type PaymentWhereInput = {
    AND?: PaymentWhereInput | PaymentWhereInput[]
    OR?: PaymentWhereInput[]
    NOT?: PaymentWhereInput | PaymentWhereInput[]
    id?: StringFilter<"Payment"> | string
    paymentRef?: StringFilter<"Payment"> | string
    amount?: IntFilter<"Payment"> | number
    modeOfPayment?: EnumModeOfPaymentFilter<"Payment"> | $Enums.ModeOfPayment
    createdAt?: DateTimeFilter<"Payment"> | Date | string
    updatedAt?: DateTimeFilter<"Payment"> | Date | string
    invoiceId?: StringFilter<"Payment"> | string
    userId?: StringFilter<"Payment"> | string
    invoice?: XOR<InvoiceRelationFilter, InvoiceWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type PaymentOrderByWithRelationInput = {
    id?: SortOrder
    paymentRef?: SortOrder
    amount?: SortOrder
    modeOfPayment?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    invoiceId?: SortOrder
    userId?: SortOrder
    invoice?: InvoiceOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type PaymentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    paymentRef?: string
    AND?: PaymentWhereInput | PaymentWhereInput[]
    OR?: PaymentWhereInput[]
    NOT?: PaymentWhereInput | PaymentWhereInput[]
    amount?: IntFilter<"Payment"> | number
    modeOfPayment?: EnumModeOfPaymentFilter<"Payment"> | $Enums.ModeOfPayment
    createdAt?: DateTimeFilter<"Payment"> | Date | string
    updatedAt?: DateTimeFilter<"Payment"> | Date | string
    invoiceId?: StringFilter<"Payment"> | string
    userId?: StringFilter<"Payment"> | string
    invoice?: XOR<InvoiceRelationFilter, InvoiceWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "paymentRef">

  export type PaymentOrderByWithAggregationInput = {
    id?: SortOrder
    paymentRef?: SortOrder
    amount?: SortOrder
    modeOfPayment?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    invoiceId?: SortOrder
    userId?: SortOrder
    _count?: PaymentCountOrderByAggregateInput
    _avg?: PaymentAvgOrderByAggregateInput
    _max?: PaymentMaxOrderByAggregateInput
    _min?: PaymentMinOrderByAggregateInput
    _sum?: PaymentSumOrderByAggregateInput
  }

  export type PaymentScalarWhereWithAggregatesInput = {
    AND?: PaymentScalarWhereWithAggregatesInput | PaymentScalarWhereWithAggregatesInput[]
    OR?: PaymentScalarWhereWithAggregatesInput[]
    NOT?: PaymentScalarWhereWithAggregatesInput | PaymentScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Payment"> | string
    paymentRef?: StringWithAggregatesFilter<"Payment"> | string
    amount?: IntWithAggregatesFilter<"Payment"> | number
    modeOfPayment?: EnumModeOfPaymentWithAggregatesFilter<"Payment"> | $Enums.ModeOfPayment
    createdAt?: DateTimeWithAggregatesFilter<"Payment"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Payment"> | Date | string
    invoiceId?: StringWithAggregatesFilter<"Payment"> | string
    userId?: StringWithAggregatesFilter<"Payment"> | string
  }

  export type FinesWhereInput = {
    AND?: FinesWhereInput | FinesWhereInput[]
    OR?: FinesWhereInput[]
    NOT?: FinesWhereInput | FinesWhereInput[]
    id?: StringFilter<"Fines"> | string
    orderId?: StringFilter<"Fines"> | string
    freelancerId?: StringFilter<"Fines"> | string
    amount?: IntFilter<"Fines"> | number
    reason?: StringNullableFilter<"Fines"> | string | null
    invoiceId?: StringNullableFilter<"Fines"> | string | null
    createdAt?: DateTimeFilter<"Fines"> | Date | string
    updatedAt?: DateTimeFilter<"Fines"> | Date | string
    order?: XOR<OrderRelationFilter, OrderWhereInput>
    freelancer?: XOR<UserRelationFilter, UserWhereInput>
    invoice?: XOR<InvoiceNullableRelationFilter, InvoiceWhereInput> | null
  }

  export type FinesOrderByWithRelationInput = {
    id?: SortOrder
    orderId?: SortOrder
    freelancerId?: SortOrder
    amount?: SortOrder
    reason?: SortOrderInput | SortOrder
    invoiceId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    order?: OrderOrderByWithRelationInput
    freelancer?: UserOrderByWithRelationInput
    invoice?: InvoiceOrderByWithRelationInput
  }

  export type FinesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: FinesWhereInput | FinesWhereInput[]
    OR?: FinesWhereInput[]
    NOT?: FinesWhereInput | FinesWhereInput[]
    orderId?: StringFilter<"Fines"> | string
    freelancerId?: StringFilter<"Fines"> | string
    amount?: IntFilter<"Fines"> | number
    reason?: StringNullableFilter<"Fines"> | string | null
    invoiceId?: StringNullableFilter<"Fines"> | string | null
    createdAt?: DateTimeFilter<"Fines"> | Date | string
    updatedAt?: DateTimeFilter<"Fines"> | Date | string
    order?: XOR<OrderRelationFilter, OrderWhereInput>
    freelancer?: XOR<UserRelationFilter, UserWhereInput>
    invoice?: XOR<InvoiceNullableRelationFilter, InvoiceWhereInput> | null
  }, "id">

  export type FinesOrderByWithAggregationInput = {
    id?: SortOrder
    orderId?: SortOrder
    freelancerId?: SortOrder
    amount?: SortOrder
    reason?: SortOrderInput | SortOrder
    invoiceId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: FinesCountOrderByAggregateInput
    _avg?: FinesAvgOrderByAggregateInput
    _max?: FinesMaxOrderByAggregateInput
    _min?: FinesMinOrderByAggregateInput
    _sum?: FinesSumOrderByAggregateInput
  }

  export type FinesScalarWhereWithAggregatesInput = {
    AND?: FinesScalarWhereWithAggregatesInput | FinesScalarWhereWithAggregatesInput[]
    OR?: FinesScalarWhereWithAggregatesInput[]
    NOT?: FinesScalarWhereWithAggregatesInput | FinesScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Fines"> | string
    orderId?: StringWithAggregatesFilter<"Fines"> | string
    freelancerId?: StringWithAggregatesFilter<"Fines"> | string
    amount?: IntWithAggregatesFilter<"Fines"> | number
    reason?: StringNullableWithAggregatesFilter<"Fines"> | string | null
    invoiceId?: StringNullableWithAggregatesFilter<"Fines"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Fines"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Fines"> | Date | string
  }

  export type ReviewWhereInput = {
    AND?: ReviewWhereInput | ReviewWhereInput[]
    OR?: ReviewWhereInput[]
    NOT?: ReviewWhereInput | ReviewWhereInput[]
    id?: StringFilter<"Review"> | string
    orderId?: StringFilter<"Review"> | string
    reviewerId?: StringFilter<"Review"> | string
    freelancerId?: StringFilter<"Review"> | string
    rating?: IntNullableFilter<"Review"> | number | null
    comment?: StringNullableFilter<"Review"> | string | null
    invoiceId?: StringNullableFilter<"Review"> | string | null
    createdAt?: DateTimeFilter<"Review"> | Date | string
    updatedAt?: DateTimeFilter<"Review"> | Date | string
    order?: XOR<OrderRelationFilter, OrderWhereInput>
    reviewer?: XOR<UserRelationFilter, UserWhereInput>
    freelancer?: XOR<UserRelationFilter, UserWhereInput>
    invoice?: XOR<InvoiceNullableRelationFilter, InvoiceWhereInput> | null
  }

  export type ReviewOrderByWithRelationInput = {
    id?: SortOrder
    orderId?: SortOrder
    reviewerId?: SortOrder
    freelancerId?: SortOrder
    rating?: SortOrderInput | SortOrder
    comment?: SortOrderInput | SortOrder
    invoiceId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    order?: OrderOrderByWithRelationInput
    reviewer?: UserOrderByWithRelationInput
    freelancer?: UserOrderByWithRelationInput
    invoice?: InvoiceOrderByWithRelationInput
  }

  export type ReviewWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ReviewWhereInput | ReviewWhereInput[]
    OR?: ReviewWhereInput[]
    NOT?: ReviewWhereInput | ReviewWhereInput[]
    orderId?: StringFilter<"Review"> | string
    reviewerId?: StringFilter<"Review"> | string
    freelancerId?: StringFilter<"Review"> | string
    rating?: IntNullableFilter<"Review"> | number | null
    comment?: StringNullableFilter<"Review"> | string | null
    invoiceId?: StringNullableFilter<"Review"> | string | null
    createdAt?: DateTimeFilter<"Review"> | Date | string
    updatedAt?: DateTimeFilter<"Review"> | Date | string
    order?: XOR<OrderRelationFilter, OrderWhereInput>
    reviewer?: XOR<UserRelationFilter, UserWhereInput>
    freelancer?: XOR<UserRelationFilter, UserWhereInput>
    invoice?: XOR<InvoiceNullableRelationFilter, InvoiceWhereInput> | null
  }, "id">

  export type ReviewOrderByWithAggregationInput = {
    id?: SortOrder
    orderId?: SortOrder
    reviewerId?: SortOrder
    freelancerId?: SortOrder
    rating?: SortOrderInput | SortOrder
    comment?: SortOrderInput | SortOrder
    invoiceId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ReviewCountOrderByAggregateInput
    _avg?: ReviewAvgOrderByAggregateInput
    _max?: ReviewMaxOrderByAggregateInput
    _min?: ReviewMinOrderByAggregateInput
    _sum?: ReviewSumOrderByAggregateInput
  }

  export type ReviewScalarWhereWithAggregatesInput = {
    AND?: ReviewScalarWhereWithAggregatesInput | ReviewScalarWhereWithAggregatesInput[]
    OR?: ReviewScalarWhereWithAggregatesInput[]
    NOT?: ReviewScalarWhereWithAggregatesInput | ReviewScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Review"> | string
    orderId?: StringWithAggregatesFilter<"Review"> | string
    reviewerId?: StringWithAggregatesFilter<"Review"> | string
    freelancerId?: StringWithAggregatesFilter<"Review"> | string
    rating?: IntNullableWithAggregatesFilter<"Review"> | number | null
    comment?: StringNullableWithAggregatesFilter<"Review"> | string | null
    invoiceId?: StringNullableWithAggregatesFilter<"Review"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Review"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Review"> | Date | string
  }

  export type NotificationWhereInput = {
    AND?: NotificationWhereInput | NotificationWhereInput[]
    OR?: NotificationWhereInput[]
    NOT?: NotificationWhereInput | NotificationWhereInput[]
    id?: StringFilter<"Notification"> | string
    userId?: StringFilter<"Notification"> | string
    orderId?: StringNullableFilter<"Notification"> | string | null
    title?: StringNullableFilter<"Notification"> | string | null
    message?: StringNullableFilter<"Notification"> | string | null
    read?: BoolFilter<"Notification"> | boolean
    type?: EnumNotificationTypeFilter<"Notification"> | $Enums.NotificationType
    createdAt?: DateTimeFilter<"Notification"> | Date | string
    updatedAt?: DateTimeFilter<"Notification"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
    order?: XOR<OrderNullableRelationFilter, OrderWhereInput> | null
  }

  export type NotificationOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    orderId?: SortOrderInput | SortOrder
    title?: SortOrderInput | SortOrder
    message?: SortOrderInput | SortOrder
    read?: SortOrder
    type?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
    order?: OrderOrderByWithRelationInput
  }

  export type NotificationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: NotificationWhereInput | NotificationWhereInput[]
    OR?: NotificationWhereInput[]
    NOT?: NotificationWhereInput | NotificationWhereInput[]
    userId?: StringFilter<"Notification"> | string
    orderId?: StringNullableFilter<"Notification"> | string | null
    title?: StringNullableFilter<"Notification"> | string | null
    message?: StringNullableFilter<"Notification"> | string | null
    read?: BoolFilter<"Notification"> | boolean
    type?: EnumNotificationTypeFilter<"Notification"> | $Enums.NotificationType
    createdAt?: DateTimeFilter<"Notification"> | Date | string
    updatedAt?: DateTimeFilter<"Notification"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
    order?: XOR<OrderNullableRelationFilter, OrderWhereInput> | null
  }, "id">

  export type NotificationOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    orderId?: SortOrderInput | SortOrder
    title?: SortOrderInput | SortOrder
    message?: SortOrderInput | SortOrder
    read?: SortOrder
    type?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: NotificationCountOrderByAggregateInput
    _max?: NotificationMaxOrderByAggregateInput
    _min?: NotificationMinOrderByAggregateInput
  }

  export type NotificationScalarWhereWithAggregatesInput = {
    AND?: NotificationScalarWhereWithAggregatesInput | NotificationScalarWhereWithAggregatesInput[]
    OR?: NotificationScalarWhereWithAggregatesInput[]
    NOT?: NotificationScalarWhereWithAggregatesInput | NotificationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Notification"> | string
    userId?: StringWithAggregatesFilter<"Notification"> | string
    orderId?: StringNullableWithAggregatesFilter<"Notification"> | string | null
    title?: StringNullableWithAggregatesFilter<"Notification"> | string | null
    message?: StringNullableWithAggregatesFilter<"Notification"> | string | null
    read?: BoolWithAggregatesFilter<"Notification"> | boolean
    type?: EnumNotificationTypeWithAggregatesFilter<"Notification"> | $Enums.NotificationType
    createdAt?: DateTimeWithAggregatesFilter<"Notification"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Notification"> | Date | string
  }

  export type UserCreateInput = {
    id?: string
    fname: string
    lname: string
    email: string
    password: string
    role?: $Enums.Role | null
    profilePic?: string | null
    refreshToken?: string | null
    refreshTokenExp?: Date | string | null
    online?: boolean
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    experience?: string | null
    leadershipStyle?: string | null
    teamSize?: string | null
    achievements?: string | null
    professionalDevelopment?: string | null
    gender?: string | null
    country?: string | null
    city?: string | null
    altEmail?: string | null
    phone?: string | null
    altPhone?: string | null
    highestDegree?: string | null
    citationStyles?: string | null
    languages?: string | null
    disciplines?: string | null
    specialization?: string | null
    additionalSoftware?: string | null
    aboutMe?: string | null
    orders?: OrderCreateNestedManyWithoutFreelancerInput
    bids?: BidsCreateNestedManyWithoutFreelancerInput
    assignments?: AssignmentCreateNestedManyWithoutFreelancerInput
    SubmittedJobs?: SubmittedJobsCreateNestedManyWithoutFreelancerInput
    cancelledJobs?: CancelledJobsCreateNestedManyWithoutFreelancerInput
    invoices?: InvoiceCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    fines?: FinesCreateNestedManyWithoutFreelancerInput
    reviews?: ReviewCreateNestedManyWithoutReviewerInput
    reviewed?: ReviewCreateNestedManyWithoutFreelancerInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    freelancerApplications?: FreelancerApplicationCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    fname: string
    lname: string
    email: string
    password: string
    role?: $Enums.Role | null
    profilePic?: string | null
    refreshToken?: string | null
    refreshTokenExp?: Date | string | null
    online?: boolean
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    experience?: string | null
    leadershipStyle?: string | null
    teamSize?: string | null
    achievements?: string | null
    professionalDevelopment?: string | null
    gender?: string | null
    country?: string | null
    city?: string | null
    altEmail?: string | null
    phone?: string | null
    altPhone?: string | null
    highestDegree?: string | null
    citationStyles?: string | null
    languages?: string | null
    disciplines?: string | null
    specialization?: string | null
    additionalSoftware?: string | null
    aboutMe?: string | null
    orders?: OrderUncheckedCreateNestedManyWithoutFreelancerInput
    bids?: BidsUncheckedCreateNestedManyWithoutFreelancerInput
    assignments?: AssignmentUncheckedCreateNestedManyWithoutFreelancerInput
    SubmittedJobs?: SubmittedJobsUncheckedCreateNestedManyWithoutFreelancerInput
    cancelledJobs?: CancelledJobsUncheckedCreateNestedManyWithoutFreelancerInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    fines?: FinesUncheckedCreateNestedManyWithoutFreelancerInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutReviewerInput
    reviewed?: ReviewUncheckedCreateNestedManyWithoutFreelancerInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    freelancerApplications?: FreelancerApplicationUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    fname?: StringFieldUpdateOperationsInput | string
    lname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableEnumRoleFieldUpdateOperationsInput | $Enums.Role | null
    profilePic?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshTokenExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    online?: BoolFieldUpdateOperationsInput | boolean
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    leadershipStyle?: NullableStringFieldUpdateOperationsInput | string | null
    teamSize?: NullableStringFieldUpdateOperationsInput | string | null
    achievements?: NullableStringFieldUpdateOperationsInput | string | null
    professionalDevelopment?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    altEmail?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    altPhone?: NullableStringFieldUpdateOperationsInput | string | null
    highestDegree?: NullableStringFieldUpdateOperationsInput | string | null
    citationStyles?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    disciplines?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    additionalSoftware?: NullableStringFieldUpdateOperationsInput | string | null
    aboutMe?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: OrderUpdateManyWithoutFreelancerNestedInput
    bids?: BidsUpdateManyWithoutFreelancerNestedInput
    assignments?: AssignmentUpdateManyWithoutFreelancerNestedInput
    SubmittedJobs?: SubmittedJobsUpdateManyWithoutFreelancerNestedInput
    cancelledJobs?: CancelledJobsUpdateManyWithoutFreelancerNestedInput
    invoices?: InvoiceUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    fines?: FinesUpdateManyWithoutFreelancerNestedInput
    reviews?: ReviewUpdateManyWithoutReviewerNestedInput
    reviewed?: ReviewUpdateManyWithoutFreelancerNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    freelancerApplications?: FreelancerApplicationUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    fname?: StringFieldUpdateOperationsInput | string
    lname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableEnumRoleFieldUpdateOperationsInput | $Enums.Role | null
    profilePic?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshTokenExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    online?: BoolFieldUpdateOperationsInput | boolean
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    leadershipStyle?: NullableStringFieldUpdateOperationsInput | string | null
    teamSize?: NullableStringFieldUpdateOperationsInput | string | null
    achievements?: NullableStringFieldUpdateOperationsInput | string | null
    professionalDevelopment?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    altEmail?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    altPhone?: NullableStringFieldUpdateOperationsInput | string | null
    highestDegree?: NullableStringFieldUpdateOperationsInput | string | null
    citationStyles?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    disciplines?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    additionalSoftware?: NullableStringFieldUpdateOperationsInput | string | null
    aboutMe?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: OrderUncheckedUpdateManyWithoutFreelancerNestedInput
    bids?: BidsUncheckedUpdateManyWithoutFreelancerNestedInput
    assignments?: AssignmentUncheckedUpdateManyWithoutFreelancerNestedInput
    SubmittedJobs?: SubmittedJobsUncheckedUpdateManyWithoutFreelancerNestedInput
    cancelledJobs?: CancelledJobsUncheckedUpdateManyWithoutFreelancerNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    fines?: FinesUncheckedUpdateManyWithoutFreelancerNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutReviewerNestedInput
    reviewed?: ReviewUncheckedUpdateManyWithoutFreelancerNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    freelancerApplications?: FreelancerApplicationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    fname: string
    lname: string
    email: string
    password: string
    role?: $Enums.Role | null
    profilePic?: string | null
    refreshToken?: string | null
    refreshTokenExp?: Date | string | null
    online?: boolean
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    experience?: string | null
    leadershipStyle?: string | null
    teamSize?: string | null
    achievements?: string | null
    professionalDevelopment?: string | null
    gender?: string | null
    country?: string | null
    city?: string | null
    altEmail?: string | null
    phone?: string | null
    altPhone?: string | null
    highestDegree?: string | null
    citationStyles?: string | null
    languages?: string | null
    disciplines?: string | null
    specialization?: string | null
    additionalSoftware?: string | null
    aboutMe?: string | null
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    fname?: StringFieldUpdateOperationsInput | string
    lname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableEnumRoleFieldUpdateOperationsInput | $Enums.Role | null
    profilePic?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshTokenExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    online?: BoolFieldUpdateOperationsInput | boolean
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    leadershipStyle?: NullableStringFieldUpdateOperationsInput | string | null
    teamSize?: NullableStringFieldUpdateOperationsInput | string | null
    achievements?: NullableStringFieldUpdateOperationsInput | string | null
    professionalDevelopment?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    altEmail?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    altPhone?: NullableStringFieldUpdateOperationsInput | string | null
    highestDegree?: NullableStringFieldUpdateOperationsInput | string | null
    citationStyles?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    disciplines?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    additionalSoftware?: NullableStringFieldUpdateOperationsInput | string | null
    aboutMe?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    fname?: StringFieldUpdateOperationsInput | string
    lname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableEnumRoleFieldUpdateOperationsInput | $Enums.Role | null
    profilePic?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshTokenExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    online?: BoolFieldUpdateOperationsInput | boolean
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    leadershipStyle?: NullableStringFieldUpdateOperationsInput | string | null
    teamSize?: NullableStringFieldUpdateOperationsInput | string | null
    achievements?: NullableStringFieldUpdateOperationsInput | string | null
    professionalDevelopment?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    altEmail?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    altPhone?: NullableStringFieldUpdateOperationsInput | string | null
    highestDegree?: NullableStringFieldUpdateOperationsInput | string | null
    citationStyles?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    disciplines?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    additionalSoftware?: NullableStringFieldUpdateOperationsInput | string | null
    aboutMe?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FreelancerApplicationCreateInput = {
    id?: string
    status?: $Enums.ApplicationStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutFreelancerApplicationsInput
  }

  export type FreelancerApplicationUncheckedCreateInput = {
    id?: string
    userId: string
    status?: $Enums.ApplicationStatus
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FreelancerApplicationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutFreelancerApplicationsNestedInput
  }

  export type FreelancerApplicationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FreelancerApplicationCreateManyInput = {
    id?: string
    userId: string
    status?: $Enums.ApplicationStatus
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FreelancerApplicationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FreelancerApplicationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderCreateInput = {
    id?: string
    orderId: string
    topic: string
    category?: string | null
    service?: string | null
    sources?: string | null
    citation?: string | null
    pages?: Decimal | DecimalJsLike | number | string | null
    cpp?: number
    amount?: number
    deadline: Date | string
    duration: string
    instructions: string
    attachments?: OrderCreateattachmentsInput | string[]
    additionalNotes?: string | null
    status?: $Enums.OrderStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    freelancer?: UserCreateNestedOneWithoutOrdersInput
    bids?: BidsCreateNestedManyWithoutOrderInput
    assignments?: AssignmentCreateNestedManyWithoutOrderInput
    SubmittedJobs?: SubmittedJobsCreateNestedManyWithoutOrderInput
    cancelledJobs?: CancelledJobsCreateNestedManyWithoutOrderInput
    fines?: FinesCreateNestedManyWithoutOrderInput
    reviews?: ReviewCreateNestedManyWithoutOrderInput
    invoice?: InvoiceCreateNestedOneWithoutOrdersInput
    notifications?: NotificationCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateInput = {
    id?: string
    orderId: string
    topic: string
    category?: string | null
    service?: string | null
    sources?: string | null
    citation?: string | null
    pages?: Decimal | DecimalJsLike | number | string | null
    cpp?: number
    amount?: number
    deadline: Date | string
    duration: string
    instructions: string
    attachments?: OrderCreateattachmentsInput | string[]
    additionalNotes?: string | null
    status?: $Enums.OrderStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    freelancerId?: string | null
    invoiceId?: string | null
    bids?: BidsUncheckedCreateNestedManyWithoutOrderInput
    assignments?: AssignmentUncheckedCreateNestedManyWithoutOrderInput
    SubmittedJobs?: SubmittedJobsUncheckedCreateNestedManyWithoutOrderInput
    cancelledJobs?: CancelledJobsUncheckedCreateNestedManyWithoutOrderInput
    fines?: FinesUncheckedCreateNestedManyWithoutOrderInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutOrderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    topic?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    service?: NullableStringFieldUpdateOperationsInput | string | null
    sources?: NullableStringFieldUpdateOperationsInput | string | null
    citation?: NullableStringFieldUpdateOperationsInput | string | null
    pages?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cpp?: IntFieldUpdateOperationsInput | number
    amount?: IntFieldUpdateOperationsInput | number
    deadline?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: StringFieldUpdateOperationsInput | string
    instructions?: StringFieldUpdateOperationsInput | string
    attachments?: OrderUpdateattachmentsInput | string[]
    additionalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    freelancer?: UserUpdateOneWithoutOrdersNestedInput
    bids?: BidsUpdateManyWithoutOrderNestedInput
    assignments?: AssignmentUpdateManyWithoutOrderNestedInput
    SubmittedJobs?: SubmittedJobsUpdateManyWithoutOrderNestedInput
    cancelledJobs?: CancelledJobsUpdateManyWithoutOrderNestedInput
    fines?: FinesUpdateManyWithoutOrderNestedInput
    reviews?: ReviewUpdateManyWithoutOrderNestedInput
    invoice?: InvoiceUpdateOneWithoutOrdersNestedInput
    notifications?: NotificationUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    topic?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    service?: NullableStringFieldUpdateOperationsInput | string | null
    sources?: NullableStringFieldUpdateOperationsInput | string | null
    citation?: NullableStringFieldUpdateOperationsInput | string | null
    pages?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cpp?: IntFieldUpdateOperationsInput | number
    amount?: IntFieldUpdateOperationsInput | number
    deadline?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: StringFieldUpdateOperationsInput | string
    instructions?: StringFieldUpdateOperationsInput | string
    attachments?: OrderUpdateattachmentsInput | string[]
    additionalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    freelancerId?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    bids?: BidsUncheckedUpdateManyWithoutOrderNestedInput
    assignments?: AssignmentUncheckedUpdateManyWithoutOrderNestedInput
    SubmittedJobs?: SubmittedJobsUncheckedUpdateManyWithoutOrderNestedInput
    cancelledJobs?: CancelledJobsUncheckedUpdateManyWithoutOrderNestedInput
    fines?: FinesUncheckedUpdateManyWithoutOrderNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutOrderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderCreateManyInput = {
    id?: string
    orderId: string
    topic: string
    category?: string | null
    service?: string | null
    sources?: string | null
    citation?: string | null
    pages?: Decimal | DecimalJsLike | number | string | null
    cpp?: number
    amount?: number
    deadline: Date | string
    duration: string
    instructions: string
    attachments?: OrderCreateattachmentsInput | string[]
    additionalNotes?: string | null
    status?: $Enums.OrderStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    freelancerId?: string | null
    invoiceId?: string | null
  }

  export type OrderUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    topic?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    service?: NullableStringFieldUpdateOperationsInput | string | null
    sources?: NullableStringFieldUpdateOperationsInput | string | null
    citation?: NullableStringFieldUpdateOperationsInput | string | null
    pages?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cpp?: IntFieldUpdateOperationsInput | number
    amount?: IntFieldUpdateOperationsInput | number
    deadline?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: StringFieldUpdateOperationsInput | string
    instructions?: StringFieldUpdateOperationsInput | string
    attachments?: OrderUpdateattachmentsInput | string[]
    additionalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    topic?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    service?: NullableStringFieldUpdateOperationsInput | string | null
    sources?: NullableStringFieldUpdateOperationsInput | string | null
    citation?: NullableStringFieldUpdateOperationsInput | string | null
    pages?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cpp?: IntFieldUpdateOperationsInput | number
    amount?: IntFieldUpdateOperationsInput | number
    deadline?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: StringFieldUpdateOperationsInput | string
    instructions?: StringFieldUpdateOperationsInput | string
    attachments?: OrderUpdateattachmentsInput | string[]
    additionalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    freelancerId?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BidsCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: $Enums.OrderStatus
    order: OrderCreateNestedOneWithoutBidsInput
    freelancer: UserCreateNestedOneWithoutBidsInput
  }

  export type BidsUncheckedCreateInput = {
    id?: string
    orderId: string
    freelancerId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: $Enums.OrderStatus
  }

  export type BidsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    order?: OrderUpdateOneRequiredWithoutBidsNestedInput
    freelancer?: UserUpdateOneRequiredWithoutBidsNestedInput
  }

  export type BidsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    freelancerId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
  }

  export type BidsCreateManyInput = {
    id?: string
    orderId: string
    freelancerId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: $Enums.OrderStatus
  }

  export type BidsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
  }

  export type BidsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    freelancerId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
  }

  export type AssignmentCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: $Enums.OrderStatus
    order: OrderCreateNestedOneWithoutAssignmentsInput
    freelancer: UserCreateNestedOneWithoutAssignmentsInput
  }

  export type AssignmentUncheckedCreateInput = {
    id?: string
    orderId: string
    freelancerId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: $Enums.OrderStatus
  }

  export type AssignmentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    order?: OrderUpdateOneRequiredWithoutAssignmentsNestedInput
    freelancer?: UserUpdateOneRequiredWithoutAssignmentsNestedInput
  }

  export type AssignmentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    freelancerId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
  }

  export type AssignmentCreateManyInput = {
    id?: string
    orderId: string
    freelancerId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: $Enums.OrderStatus
  }

  export type AssignmentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
  }

  export type AssignmentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    freelancerId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
  }

  export type SubmittedJobsCreateInput = {
    id?: string
    file_Path: string
    file_mimeType: string
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: $Enums.OrderStatus
    order: OrderCreateNestedOneWithoutSubmittedJobsInput
    freelancer: UserCreateNestedOneWithoutSubmittedJobsInput
  }

  export type SubmittedJobsUncheckedCreateInput = {
    id?: string
    orderId: string
    freelancerId: string
    file_Path: string
    file_mimeType: string
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: $Enums.OrderStatus
  }

  export type SubmittedJobsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    file_Path?: StringFieldUpdateOperationsInput | string
    file_mimeType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    order?: OrderUpdateOneRequiredWithoutSubmittedJobsNestedInput
    freelancer?: UserUpdateOneRequiredWithoutSubmittedJobsNestedInput
  }

  export type SubmittedJobsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    freelancerId?: StringFieldUpdateOperationsInput | string
    file_Path?: StringFieldUpdateOperationsInput | string
    file_mimeType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
  }

  export type SubmittedJobsCreateManyInput = {
    id?: string
    orderId: string
    freelancerId: string
    file_Path: string
    file_mimeType: string
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: $Enums.OrderStatus
  }

  export type SubmittedJobsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    file_Path?: StringFieldUpdateOperationsInput | string
    file_mimeType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
  }

  export type SubmittedJobsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    freelancerId?: StringFieldUpdateOperationsInput | string
    file_Path?: StringFieldUpdateOperationsInput | string
    file_mimeType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
  }

  export type CancelledJobsCreateInput = {
    id?: string
    attachments?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: $Enums.OrderStatus
    order: OrderCreateNestedOneWithoutCancelledJobsInput
    freelancer?: UserCreateNestedOneWithoutCancelledJobsInput
  }

  export type CancelledJobsUncheckedCreateInput = {
    id?: string
    orderId: string
    freelancerId: string
    attachments?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: $Enums.OrderStatus
  }

  export type CancelledJobsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    attachments?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    order?: OrderUpdateOneRequiredWithoutCancelledJobsNestedInput
    freelancer?: UserUpdateOneWithoutCancelledJobsNestedInput
  }

  export type CancelledJobsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    freelancerId?: StringFieldUpdateOperationsInput | string
    attachments?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
  }

  export type CancelledJobsCreateManyInput = {
    id?: string
    orderId: string
    freelancerId: string
    attachments?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: $Enums.OrderStatus
  }

  export type CancelledJobsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    attachments?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
  }

  export type CancelledJobsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    freelancerId?: StringFieldUpdateOperationsInput | string
    attachments?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
  }

  export type InvoiceCreateInput = {
    id?: string
    invoiceNumber: string
    createdAt?: Date | string
    updatedAt?: Date | string
    totalAmount?: number
    finalAmount?: number
    isDraft?: boolean
    orders?: OrderCreateNestedManyWithoutInvoiceInput
    payments?: PaymentCreateNestedManyWithoutInvoiceInput
    user: UserCreateNestedOneWithoutInvoicesInput
    fines?: FinesCreateNestedManyWithoutInvoiceInput
    reviews?: ReviewCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceUncheckedCreateInput = {
    id?: string
    invoiceNumber: string
    createdAt?: Date | string
    updatedAt?: Date | string
    totalAmount?: number
    finalAmount?: number
    userId: string
    isDraft?: boolean
    orders?: OrderUncheckedCreateNestedManyWithoutInvoiceInput
    payments?: PaymentUncheckedCreateNestedManyWithoutInvoiceInput
    fines?: FinesUncheckedCreateNestedManyWithoutInvoiceInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalAmount?: IntFieldUpdateOperationsInput | number
    finalAmount?: IntFieldUpdateOperationsInput | number
    isDraft?: BoolFieldUpdateOperationsInput | boolean
    orders?: OrderUpdateManyWithoutInvoiceNestedInput
    payments?: PaymentUpdateManyWithoutInvoiceNestedInput
    user?: UserUpdateOneRequiredWithoutInvoicesNestedInput
    fines?: FinesUpdateManyWithoutInvoiceNestedInput
    reviews?: ReviewUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalAmount?: IntFieldUpdateOperationsInput | number
    finalAmount?: IntFieldUpdateOperationsInput | number
    userId?: StringFieldUpdateOperationsInput | string
    isDraft?: BoolFieldUpdateOperationsInput | boolean
    orders?: OrderUncheckedUpdateManyWithoutInvoiceNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutInvoiceNestedInput
    fines?: FinesUncheckedUpdateManyWithoutInvoiceNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceCreateManyInput = {
    id?: string
    invoiceNumber: string
    createdAt?: Date | string
    updatedAt?: Date | string
    totalAmount?: number
    finalAmount?: number
    userId: string
    isDraft?: boolean
  }

  export type InvoiceUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalAmount?: IntFieldUpdateOperationsInput | number
    finalAmount?: IntFieldUpdateOperationsInput | number
    isDraft?: BoolFieldUpdateOperationsInput | boolean
  }

  export type InvoiceUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalAmount?: IntFieldUpdateOperationsInput | number
    finalAmount?: IntFieldUpdateOperationsInput | number
    userId?: StringFieldUpdateOperationsInput | string
    isDraft?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PaymentCreateInput = {
    id?: string
    paymentRef: string
    amount: number
    modeOfPayment: $Enums.ModeOfPayment
    createdAt?: Date | string
    updatedAt?: Date | string
    invoice: InvoiceCreateNestedOneWithoutPaymentsInput
    user: UserCreateNestedOneWithoutPaymentsInput
  }

  export type PaymentUncheckedCreateInput = {
    id?: string
    paymentRef: string
    amount: number
    modeOfPayment: $Enums.ModeOfPayment
    createdAt?: Date | string
    updatedAt?: Date | string
    invoiceId: string
    userId: string
  }

  export type PaymentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    paymentRef?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    modeOfPayment?: EnumModeOfPaymentFieldUpdateOperationsInput | $Enums.ModeOfPayment
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    invoice?: InvoiceUpdateOneRequiredWithoutPaymentsNestedInput
    user?: UserUpdateOneRequiredWithoutPaymentsNestedInput
  }

  export type PaymentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    paymentRef?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    modeOfPayment?: EnumModeOfPaymentFieldUpdateOperationsInput | $Enums.ModeOfPayment
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type PaymentCreateManyInput = {
    id?: string
    paymentRef: string
    amount: number
    modeOfPayment: $Enums.ModeOfPayment
    createdAt?: Date | string
    updatedAt?: Date | string
    invoiceId: string
    userId: string
  }

  export type PaymentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    paymentRef?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    modeOfPayment?: EnumModeOfPaymentFieldUpdateOperationsInput | $Enums.ModeOfPayment
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    paymentRef?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    modeOfPayment?: EnumModeOfPaymentFieldUpdateOperationsInput | $Enums.ModeOfPayment
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type FinesCreateInput = {
    id?: string
    amount: number
    reason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    order: OrderCreateNestedOneWithoutFinesInput
    freelancer: UserCreateNestedOneWithoutFinesInput
    invoice?: InvoiceCreateNestedOneWithoutFinesInput
  }

  export type FinesUncheckedCreateInput = {
    id?: string
    orderId: string
    freelancerId: string
    amount: number
    reason?: string | null
    invoiceId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FinesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneRequiredWithoutFinesNestedInput
    freelancer?: UserUpdateOneRequiredWithoutFinesNestedInput
    invoice?: InvoiceUpdateOneWithoutFinesNestedInput
  }

  export type FinesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    freelancerId?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FinesCreateManyInput = {
    id?: string
    orderId: string
    freelancerId: string
    amount: number
    reason?: string | null
    invoiceId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FinesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FinesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    freelancerId?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewCreateInput = {
    id?: string
    rating?: number | null
    comment?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    order: OrderCreateNestedOneWithoutReviewsInput
    reviewer: UserCreateNestedOneWithoutReviewsInput
    freelancer: UserCreateNestedOneWithoutReviewedInput
    invoice?: InvoiceCreateNestedOneWithoutReviewsInput
  }

  export type ReviewUncheckedCreateInput = {
    id?: string
    orderId: string
    reviewerId: string
    freelancerId: string
    rating?: number | null
    comment?: string | null
    invoiceId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReviewUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneRequiredWithoutReviewsNestedInput
    reviewer?: UserUpdateOneRequiredWithoutReviewsNestedInput
    freelancer?: UserUpdateOneRequiredWithoutReviewedNestedInput
    invoice?: InvoiceUpdateOneWithoutReviewsNestedInput
  }

  export type ReviewUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    reviewerId?: StringFieldUpdateOperationsInput | string
    freelancerId?: StringFieldUpdateOperationsInput | string
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewCreateManyInput = {
    id?: string
    orderId: string
    reviewerId: string
    freelancerId: string
    rating?: number | null
    comment?: string | null
    invoiceId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReviewUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    reviewerId?: StringFieldUpdateOperationsInput | string
    freelancerId?: StringFieldUpdateOperationsInput | string
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationCreateInput = {
    id?: string
    title?: string | null
    message?: string | null
    read?: boolean
    type: $Enums.NotificationType
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutNotificationsInput
    order?: OrderCreateNestedOneWithoutNotificationsInput
  }

  export type NotificationUncheckedCreateInput = {
    id?: string
    userId: string
    orderId?: string | null
    title?: string | null
    message?: string | null
    read?: boolean
    type: $Enums.NotificationType
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type NotificationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    message?: NullableStringFieldUpdateOperationsInput | string | null
    read?: BoolFieldUpdateOperationsInput | boolean
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutNotificationsNestedInput
    order?: OrderUpdateOneWithoutNotificationsNestedInput
  }

  export type NotificationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    message?: NullableStringFieldUpdateOperationsInput | string | null
    read?: BoolFieldUpdateOperationsInput | boolean
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationCreateManyInput = {
    id?: string
    userId: string
    orderId?: string | null
    title?: string | null
    message?: string | null
    read?: boolean
    type: $Enums.NotificationType
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type NotificationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    message?: NullableStringFieldUpdateOperationsInput | string | null
    read?: BoolFieldUpdateOperationsInput | boolean
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    message?: NullableStringFieldUpdateOperationsInput | string | null
    read?: BoolFieldUpdateOperationsInput | boolean
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type EnumRoleNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel> | null
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel> | null
    not?: NestedEnumRoleNullableFilter<$PrismaModel> | $Enums.Role | null
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type OrderListRelationFilter = {
    every?: OrderWhereInput
    some?: OrderWhereInput
    none?: OrderWhereInput
  }

  export type BidsListRelationFilter = {
    every?: BidsWhereInput
    some?: BidsWhereInput
    none?: BidsWhereInput
  }

  export type AssignmentListRelationFilter = {
    every?: AssignmentWhereInput
    some?: AssignmentWhereInput
    none?: AssignmentWhereInput
  }

  export type SubmittedJobsListRelationFilter = {
    every?: SubmittedJobsWhereInput
    some?: SubmittedJobsWhereInput
    none?: SubmittedJobsWhereInput
  }

  export type CancelledJobsListRelationFilter = {
    every?: CancelledJobsWhereInput
    some?: CancelledJobsWhereInput
    none?: CancelledJobsWhereInput
  }

  export type InvoiceListRelationFilter = {
    every?: InvoiceWhereInput
    some?: InvoiceWhereInput
    none?: InvoiceWhereInput
  }

  export type PaymentListRelationFilter = {
    every?: PaymentWhereInput
    some?: PaymentWhereInput
    none?: PaymentWhereInput
  }

  export type FinesListRelationFilter = {
    every?: FinesWhereInput
    some?: FinesWhereInput
    none?: FinesWhereInput
  }

  export type ReviewListRelationFilter = {
    every?: ReviewWhereInput
    some?: ReviewWhereInput
    none?: ReviewWhereInput
  }

  export type NotificationListRelationFilter = {
    every?: NotificationWhereInput
    some?: NotificationWhereInput
    none?: NotificationWhereInput
  }

  export type FreelancerApplicationListRelationFilter = {
    every?: FreelancerApplicationWhereInput
    some?: FreelancerApplicationWhereInput
    none?: FreelancerApplicationWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type OrderOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BidsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AssignmentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SubmittedJobsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CancelledJobsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type InvoiceOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PaymentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FinesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReviewOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type NotificationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FreelancerApplicationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    fname?: SortOrder
    lname?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role?: SortOrder
    profilePic?: SortOrder
    refreshToken?: SortOrder
    refreshTokenExp?: SortOrder
    online?: SortOrder
    active?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    experience?: SortOrder
    leadershipStyle?: SortOrder
    teamSize?: SortOrder
    achievements?: SortOrder
    professionalDevelopment?: SortOrder
    gender?: SortOrder
    country?: SortOrder
    city?: SortOrder
    altEmail?: SortOrder
    phone?: SortOrder
    altPhone?: SortOrder
    highestDegree?: SortOrder
    citationStyles?: SortOrder
    languages?: SortOrder
    disciplines?: SortOrder
    specialization?: SortOrder
    additionalSoftware?: SortOrder
    aboutMe?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    fname?: SortOrder
    lname?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role?: SortOrder
    profilePic?: SortOrder
    refreshToken?: SortOrder
    refreshTokenExp?: SortOrder
    online?: SortOrder
    active?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    experience?: SortOrder
    leadershipStyle?: SortOrder
    teamSize?: SortOrder
    achievements?: SortOrder
    professionalDevelopment?: SortOrder
    gender?: SortOrder
    country?: SortOrder
    city?: SortOrder
    altEmail?: SortOrder
    phone?: SortOrder
    altPhone?: SortOrder
    highestDegree?: SortOrder
    citationStyles?: SortOrder
    languages?: SortOrder
    disciplines?: SortOrder
    specialization?: SortOrder
    additionalSoftware?: SortOrder
    aboutMe?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    fname?: SortOrder
    lname?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role?: SortOrder
    profilePic?: SortOrder
    refreshToken?: SortOrder
    refreshTokenExp?: SortOrder
    online?: SortOrder
    active?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    experience?: SortOrder
    leadershipStyle?: SortOrder
    teamSize?: SortOrder
    achievements?: SortOrder
    professionalDevelopment?: SortOrder
    gender?: SortOrder
    country?: SortOrder
    city?: SortOrder
    altEmail?: SortOrder
    phone?: SortOrder
    altPhone?: SortOrder
    highestDegree?: SortOrder
    citationStyles?: SortOrder
    languages?: SortOrder
    disciplines?: SortOrder
    specialization?: SortOrder
    additionalSoftware?: SortOrder
    aboutMe?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type EnumRoleNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel> | null
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel> | null
    not?: NestedEnumRoleNullableWithAggregatesFilter<$PrismaModel> | $Enums.Role | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumRoleNullableFilter<$PrismaModel>
    _max?: NestedEnumRoleNullableFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type EnumApplicationStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ApplicationStatus | EnumApplicationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ApplicationStatus[] | ListEnumApplicationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ApplicationStatus[] | ListEnumApplicationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumApplicationStatusFilter<$PrismaModel> | $Enums.ApplicationStatus
  }

  export type UserRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type FreelancerApplicationCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FreelancerApplicationMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FreelancerApplicationMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumApplicationStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ApplicationStatus | EnumApplicationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ApplicationStatus[] | ListEnumApplicationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ApplicationStatus[] | ListEnumApplicationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumApplicationStatusWithAggregatesFilter<$PrismaModel> | $Enums.ApplicationStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumApplicationStatusFilter<$PrismaModel>
    _max?: NestedEnumApplicationStatusFilter<$PrismaModel>
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringNullableListFilter<$PrismaModel = never> = {
    equals?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    has?: string | StringFieldRefInput<$PrismaModel> | null
    hasEvery?: string[] | ListStringFieldRefInput<$PrismaModel>
    hasSome?: string[] | ListStringFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type EnumOrderStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderStatusFilter<$PrismaModel> | $Enums.OrderStatus
  }

  export type UserNullableRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type InvoiceNullableRelationFilter = {
    is?: InvoiceWhereInput | null
    isNot?: InvoiceWhereInput | null
  }

  export type OrderCountOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    topic?: SortOrder
    category?: SortOrder
    service?: SortOrder
    sources?: SortOrder
    citation?: SortOrder
    pages?: SortOrder
    cpp?: SortOrder
    amount?: SortOrder
    deadline?: SortOrder
    duration?: SortOrder
    instructions?: SortOrder
    attachments?: SortOrder
    additionalNotes?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    freelancerId?: SortOrder
    invoiceId?: SortOrder
  }

  export type OrderAvgOrderByAggregateInput = {
    pages?: SortOrder
    cpp?: SortOrder
    amount?: SortOrder
  }

  export type OrderMaxOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    topic?: SortOrder
    category?: SortOrder
    service?: SortOrder
    sources?: SortOrder
    citation?: SortOrder
    pages?: SortOrder
    cpp?: SortOrder
    amount?: SortOrder
    deadline?: SortOrder
    duration?: SortOrder
    instructions?: SortOrder
    additionalNotes?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    freelancerId?: SortOrder
    invoiceId?: SortOrder
  }

  export type OrderMinOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    topic?: SortOrder
    category?: SortOrder
    service?: SortOrder
    sources?: SortOrder
    citation?: SortOrder
    pages?: SortOrder
    cpp?: SortOrder
    amount?: SortOrder
    deadline?: SortOrder
    duration?: SortOrder
    instructions?: SortOrder
    additionalNotes?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    freelancerId?: SortOrder
    invoiceId?: SortOrder
  }

  export type OrderSumOrderByAggregateInput = {
    pages?: SortOrder
    cpp?: SortOrder
    amount?: SortOrder
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type EnumOrderStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderStatusWithAggregatesFilter<$PrismaModel> | $Enums.OrderStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderStatusFilter<$PrismaModel>
    _max?: NestedEnumOrderStatusFilter<$PrismaModel>
  }

  export type OrderRelationFilter = {
    is?: OrderWhereInput
    isNot?: OrderWhereInput
  }

  export type BidsCountOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    freelancerId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    status?: SortOrder
  }

  export type BidsMaxOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    freelancerId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    status?: SortOrder
  }

  export type BidsMinOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    freelancerId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    status?: SortOrder
  }

  export type AssignmentCountOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    freelancerId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    status?: SortOrder
  }

  export type AssignmentMaxOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    freelancerId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    status?: SortOrder
  }

  export type AssignmentMinOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    freelancerId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    status?: SortOrder
  }

  export type SubmittedJobsCountOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    freelancerId?: SortOrder
    file_Path?: SortOrder
    file_mimeType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    status?: SortOrder
  }

  export type SubmittedJobsMaxOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    freelancerId?: SortOrder
    file_Path?: SortOrder
    file_mimeType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    status?: SortOrder
  }

  export type SubmittedJobsMinOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    freelancerId?: SortOrder
    file_Path?: SortOrder
    file_mimeType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    status?: SortOrder
  }

  export type CancelledJobsCountOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    freelancerId?: SortOrder
    attachments?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    status?: SortOrder
  }

  export type CancelledJobsMaxOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    freelancerId?: SortOrder
    attachments?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    status?: SortOrder
  }

  export type CancelledJobsMinOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    freelancerId?: SortOrder
    attachments?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    status?: SortOrder
  }

  export type InvoiceCountOrderByAggregateInput = {
    id?: SortOrder
    invoiceNumber?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    totalAmount?: SortOrder
    finalAmount?: SortOrder
    userId?: SortOrder
    isDraft?: SortOrder
  }

  export type InvoiceAvgOrderByAggregateInput = {
    totalAmount?: SortOrder
    finalAmount?: SortOrder
  }

  export type InvoiceMaxOrderByAggregateInput = {
    id?: SortOrder
    invoiceNumber?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    totalAmount?: SortOrder
    finalAmount?: SortOrder
    userId?: SortOrder
    isDraft?: SortOrder
  }

  export type InvoiceMinOrderByAggregateInput = {
    id?: SortOrder
    invoiceNumber?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    totalAmount?: SortOrder
    finalAmount?: SortOrder
    userId?: SortOrder
    isDraft?: SortOrder
  }

  export type InvoiceSumOrderByAggregateInput = {
    totalAmount?: SortOrder
    finalAmount?: SortOrder
  }

  export type EnumModeOfPaymentFilter<$PrismaModel = never> = {
    equals?: $Enums.ModeOfPayment | EnumModeOfPaymentFieldRefInput<$PrismaModel>
    in?: $Enums.ModeOfPayment[] | ListEnumModeOfPaymentFieldRefInput<$PrismaModel>
    notIn?: $Enums.ModeOfPayment[] | ListEnumModeOfPaymentFieldRefInput<$PrismaModel>
    not?: NestedEnumModeOfPaymentFilter<$PrismaModel> | $Enums.ModeOfPayment
  }

  export type InvoiceRelationFilter = {
    is?: InvoiceWhereInput
    isNot?: InvoiceWhereInput
  }

  export type PaymentCountOrderByAggregateInput = {
    id?: SortOrder
    paymentRef?: SortOrder
    amount?: SortOrder
    modeOfPayment?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    invoiceId?: SortOrder
    userId?: SortOrder
  }

  export type PaymentAvgOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type PaymentMaxOrderByAggregateInput = {
    id?: SortOrder
    paymentRef?: SortOrder
    amount?: SortOrder
    modeOfPayment?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    invoiceId?: SortOrder
    userId?: SortOrder
  }

  export type PaymentMinOrderByAggregateInput = {
    id?: SortOrder
    paymentRef?: SortOrder
    amount?: SortOrder
    modeOfPayment?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    invoiceId?: SortOrder
    userId?: SortOrder
  }

  export type PaymentSumOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type EnumModeOfPaymentWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ModeOfPayment | EnumModeOfPaymentFieldRefInput<$PrismaModel>
    in?: $Enums.ModeOfPayment[] | ListEnumModeOfPaymentFieldRefInput<$PrismaModel>
    notIn?: $Enums.ModeOfPayment[] | ListEnumModeOfPaymentFieldRefInput<$PrismaModel>
    not?: NestedEnumModeOfPaymentWithAggregatesFilter<$PrismaModel> | $Enums.ModeOfPayment
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumModeOfPaymentFilter<$PrismaModel>
    _max?: NestedEnumModeOfPaymentFilter<$PrismaModel>
  }

  export type FinesCountOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    freelancerId?: SortOrder
    amount?: SortOrder
    reason?: SortOrder
    invoiceId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FinesAvgOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type FinesMaxOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    freelancerId?: SortOrder
    amount?: SortOrder
    reason?: SortOrder
    invoiceId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FinesMinOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    freelancerId?: SortOrder
    amount?: SortOrder
    reason?: SortOrder
    invoiceId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FinesSumOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type ReviewCountOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    reviewerId?: SortOrder
    freelancerId?: SortOrder
    rating?: SortOrder
    comment?: SortOrder
    invoiceId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReviewAvgOrderByAggregateInput = {
    rating?: SortOrder
  }

  export type ReviewMaxOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    reviewerId?: SortOrder
    freelancerId?: SortOrder
    rating?: SortOrder
    comment?: SortOrder
    invoiceId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReviewMinOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    reviewerId?: SortOrder
    freelancerId?: SortOrder
    rating?: SortOrder
    comment?: SortOrder
    invoiceId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReviewSumOrderByAggregateInput = {
    rating?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type EnumNotificationTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.NotificationType | EnumNotificationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumNotificationTypeFilter<$PrismaModel> | $Enums.NotificationType
  }

  export type OrderNullableRelationFilter = {
    is?: OrderWhereInput | null
    isNot?: OrderWhereInput | null
  }

  export type NotificationCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    orderId?: SortOrder
    title?: SortOrder
    message?: SortOrder
    read?: SortOrder
    type?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type NotificationMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    orderId?: SortOrder
    title?: SortOrder
    message?: SortOrder
    read?: SortOrder
    type?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type NotificationMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    orderId?: SortOrder
    title?: SortOrder
    message?: SortOrder
    read?: SortOrder
    type?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumNotificationTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.NotificationType | EnumNotificationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumNotificationTypeWithAggregatesFilter<$PrismaModel> | $Enums.NotificationType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumNotificationTypeFilter<$PrismaModel>
    _max?: NestedEnumNotificationTypeFilter<$PrismaModel>
  }

  export type OrderCreateNestedManyWithoutFreelancerInput = {
    create?: XOR<OrderCreateWithoutFreelancerInput, OrderUncheckedCreateWithoutFreelancerInput> | OrderCreateWithoutFreelancerInput[] | OrderUncheckedCreateWithoutFreelancerInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutFreelancerInput | OrderCreateOrConnectWithoutFreelancerInput[]
    createMany?: OrderCreateManyFreelancerInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type BidsCreateNestedManyWithoutFreelancerInput = {
    create?: XOR<BidsCreateWithoutFreelancerInput, BidsUncheckedCreateWithoutFreelancerInput> | BidsCreateWithoutFreelancerInput[] | BidsUncheckedCreateWithoutFreelancerInput[]
    connectOrCreate?: BidsCreateOrConnectWithoutFreelancerInput | BidsCreateOrConnectWithoutFreelancerInput[]
    createMany?: BidsCreateManyFreelancerInputEnvelope
    connect?: BidsWhereUniqueInput | BidsWhereUniqueInput[]
  }

  export type AssignmentCreateNestedManyWithoutFreelancerInput = {
    create?: XOR<AssignmentCreateWithoutFreelancerInput, AssignmentUncheckedCreateWithoutFreelancerInput> | AssignmentCreateWithoutFreelancerInput[] | AssignmentUncheckedCreateWithoutFreelancerInput[]
    connectOrCreate?: AssignmentCreateOrConnectWithoutFreelancerInput | AssignmentCreateOrConnectWithoutFreelancerInput[]
    createMany?: AssignmentCreateManyFreelancerInputEnvelope
    connect?: AssignmentWhereUniqueInput | AssignmentWhereUniqueInput[]
  }

  export type SubmittedJobsCreateNestedManyWithoutFreelancerInput = {
    create?: XOR<SubmittedJobsCreateWithoutFreelancerInput, SubmittedJobsUncheckedCreateWithoutFreelancerInput> | SubmittedJobsCreateWithoutFreelancerInput[] | SubmittedJobsUncheckedCreateWithoutFreelancerInput[]
    connectOrCreate?: SubmittedJobsCreateOrConnectWithoutFreelancerInput | SubmittedJobsCreateOrConnectWithoutFreelancerInput[]
    createMany?: SubmittedJobsCreateManyFreelancerInputEnvelope
    connect?: SubmittedJobsWhereUniqueInput | SubmittedJobsWhereUniqueInput[]
  }

  export type CancelledJobsCreateNestedManyWithoutFreelancerInput = {
    create?: XOR<CancelledJobsCreateWithoutFreelancerInput, CancelledJobsUncheckedCreateWithoutFreelancerInput> | CancelledJobsCreateWithoutFreelancerInput[] | CancelledJobsUncheckedCreateWithoutFreelancerInput[]
    connectOrCreate?: CancelledJobsCreateOrConnectWithoutFreelancerInput | CancelledJobsCreateOrConnectWithoutFreelancerInput[]
    createMany?: CancelledJobsCreateManyFreelancerInputEnvelope
    connect?: CancelledJobsWhereUniqueInput | CancelledJobsWhereUniqueInput[]
  }

  export type InvoiceCreateNestedManyWithoutUserInput = {
    create?: XOR<InvoiceCreateWithoutUserInput, InvoiceUncheckedCreateWithoutUserInput> | InvoiceCreateWithoutUserInput[] | InvoiceUncheckedCreateWithoutUserInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutUserInput | InvoiceCreateOrConnectWithoutUserInput[]
    createMany?: InvoiceCreateManyUserInputEnvelope
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
  }

  export type PaymentCreateNestedManyWithoutUserInput = {
    create?: XOR<PaymentCreateWithoutUserInput, PaymentUncheckedCreateWithoutUserInput> | PaymentCreateWithoutUserInput[] | PaymentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutUserInput | PaymentCreateOrConnectWithoutUserInput[]
    createMany?: PaymentCreateManyUserInputEnvelope
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
  }

  export type FinesCreateNestedManyWithoutFreelancerInput = {
    create?: XOR<FinesCreateWithoutFreelancerInput, FinesUncheckedCreateWithoutFreelancerInput> | FinesCreateWithoutFreelancerInput[] | FinesUncheckedCreateWithoutFreelancerInput[]
    connectOrCreate?: FinesCreateOrConnectWithoutFreelancerInput | FinesCreateOrConnectWithoutFreelancerInput[]
    createMany?: FinesCreateManyFreelancerInputEnvelope
    connect?: FinesWhereUniqueInput | FinesWhereUniqueInput[]
  }

  export type ReviewCreateNestedManyWithoutReviewerInput = {
    create?: XOR<ReviewCreateWithoutReviewerInput, ReviewUncheckedCreateWithoutReviewerInput> | ReviewCreateWithoutReviewerInput[] | ReviewUncheckedCreateWithoutReviewerInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutReviewerInput | ReviewCreateOrConnectWithoutReviewerInput[]
    createMany?: ReviewCreateManyReviewerInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type ReviewCreateNestedManyWithoutFreelancerInput = {
    create?: XOR<ReviewCreateWithoutFreelancerInput, ReviewUncheckedCreateWithoutFreelancerInput> | ReviewCreateWithoutFreelancerInput[] | ReviewUncheckedCreateWithoutFreelancerInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutFreelancerInput | ReviewCreateOrConnectWithoutFreelancerInput[]
    createMany?: ReviewCreateManyFreelancerInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type NotificationCreateNestedManyWithoutUserInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type FreelancerApplicationCreateNestedManyWithoutUserInput = {
    create?: XOR<FreelancerApplicationCreateWithoutUserInput, FreelancerApplicationUncheckedCreateWithoutUserInput> | FreelancerApplicationCreateWithoutUserInput[] | FreelancerApplicationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FreelancerApplicationCreateOrConnectWithoutUserInput | FreelancerApplicationCreateOrConnectWithoutUserInput[]
    createMany?: FreelancerApplicationCreateManyUserInputEnvelope
    connect?: FreelancerApplicationWhereUniqueInput | FreelancerApplicationWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutFreelancerInput = {
    create?: XOR<OrderCreateWithoutFreelancerInput, OrderUncheckedCreateWithoutFreelancerInput> | OrderCreateWithoutFreelancerInput[] | OrderUncheckedCreateWithoutFreelancerInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutFreelancerInput | OrderCreateOrConnectWithoutFreelancerInput[]
    createMany?: OrderCreateManyFreelancerInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type BidsUncheckedCreateNestedManyWithoutFreelancerInput = {
    create?: XOR<BidsCreateWithoutFreelancerInput, BidsUncheckedCreateWithoutFreelancerInput> | BidsCreateWithoutFreelancerInput[] | BidsUncheckedCreateWithoutFreelancerInput[]
    connectOrCreate?: BidsCreateOrConnectWithoutFreelancerInput | BidsCreateOrConnectWithoutFreelancerInput[]
    createMany?: BidsCreateManyFreelancerInputEnvelope
    connect?: BidsWhereUniqueInput | BidsWhereUniqueInput[]
  }

  export type AssignmentUncheckedCreateNestedManyWithoutFreelancerInput = {
    create?: XOR<AssignmentCreateWithoutFreelancerInput, AssignmentUncheckedCreateWithoutFreelancerInput> | AssignmentCreateWithoutFreelancerInput[] | AssignmentUncheckedCreateWithoutFreelancerInput[]
    connectOrCreate?: AssignmentCreateOrConnectWithoutFreelancerInput | AssignmentCreateOrConnectWithoutFreelancerInput[]
    createMany?: AssignmentCreateManyFreelancerInputEnvelope
    connect?: AssignmentWhereUniqueInput | AssignmentWhereUniqueInput[]
  }

  export type SubmittedJobsUncheckedCreateNestedManyWithoutFreelancerInput = {
    create?: XOR<SubmittedJobsCreateWithoutFreelancerInput, SubmittedJobsUncheckedCreateWithoutFreelancerInput> | SubmittedJobsCreateWithoutFreelancerInput[] | SubmittedJobsUncheckedCreateWithoutFreelancerInput[]
    connectOrCreate?: SubmittedJobsCreateOrConnectWithoutFreelancerInput | SubmittedJobsCreateOrConnectWithoutFreelancerInput[]
    createMany?: SubmittedJobsCreateManyFreelancerInputEnvelope
    connect?: SubmittedJobsWhereUniqueInput | SubmittedJobsWhereUniqueInput[]
  }

  export type CancelledJobsUncheckedCreateNestedManyWithoutFreelancerInput = {
    create?: XOR<CancelledJobsCreateWithoutFreelancerInput, CancelledJobsUncheckedCreateWithoutFreelancerInput> | CancelledJobsCreateWithoutFreelancerInput[] | CancelledJobsUncheckedCreateWithoutFreelancerInput[]
    connectOrCreate?: CancelledJobsCreateOrConnectWithoutFreelancerInput | CancelledJobsCreateOrConnectWithoutFreelancerInput[]
    createMany?: CancelledJobsCreateManyFreelancerInputEnvelope
    connect?: CancelledJobsWhereUniqueInput | CancelledJobsWhereUniqueInput[]
  }

  export type InvoiceUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<InvoiceCreateWithoutUserInput, InvoiceUncheckedCreateWithoutUserInput> | InvoiceCreateWithoutUserInput[] | InvoiceUncheckedCreateWithoutUserInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutUserInput | InvoiceCreateOrConnectWithoutUserInput[]
    createMany?: InvoiceCreateManyUserInputEnvelope
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
  }

  export type PaymentUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<PaymentCreateWithoutUserInput, PaymentUncheckedCreateWithoutUserInput> | PaymentCreateWithoutUserInput[] | PaymentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutUserInput | PaymentCreateOrConnectWithoutUserInput[]
    createMany?: PaymentCreateManyUserInputEnvelope
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
  }

  export type FinesUncheckedCreateNestedManyWithoutFreelancerInput = {
    create?: XOR<FinesCreateWithoutFreelancerInput, FinesUncheckedCreateWithoutFreelancerInput> | FinesCreateWithoutFreelancerInput[] | FinesUncheckedCreateWithoutFreelancerInput[]
    connectOrCreate?: FinesCreateOrConnectWithoutFreelancerInput | FinesCreateOrConnectWithoutFreelancerInput[]
    createMany?: FinesCreateManyFreelancerInputEnvelope
    connect?: FinesWhereUniqueInput | FinesWhereUniqueInput[]
  }

  export type ReviewUncheckedCreateNestedManyWithoutReviewerInput = {
    create?: XOR<ReviewCreateWithoutReviewerInput, ReviewUncheckedCreateWithoutReviewerInput> | ReviewCreateWithoutReviewerInput[] | ReviewUncheckedCreateWithoutReviewerInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutReviewerInput | ReviewCreateOrConnectWithoutReviewerInput[]
    createMany?: ReviewCreateManyReviewerInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type ReviewUncheckedCreateNestedManyWithoutFreelancerInput = {
    create?: XOR<ReviewCreateWithoutFreelancerInput, ReviewUncheckedCreateWithoutFreelancerInput> | ReviewCreateWithoutFreelancerInput[] | ReviewUncheckedCreateWithoutFreelancerInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutFreelancerInput | ReviewCreateOrConnectWithoutFreelancerInput[]
    createMany?: ReviewCreateManyFreelancerInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type NotificationUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type FreelancerApplicationUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<FreelancerApplicationCreateWithoutUserInput, FreelancerApplicationUncheckedCreateWithoutUserInput> | FreelancerApplicationCreateWithoutUserInput[] | FreelancerApplicationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FreelancerApplicationCreateOrConnectWithoutUserInput | FreelancerApplicationCreateOrConnectWithoutUserInput[]
    createMany?: FreelancerApplicationCreateManyUserInputEnvelope
    connect?: FreelancerApplicationWhereUniqueInput | FreelancerApplicationWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableEnumRoleFieldUpdateOperationsInput = {
    set?: $Enums.Role | null
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type OrderUpdateManyWithoutFreelancerNestedInput = {
    create?: XOR<OrderCreateWithoutFreelancerInput, OrderUncheckedCreateWithoutFreelancerInput> | OrderCreateWithoutFreelancerInput[] | OrderUncheckedCreateWithoutFreelancerInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutFreelancerInput | OrderCreateOrConnectWithoutFreelancerInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutFreelancerInput | OrderUpsertWithWhereUniqueWithoutFreelancerInput[]
    createMany?: OrderCreateManyFreelancerInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutFreelancerInput | OrderUpdateWithWhereUniqueWithoutFreelancerInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutFreelancerInput | OrderUpdateManyWithWhereWithoutFreelancerInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type BidsUpdateManyWithoutFreelancerNestedInput = {
    create?: XOR<BidsCreateWithoutFreelancerInput, BidsUncheckedCreateWithoutFreelancerInput> | BidsCreateWithoutFreelancerInput[] | BidsUncheckedCreateWithoutFreelancerInput[]
    connectOrCreate?: BidsCreateOrConnectWithoutFreelancerInput | BidsCreateOrConnectWithoutFreelancerInput[]
    upsert?: BidsUpsertWithWhereUniqueWithoutFreelancerInput | BidsUpsertWithWhereUniqueWithoutFreelancerInput[]
    createMany?: BidsCreateManyFreelancerInputEnvelope
    set?: BidsWhereUniqueInput | BidsWhereUniqueInput[]
    disconnect?: BidsWhereUniqueInput | BidsWhereUniqueInput[]
    delete?: BidsWhereUniqueInput | BidsWhereUniqueInput[]
    connect?: BidsWhereUniqueInput | BidsWhereUniqueInput[]
    update?: BidsUpdateWithWhereUniqueWithoutFreelancerInput | BidsUpdateWithWhereUniqueWithoutFreelancerInput[]
    updateMany?: BidsUpdateManyWithWhereWithoutFreelancerInput | BidsUpdateManyWithWhereWithoutFreelancerInput[]
    deleteMany?: BidsScalarWhereInput | BidsScalarWhereInput[]
  }

  export type AssignmentUpdateManyWithoutFreelancerNestedInput = {
    create?: XOR<AssignmentCreateWithoutFreelancerInput, AssignmentUncheckedCreateWithoutFreelancerInput> | AssignmentCreateWithoutFreelancerInput[] | AssignmentUncheckedCreateWithoutFreelancerInput[]
    connectOrCreate?: AssignmentCreateOrConnectWithoutFreelancerInput | AssignmentCreateOrConnectWithoutFreelancerInput[]
    upsert?: AssignmentUpsertWithWhereUniqueWithoutFreelancerInput | AssignmentUpsertWithWhereUniqueWithoutFreelancerInput[]
    createMany?: AssignmentCreateManyFreelancerInputEnvelope
    set?: AssignmentWhereUniqueInput | AssignmentWhereUniqueInput[]
    disconnect?: AssignmentWhereUniqueInput | AssignmentWhereUniqueInput[]
    delete?: AssignmentWhereUniqueInput | AssignmentWhereUniqueInput[]
    connect?: AssignmentWhereUniqueInput | AssignmentWhereUniqueInput[]
    update?: AssignmentUpdateWithWhereUniqueWithoutFreelancerInput | AssignmentUpdateWithWhereUniqueWithoutFreelancerInput[]
    updateMany?: AssignmentUpdateManyWithWhereWithoutFreelancerInput | AssignmentUpdateManyWithWhereWithoutFreelancerInput[]
    deleteMany?: AssignmentScalarWhereInput | AssignmentScalarWhereInput[]
  }

  export type SubmittedJobsUpdateManyWithoutFreelancerNestedInput = {
    create?: XOR<SubmittedJobsCreateWithoutFreelancerInput, SubmittedJobsUncheckedCreateWithoutFreelancerInput> | SubmittedJobsCreateWithoutFreelancerInput[] | SubmittedJobsUncheckedCreateWithoutFreelancerInput[]
    connectOrCreate?: SubmittedJobsCreateOrConnectWithoutFreelancerInput | SubmittedJobsCreateOrConnectWithoutFreelancerInput[]
    upsert?: SubmittedJobsUpsertWithWhereUniqueWithoutFreelancerInput | SubmittedJobsUpsertWithWhereUniqueWithoutFreelancerInput[]
    createMany?: SubmittedJobsCreateManyFreelancerInputEnvelope
    set?: SubmittedJobsWhereUniqueInput | SubmittedJobsWhereUniqueInput[]
    disconnect?: SubmittedJobsWhereUniqueInput | SubmittedJobsWhereUniqueInput[]
    delete?: SubmittedJobsWhereUniqueInput | SubmittedJobsWhereUniqueInput[]
    connect?: SubmittedJobsWhereUniqueInput | SubmittedJobsWhereUniqueInput[]
    update?: SubmittedJobsUpdateWithWhereUniqueWithoutFreelancerInput | SubmittedJobsUpdateWithWhereUniqueWithoutFreelancerInput[]
    updateMany?: SubmittedJobsUpdateManyWithWhereWithoutFreelancerInput | SubmittedJobsUpdateManyWithWhereWithoutFreelancerInput[]
    deleteMany?: SubmittedJobsScalarWhereInput | SubmittedJobsScalarWhereInput[]
  }

  export type CancelledJobsUpdateManyWithoutFreelancerNestedInput = {
    create?: XOR<CancelledJobsCreateWithoutFreelancerInput, CancelledJobsUncheckedCreateWithoutFreelancerInput> | CancelledJobsCreateWithoutFreelancerInput[] | CancelledJobsUncheckedCreateWithoutFreelancerInput[]
    connectOrCreate?: CancelledJobsCreateOrConnectWithoutFreelancerInput | CancelledJobsCreateOrConnectWithoutFreelancerInput[]
    upsert?: CancelledJobsUpsertWithWhereUniqueWithoutFreelancerInput | CancelledJobsUpsertWithWhereUniqueWithoutFreelancerInput[]
    createMany?: CancelledJobsCreateManyFreelancerInputEnvelope
    set?: CancelledJobsWhereUniqueInput | CancelledJobsWhereUniqueInput[]
    disconnect?: CancelledJobsWhereUniqueInput | CancelledJobsWhereUniqueInput[]
    delete?: CancelledJobsWhereUniqueInput | CancelledJobsWhereUniqueInput[]
    connect?: CancelledJobsWhereUniqueInput | CancelledJobsWhereUniqueInput[]
    update?: CancelledJobsUpdateWithWhereUniqueWithoutFreelancerInput | CancelledJobsUpdateWithWhereUniqueWithoutFreelancerInput[]
    updateMany?: CancelledJobsUpdateManyWithWhereWithoutFreelancerInput | CancelledJobsUpdateManyWithWhereWithoutFreelancerInput[]
    deleteMany?: CancelledJobsScalarWhereInput | CancelledJobsScalarWhereInput[]
  }

  export type InvoiceUpdateManyWithoutUserNestedInput = {
    create?: XOR<InvoiceCreateWithoutUserInput, InvoiceUncheckedCreateWithoutUserInput> | InvoiceCreateWithoutUserInput[] | InvoiceUncheckedCreateWithoutUserInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutUserInput | InvoiceCreateOrConnectWithoutUserInput[]
    upsert?: InvoiceUpsertWithWhereUniqueWithoutUserInput | InvoiceUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: InvoiceCreateManyUserInputEnvelope
    set?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    disconnect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    delete?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    update?: InvoiceUpdateWithWhereUniqueWithoutUserInput | InvoiceUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: InvoiceUpdateManyWithWhereWithoutUserInput | InvoiceUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: InvoiceScalarWhereInput | InvoiceScalarWhereInput[]
  }

  export type PaymentUpdateManyWithoutUserNestedInput = {
    create?: XOR<PaymentCreateWithoutUserInput, PaymentUncheckedCreateWithoutUserInput> | PaymentCreateWithoutUserInput[] | PaymentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutUserInput | PaymentCreateOrConnectWithoutUserInput[]
    upsert?: PaymentUpsertWithWhereUniqueWithoutUserInput | PaymentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: PaymentCreateManyUserInputEnvelope
    set?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    disconnect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    delete?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    update?: PaymentUpdateWithWhereUniqueWithoutUserInput | PaymentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: PaymentUpdateManyWithWhereWithoutUserInput | PaymentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
  }

  export type FinesUpdateManyWithoutFreelancerNestedInput = {
    create?: XOR<FinesCreateWithoutFreelancerInput, FinesUncheckedCreateWithoutFreelancerInput> | FinesCreateWithoutFreelancerInput[] | FinesUncheckedCreateWithoutFreelancerInput[]
    connectOrCreate?: FinesCreateOrConnectWithoutFreelancerInput | FinesCreateOrConnectWithoutFreelancerInput[]
    upsert?: FinesUpsertWithWhereUniqueWithoutFreelancerInput | FinesUpsertWithWhereUniqueWithoutFreelancerInput[]
    createMany?: FinesCreateManyFreelancerInputEnvelope
    set?: FinesWhereUniqueInput | FinesWhereUniqueInput[]
    disconnect?: FinesWhereUniqueInput | FinesWhereUniqueInput[]
    delete?: FinesWhereUniqueInput | FinesWhereUniqueInput[]
    connect?: FinesWhereUniqueInput | FinesWhereUniqueInput[]
    update?: FinesUpdateWithWhereUniqueWithoutFreelancerInput | FinesUpdateWithWhereUniqueWithoutFreelancerInput[]
    updateMany?: FinesUpdateManyWithWhereWithoutFreelancerInput | FinesUpdateManyWithWhereWithoutFreelancerInput[]
    deleteMany?: FinesScalarWhereInput | FinesScalarWhereInput[]
  }

  export type ReviewUpdateManyWithoutReviewerNestedInput = {
    create?: XOR<ReviewCreateWithoutReviewerInput, ReviewUncheckedCreateWithoutReviewerInput> | ReviewCreateWithoutReviewerInput[] | ReviewUncheckedCreateWithoutReviewerInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutReviewerInput | ReviewCreateOrConnectWithoutReviewerInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutReviewerInput | ReviewUpsertWithWhereUniqueWithoutReviewerInput[]
    createMany?: ReviewCreateManyReviewerInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutReviewerInput | ReviewUpdateWithWhereUniqueWithoutReviewerInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutReviewerInput | ReviewUpdateManyWithWhereWithoutReviewerInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type ReviewUpdateManyWithoutFreelancerNestedInput = {
    create?: XOR<ReviewCreateWithoutFreelancerInput, ReviewUncheckedCreateWithoutFreelancerInput> | ReviewCreateWithoutFreelancerInput[] | ReviewUncheckedCreateWithoutFreelancerInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutFreelancerInput | ReviewCreateOrConnectWithoutFreelancerInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutFreelancerInput | ReviewUpsertWithWhereUniqueWithoutFreelancerInput[]
    createMany?: ReviewCreateManyFreelancerInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutFreelancerInput | ReviewUpdateWithWhereUniqueWithoutFreelancerInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutFreelancerInput | ReviewUpdateManyWithWhereWithoutFreelancerInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type NotificationUpdateManyWithoutUserNestedInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutUserInput | NotificationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutUserInput | NotificationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutUserInput | NotificationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type FreelancerApplicationUpdateManyWithoutUserNestedInput = {
    create?: XOR<FreelancerApplicationCreateWithoutUserInput, FreelancerApplicationUncheckedCreateWithoutUserInput> | FreelancerApplicationCreateWithoutUserInput[] | FreelancerApplicationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FreelancerApplicationCreateOrConnectWithoutUserInput | FreelancerApplicationCreateOrConnectWithoutUserInput[]
    upsert?: FreelancerApplicationUpsertWithWhereUniqueWithoutUserInput | FreelancerApplicationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: FreelancerApplicationCreateManyUserInputEnvelope
    set?: FreelancerApplicationWhereUniqueInput | FreelancerApplicationWhereUniqueInput[]
    disconnect?: FreelancerApplicationWhereUniqueInput | FreelancerApplicationWhereUniqueInput[]
    delete?: FreelancerApplicationWhereUniqueInput | FreelancerApplicationWhereUniqueInput[]
    connect?: FreelancerApplicationWhereUniqueInput | FreelancerApplicationWhereUniqueInput[]
    update?: FreelancerApplicationUpdateWithWhereUniqueWithoutUserInput | FreelancerApplicationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: FreelancerApplicationUpdateManyWithWhereWithoutUserInput | FreelancerApplicationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: FreelancerApplicationScalarWhereInput | FreelancerApplicationScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutFreelancerNestedInput = {
    create?: XOR<OrderCreateWithoutFreelancerInput, OrderUncheckedCreateWithoutFreelancerInput> | OrderCreateWithoutFreelancerInput[] | OrderUncheckedCreateWithoutFreelancerInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutFreelancerInput | OrderCreateOrConnectWithoutFreelancerInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutFreelancerInput | OrderUpsertWithWhereUniqueWithoutFreelancerInput[]
    createMany?: OrderCreateManyFreelancerInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutFreelancerInput | OrderUpdateWithWhereUniqueWithoutFreelancerInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutFreelancerInput | OrderUpdateManyWithWhereWithoutFreelancerInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type BidsUncheckedUpdateManyWithoutFreelancerNestedInput = {
    create?: XOR<BidsCreateWithoutFreelancerInput, BidsUncheckedCreateWithoutFreelancerInput> | BidsCreateWithoutFreelancerInput[] | BidsUncheckedCreateWithoutFreelancerInput[]
    connectOrCreate?: BidsCreateOrConnectWithoutFreelancerInput | BidsCreateOrConnectWithoutFreelancerInput[]
    upsert?: BidsUpsertWithWhereUniqueWithoutFreelancerInput | BidsUpsertWithWhereUniqueWithoutFreelancerInput[]
    createMany?: BidsCreateManyFreelancerInputEnvelope
    set?: BidsWhereUniqueInput | BidsWhereUniqueInput[]
    disconnect?: BidsWhereUniqueInput | BidsWhereUniqueInput[]
    delete?: BidsWhereUniqueInput | BidsWhereUniqueInput[]
    connect?: BidsWhereUniqueInput | BidsWhereUniqueInput[]
    update?: BidsUpdateWithWhereUniqueWithoutFreelancerInput | BidsUpdateWithWhereUniqueWithoutFreelancerInput[]
    updateMany?: BidsUpdateManyWithWhereWithoutFreelancerInput | BidsUpdateManyWithWhereWithoutFreelancerInput[]
    deleteMany?: BidsScalarWhereInput | BidsScalarWhereInput[]
  }

  export type AssignmentUncheckedUpdateManyWithoutFreelancerNestedInput = {
    create?: XOR<AssignmentCreateWithoutFreelancerInput, AssignmentUncheckedCreateWithoutFreelancerInput> | AssignmentCreateWithoutFreelancerInput[] | AssignmentUncheckedCreateWithoutFreelancerInput[]
    connectOrCreate?: AssignmentCreateOrConnectWithoutFreelancerInput | AssignmentCreateOrConnectWithoutFreelancerInput[]
    upsert?: AssignmentUpsertWithWhereUniqueWithoutFreelancerInput | AssignmentUpsertWithWhereUniqueWithoutFreelancerInput[]
    createMany?: AssignmentCreateManyFreelancerInputEnvelope
    set?: AssignmentWhereUniqueInput | AssignmentWhereUniqueInput[]
    disconnect?: AssignmentWhereUniqueInput | AssignmentWhereUniqueInput[]
    delete?: AssignmentWhereUniqueInput | AssignmentWhereUniqueInput[]
    connect?: AssignmentWhereUniqueInput | AssignmentWhereUniqueInput[]
    update?: AssignmentUpdateWithWhereUniqueWithoutFreelancerInput | AssignmentUpdateWithWhereUniqueWithoutFreelancerInput[]
    updateMany?: AssignmentUpdateManyWithWhereWithoutFreelancerInput | AssignmentUpdateManyWithWhereWithoutFreelancerInput[]
    deleteMany?: AssignmentScalarWhereInput | AssignmentScalarWhereInput[]
  }

  export type SubmittedJobsUncheckedUpdateManyWithoutFreelancerNestedInput = {
    create?: XOR<SubmittedJobsCreateWithoutFreelancerInput, SubmittedJobsUncheckedCreateWithoutFreelancerInput> | SubmittedJobsCreateWithoutFreelancerInput[] | SubmittedJobsUncheckedCreateWithoutFreelancerInput[]
    connectOrCreate?: SubmittedJobsCreateOrConnectWithoutFreelancerInput | SubmittedJobsCreateOrConnectWithoutFreelancerInput[]
    upsert?: SubmittedJobsUpsertWithWhereUniqueWithoutFreelancerInput | SubmittedJobsUpsertWithWhereUniqueWithoutFreelancerInput[]
    createMany?: SubmittedJobsCreateManyFreelancerInputEnvelope
    set?: SubmittedJobsWhereUniqueInput | SubmittedJobsWhereUniqueInput[]
    disconnect?: SubmittedJobsWhereUniqueInput | SubmittedJobsWhereUniqueInput[]
    delete?: SubmittedJobsWhereUniqueInput | SubmittedJobsWhereUniqueInput[]
    connect?: SubmittedJobsWhereUniqueInput | SubmittedJobsWhereUniqueInput[]
    update?: SubmittedJobsUpdateWithWhereUniqueWithoutFreelancerInput | SubmittedJobsUpdateWithWhereUniqueWithoutFreelancerInput[]
    updateMany?: SubmittedJobsUpdateManyWithWhereWithoutFreelancerInput | SubmittedJobsUpdateManyWithWhereWithoutFreelancerInput[]
    deleteMany?: SubmittedJobsScalarWhereInput | SubmittedJobsScalarWhereInput[]
  }

  export type CancelledJobsUncheckedUpdateManyWithoutFreelancerNestedInput = {
    create?: XOR<CancelledJobsCreateWithoutFreelancerInput, CancelledJobsUncheckedCreateWithoutFreelancerInput> | CancelledJobsCreateWithoutFreelancerInput[] | CancelledJobsUncheckedCreateWithoutFreelancerInput[]
    connectOrCreate?: CancelledJobsCreateOrConnectWithoutFreelancerInput | CancelledJobsCreateOrConnectWithoutFreelancerInput[]
    upsert?: CancelledJobsUpsertWithWhereUniqueWithoutFreelancerInput | CancelledJobsUpsertWithWhereUniqueWithoutFreelancerInput[]
    createMany?: CancelledJobsCreateManyFreelancerInputEnvelope
    set?: CancelledJobsWhereUniqueInput | CancelledJobsWhereUniqueInput[]
    disconnect?: CancelledJobsWhereUniqueInput | CancelledJobsWhereUniqueInput[]
    delete?: CancelledJobsWhereUniqueInput | CancelledJobsWhereUniqueInput[]
    connect?: CancelledJobsWhereUniqueInput | CancelledJobsWhereUniqueInput[]
    update?: CancelledJobsUpdateWithWhereUniqueWithoutFreelancerInput | CancelledJobsUpdateWithWhereUniqueWithoutFreelancerInput[]
    updateMany?: CancelledJobsUpdateManyWithWhereWithoutFreelancerInput | CancelledJobsUpdateManyWithWhereWithoutFreelancerInput[]
    deleteMany?: CancelledJobsScalarWhereInput | CancelledJobsScalarWhereInput[]
  }

  export type InvoiceUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<InvoiceCreateWithoutUserInput, InvoiceUncheckedCreateWithoutUserInput> | InvoiceCreateWithoutUserInput[] | InvoiceUncheckedCreateWithoutUserInput[]
    connectOrCreate?: InvoiceCreateOrConnectWithoutUserInput | InvoiceCreateOrConnectWithoutUserInput[]
    upsert?: InvoiceUpsertWithWhereUniqueWithoutUserInput | InvoiceUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: InvoiceCreateManyUserInputEnvelope
    set?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    disconnect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    delete?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    connect?: InvoiceWhereUniqueInput | InvoiceWhereUniqueInput[]
    update?: InvoiceUpdateWithWhereUniqueWithoutUserInput | InvoiceUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: InvoiceUpdateManyWithWhereWithoutUserInput | InvoiceUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: InvoiceScalarWhereInput | InvoiceScalarWhereInput[]
  }

  export type PaymentUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<PaymentCreateWithoutUserInput, PaymentUncheckedCreateWithoutUserInput> | PaymentCreateWithoutUserInput[] | PaymentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutUserInput | PaymentCreateOrConnectWithoutUserInput[]
    upsert?: PaymentUpsertWithWhereUniqueWithoutUserInput | PaymentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: PaymentCreateManyUserInputEnvelope
    set?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    disconnect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    delete?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    update?: PaymentUpdateWithWhereUniqueWithoutUserInput | PaymentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: PaymentUpdateManyWithWhereWithoutUserInput | PaymentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
  }

  export type FinesUncheckedUpdateManyWithoutFreelancerNestedInput = {
    create?: XOR<FinesCreateWithoutFreelancerInput, FinesUncheckedCreateWithoutFreelancerInput> | FinesCreateWithoutFreelancerInput[] | FinesUncheckedCreateWithoutFreelancerInput[]
    connectOrCreate?: FinesCreateOrConnectWithoutFreelancerInput | FinesCreateOrConnectWithoutFreelancerInput[]
    upsert?: FinesUpsertWithWhereUniqueWithoutFreelancerInput | FinesUpsertWithWhereUniqueWithoutFreelancerInput[]
    createMany?: FinesCreateManyFreelancerInputEnvelope
    set?: FinesWhereUniqueInput | FinesWhereUniqueInput[]
    disconnect?: FinesWhereUniqueInput | FinesWhereUniqueInput[]
    delete?: FinesWhereUniqueInput | FinesWhereUniqueInput[]
    connect?: FinesWhereUniqueInput | FinesWhereUniqueInput[]
    update?: FinesUpdateWithWhereUniqueWithoutFreelancerInput | FinesUpdateWithWhereUniqueWithoutFreelancerInput[]
    updateMany?: FinesUpdateManyWithWhereWithoutFreelancerInput | FinesUpdateManyWithWhereWithoutFreelancerInput[]
    deleteMany?: FinesScalarWhereInput | FinesScalarWhereInput[]
  }

  export type ReviewUncheckedUpdateManyWithoutReviewerNestedInput = {
    create?: XOR<ReviewCreateWithoutReviewerInput, ReviewUncheckedCreateWithoutReviewerInput> | ReviewCreateWithoutReviewerInput[] | ReviewUncheckedCreateWithoutReviewerInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutReviewerInput | ReviewCreateOrConnectWithoutReviewerInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutReviewerInput | ReviewUpsertWithWhereUniqueWithoutReviewerInput[]
    createMany?: ReviewCreateManyReviewerInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutReviewerInput | ReviewUpdateWithWhereUniqueWithoutReviewerInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutReviewerInput | ReviewUpdateManyWithWhereWithoutReviewerInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type ReviewUncheckedUpdateManyWithoutFreelancerNestedInput = {
    create?: XOR<ReviewCreateWithoutFreelancerInput, ReviewUncheckedCreateWithoutFreelancerInput> | ReviewCreateWithoutFreelancerInput[] | ReviewUncheckedCreateWithoutFreelancerInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutFreelancerInput | ReviewCreateOrConnectWithoutFreelancerInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutFreelancerInput | ReviewUpsertWithWhereUniqueWithoutFreelancerInput[]
    createMany?: ReviewCreateManyFreelancerInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutFreelancerInput | ReviewUpdateWithWhereUniqueWithoutFreelancerInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutFreelancerInput | ReviewUpdateManyWithWhereWithoutFreelancerInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type NotificationUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutUserInput | NotificationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutUserInput | NotificationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutUserInput | NotificationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type FreelancerApplicationUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<FreelancerApplicationCreateWithoutUserInput, FreelancerApplicationUncheckedCreateWithoutUserInput> | FreelancerApplicationCreateWithoutUserInput[] | FreelancerApplicationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FreelancerApplicationCreateOrConnectWithoutUserInput | FreelancerApplicationCreateOrConnectWithoutUserInput[]
    upsert?: FreelancerApplicationUpsertWithWhereUniqueWithoutUserInput | FreelancerApplicationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: FreelancerApplicationCreateManyUserInputEnvelope
    set?: FreelancerApplicationWhereUniqueInput | FreelancerApplicationWhereUniqueInput[]
    disconnect?: FreelancerApplicationWhereUniqueInput | FreelancerApplicationWhereUniqueInput[]
    delete?: FreelancerApplicationWhereUniqueInput | FreelancerApplicationWhereUniqueInput[]
    connect?: FreelancerApplicationWhereUniqueInput | FreelancerApplicationWhereUniqueInput[]
    update?: FreelancerApplicationUpdateWithWhereUniqueWithoutUserInput | FreelancerApplicationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: FreelancerApplicationUpdateManyWithWhereWithoutUserInput | FreelancerApplicationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: FreelancerApplicationScalarWhereInput | FreelancerApplicationScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutFreelancerApplicationsInput = {
    create?: XOR<UserCreateWithoutFreelancerApplicationsInput, UserUncheckedCreateWithoutFreelancerApplicationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutFreelancerApplicationsInput
    connect?: UserWhereUniqueInput
  }

  export type EnumApplicationStatusFieldUpdateOperationsInput = {
    set?: $Enums.ApplicationStatus
  }

  export type UserUpdateOneRequiredWithoutFreelancerApplicationsNestedInput = {
    create?: XOR<UserCreateWithoutFreelancerApplicationsInput, UserUncheckedCreateWithoutFreelancerApplicationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutFreelancerApplicationsInput
    upsert?: UserUpsertWithoutFreelancerApplicationsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutFreelancerApplicationsInput, UserUpdateWithoutFreelancerApplicationsInput>, UserUncheckedUpdateWithoutFreelancerApplicationsInput>
  }

  export type OrderCreateattachmentsInput = {
    set: string[]
  }

  export type UserCreateNestedOneWithoutOrdersInput = {
    create?: XOR<UserCreateWithoutOrdersInput, UserUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: UserCreateOrConnectWithoutOrdersInput
    connect?: UserWhereUniqueInput
  }

  export type BidsCreateNestedManyWithoutOrderInput = {
    create?: XOR<BidsCreateWithoutOrderInput, BidsUncheckedCreateWithoutOrderInput> | BidsCreateWithoutOrderInput[] | BidsUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: BidsCreateOrConnectWithoutOrderInput | BidsCreateOrConnectWithoutOrderInput[]
    createMany?: BidsCreateManyOrderInputEnvelope
    connect?: BidsWhereUniqueInput | BidsWhereUniqueInput[]
  }

  export type AssignmentCreateNestedManyWithoutOrderInput = {
    create?: XOR<AssignmentCreateWithoutOrderInput, AssignmentUncheckedCreateWithoutOrderInput> | AssignmentCreateWithoutOrderInput[] | AssignmentUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: AssignmentCreateOrConnectWithoutOrderInput | AssignmentCreateOrConnectWithoutOrderInput[]
    createMany?: AssignmentCreateManyOrderInputEnvelope
    connect?: AssignmentWhereUniqueInput | AssignmentWhereUniqueInput[]
  }

  export type SubmittedJobsCreateNestedManyWithoutOrderInput = {
    create?: XOR<SubmittedJobsCreateWithoutOrderInput, SubmittedJobsUncheckedCreateWithoutOrderInput> | SubmittedJobsCreateWithoutOrderInput[] | SubmittedJobsUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: SubmittedJobsCreateOrConnectWithoutOrderInput | SubmittedJobsCreateOrConnectWithoutOrderInput[]
    createMany?: SubmittedJobsCreateManyOrderInputEnvelope
    connect?: SubmittedJobsWhereUniqueInput | SubmittedJobsWhereUniqueInput[]
  }

  export type CancelledJobsCreateNestedManyWithoutOrderInput = {
    create?: XOR<CancelledJobsCreateWithoutOrderInput, CancelledJobsUncheckedCreateWithoutOrderInput> | CancelledJobsCreateWithoutOrderInput[] | CancelledJobsUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: CancelledJobsCreateOrConnectWithoutOrderInput | CancelledJobsCreateOrConnectWithoutOrderInput[]
    createMany?: CancelledJobsCreateManyOrderInputEnvelope
    connect?: CancelledJobsWhereUniqueInput | CancelledJobsWhereUniqueInput[]
  }

  export type FinesCreateNestedManyWithoutOrderInput = {
    create?: XOR<FinesCreateWithoutOrderInput, FinesUncheckedCreateWithoutOrderInput> | FinesCreateWithoutOrderInput[] | FinesUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: FinesCreateOrConnectWithoutOrderInput | FinesCreateOrConnectWithoutOrderInput[]
    createMany?: FinesCreateManyOrderInputEnvelope
    connect?: FinesWhereUniqueInput | FinesWhereUniqueInput[]
  }

  export type ReviewCreateNestedManyWithoutOrderInput = {
    create?: XOR<ReviewCreateWithoutOrderInput, ReviewUncheckedCreateWithoutOrderInput> | ReviewCreateWithoutOrderInput[] | ReviewUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutOrderInput | ReviewCreateOrConnectWithoutOrderInput[]
    createMany?: ReviewCreateManyOrderInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type InvoiceCreateNestedOneWithoutOrdersInput = {
    create?: XOR<InvoiceCreateWithoutOrdersInput, InvoiceUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: InvoiceCreateOrConnectWithoutOrdersInput
    connect?: InvoiceWhereUniqueInput
  }

  export type NotificationCreateNestedManyWithoutOrderInput = {
    create?: XOR<NotificationCreateWithoutOrderInput, NotificationUncheckedCreateWithoutOrderInput> | NotificationCreateWithoutOrderInput[] | NotificationUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutOrderInput | NotificationCreateOrConnectWithoutOrderInput[]
    createMany?: NotificationCreateManyOrderInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type BidsUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<BidsCreateWithoutOrderInput, BidsUncheckedCreateWithoutOrderInput> | BidsCreateWithoutOrderInput[] | BidsUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: BidsCreateOrConnectWithoutOrderInput | BidsCreateOrConnectWithoutOrderInput[]
    createMany?: BidsCreateManyOrderInputEnvelope
    connect?: BidsWhereUniqueInput | BidsWhereUniqueInput[]
  }

  export type AssignmentUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<AssignmentCreateWithoutOrderInput, AssignmentUncheckedCreateWithoutOrderInput> | AssignmentCreateWithoutOrderInput[] | AssignmentUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: AssignmentCreateOrConnectWithoutOrderInput | AssignmentCreateOrConnectWithoutOrderInput[]
    createMany?: AssignmentCreateManyOrderInputEnvelope
    connect?: AssignmentWhereUniqueInput | AssignmentWhereUniqueInput[]
  }

  export type SubmittedJobsUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<SubmittedJobsCreateWithoutOrderInput, SubmittedJobsUncheckedCreateWithoutOrderInput> | SubmittedJobsCreateWithoutOrderInput[] | SubmittedJobsUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: SubmittedJobsCreateOrConnectWithoutOrderInput | SubmittedJobsCreateOrConnectWithoutOrderInput[]
    createMany?: SubmittedJobsCreateManyOrderInputEnvelope
    connect?: SubmittedJobsWhereUniqueInput | SubmittedJobsWhereUniqueInput[]
  }

  export type CancelledJobsUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<CancelledJobsCreateWithoutOrderInput, CancelledJobsUncheckedCreateWithoutOrderInput> | CancelledJobsCreateWithoutOrderInput[] | CancelledJobsUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: CancelledJobsCreateOrConnectWithoutOrderInput | CancelledJobsCreateOrConnectWithoutOrderInput[]
    createMany?: CancelledJobsCreateManyOrderInputEnvelope
    connect?: CancelledJobsWhereUniqueInput | CancelledJobsWhereUniqueInput[]
  }

  export type FinesUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<FinesCreateWithoutOrderInput, FinesUncheckedCreateWithoutOrderInput> | FinesCreateWithoutOrderInput[] | FinesUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: FinesCreateOrConnectWithoutOrderInput | FinesCreateOrConnectWithoutOrderInput[]
    createMany?: FinesCreateManyOrderInputEnvelope
    connect?: FinesWhereUniqueInput | FinesWhereUniqueInput[]
  }

  export type ReviewUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<ReviewCreateWithoutOrderInput, ReviewUncheckedCreateWithoutOrderInput> | ReviewCreateWithoutOrderInput[] | ReviewUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutOrderInput | ReviewCreateOrConnectWithoutOrderInput[]
    createMany?: ReviewCreateManyOrderInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type NotificationUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<NotificationCreateWithoutOrderInput, NotificationUncheckedCreateWithoutOrderInput> | NotificationCreateWithoutOrderInput[] | NotificationUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutOrderInput | NotificationCreateOrConnectWithoutOrderInput[]
    createMany?: NotificationCreateManyOrderInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type OrderUpdateattachmentsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type EnumOrderStatusFieldUpdateOperationsInput = {
    set?: $Enums.OrderStatus
  }

  export type UserUpdateOneWithoutOrdersNestedInput = {
    create?: XOR<UserCreateWithoutOrdersInput, UserUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: UserCreateOrConnectWithoutOrdersInput
    upsert?: UserUpsertWithoutOrdersInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutOrdersInput, UserUpdateWithoutOrdersInput>, UserUncheckedUpdateWithoutOrdersInput>
  }

  export type BidsUpdateManyWithoutOrderNestedInput = {
    create?: XOR<BidsCreateWithoutOrderInput, BidsUncheckedCreateWithoutOrderInput> | BidsCreateWithoutOrderInput[] | BidsUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: BidsCreateOrConnectWithoutOrderInput | BidsCreateOrConnectWithoutOrderInput[]
    upsert?: BidsUpsertWithWhereUniqueWithoutOrderInput | BidsUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: BidsCreateManyOrderInputEnvelope
    set?: BidsWhereUniqueInput | BidsWhereUniqueInput[]
    disconnect?: BidsWhereUniqueInput | BidsWhereUniqueInput[]
    delete?: BidsWhereUniqueInput | BidsWhereUniqueInput[]
    connect?: BidsWhereUniqueInput | BidsWhereUniqueInput[]
    update?: BidsUpdateWithWhereUniqueWithoutOrderInput | BidsUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: BidsUpdateManyWithWhereWithoutOrderInput | BidsUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: BidsScalarWhereInput | BidsScalarWhereInput[]
  }

  export type AssignmentUpdateManyWithoutOrderNestedInput = {
    create?: XOR<AssignmentCreateWithoutOrderInput, AssignmentUncheckedCreateWithoutOrderInput> | AssignmentCreateWithoutOrderInput[] | AssignmentUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: AssignmentCreateOrConnectWithoutOrderInput | AssignmentCreateOrConnectWithoutOrderInput[]
    upsert?: AssignmentUpsertWithWhereUniqueWithoutOrderInput | AssignmentUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: AssignmentCreateManyOrderInputEnvelope
    set?: AssignmentWhereUniqueInput | AssignmentWhereUniqueInput[]
    disconnect?: AssignmentWhereUniqueInput | AssignmentWhereUniqueInput[]
    delete?: AssignmentWhereUniqueInput | AssignmentWhereUniqueInput[]
    connect?: AssignmentWhereUniqueInput | AssignmentWhereUniqueInput[]
    update?: AssignmentUpdateWithWhereUniqueWithoutOrderInput | AssignmentUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: AssignmentUpdateManyWithWhereWithoutOrderInput | AssignmentUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: AssignmentScalarWhereInput | AssignmentScalarWhereInput[]
  }

  export type SubmittedJobsUpdateManyWithoutOrderNestedInput = {
    create?: XOR<SubmittedJobsCreateWithoutOrderInput, SubmittedJobsUncheckedCreateWithoutOrderInput> | SubmittedJobsCreateWithoutOrderInput[] | SubmittedJobsUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: SubmittedJobsCreateOrConnectWithoutOrderInput | SubmittedJobsCreateOrConnectWithoutOrderInput[]
    upsert?: SubmittedJobsUpsertWithWhereUniqueWithoutOrderInput | SubmittedJobsUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: SubmittedJobsCreateManyOrderInputEnvelope
    set?: SubmittedJobsWhereUniqueInput | SubmittedJobsWhereUniqueInput[]
    disconnect?: SubmittedJobsWhereUniqueInput | SubmittedJobsWhereUniqueInput[]
    delete?: SubmittedJobsWhereUniqueInput | SubmittedJobsWhereUniqueInput[]
    connect?: SubmittedJobsWhereUniqueInput | SubmittedJobsWhereUniqueInput[]
    update?: SubmittedJobsUpdateWithWhereUniqueWithoutOrderInput | SubmittedJobsUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: SubmittedJobsUpdateManyWithWhereWithoutOrderInput | SubmittedJobsUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: SubmittedJobsScalarWhereInput | SubmittedJobsScalarWhereInput[]
  }

  export type CancelledJobsUpdateManyWithoutOrderNestedInput = {
    create?: XOR<CancelledJobsCreateWithoutOrderInput, CancelledJobsUncheckedCreateWithoutOrderInput> | CancelledJobsCreateWithoutOrderInput[] | CancelledJobsUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: CancelledJobsCreateOrConnectWithoutOrderInput | CancelledJobsCreateOrConnectWithoutOrderInput[]
    upsert?: CancelledJobsUpsertWithWhereUniqueWithoutOrderInput | CancelledJobsUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: CancelledJobsCreateManyOrderInputEnvelope
    set?: CancelledJobsWhereUniqueInput | CancelledJobsWhereUniqueInput[]
    disconnect?: CancelledJobsWhereUniqueInput | CancelledJobsWhereUniqueInput[]
    delete?: CancelledJobsWhereUniqueInput | CancelledJobsWhereUniqueInput[]
    connect?: CancelledJobsWhereUniqueInput | CancelledJobsWhereUniqueInput[]
    update?: CancelledJobsUpdateWithWhereUniqueWithoutOrderInput | CancelledJobsUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: CancelledJobsUpdateManyWithWhereWithoutOrderInput | CancelledJobsUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: CancelledJobsScalarWhereInput | CancelledJobsScalarWhereInput[]
  }

  export type FinesUpdateManyWithoutOrderNestedInput = {
    create?: XOR<FinesCreateWithoutOrderInput, FinesUncheckedCreateWithoutOrderInput> | FinesCreateWithoutOrderInput[] | FinesUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: FinesCreateOrConnectWithoutOrderInput | FinesCreateOrConnectWithoutOrderInput[]
    upsert?: FinesUpsertWithWhereUniqueWithoutOrderInput | FinesUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: FinesCreateManyOrderInputEnvelope
    set?: FinesWhereUniqueInput | FinesWhereUniqueInput[]
    disconnect?: FinesWhereUniqueInput | FinesWhereUniqueInput[]
    delete?: FinesWhereUniqueInput | FinesWhereUniqueInput[]
    connect?: FinesWhereUniqueInput | FinesWhereUniqueInput[]
    update?: FinesUpdateWithWhereUniqueWithoutOrderInput | FinesUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: FinesUpdateManyWithWhereWithoutOrderInput | FinesUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: FinesScalarWhereInput | FinesScalarWhereInput[]
  }

  export type ReviewUpdateManyWithoutOrderNestedInput = {
    create?: XOR<ReviewCreateWithoutOrderInput, ReviewUncheckedCreateWithoutOrderInput> | ReviewCreateWithoutOrderInput[] | ReviewUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutOrderInput | ReviewCreateOrConnectWithoutOrderInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutOrderInput | ReviewUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: ReviewCreateManyOrderInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutOrderInput | ReviewUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutOrderInput | ReviewUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type InvoiceUpdateOneWithoutOrdersNestedInput = {
    create?: XOR<InvoiceCreateWithoutOrdersInput, InvoiceUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: InvoiceCreateOrConnectWithoutOrdersInput
    upsert?: InvoiceUpsertWithoutOrdersInput
    disconnect?: InvoiceWhereInput | boolean
    delete?: InvoiceWhereInput | boolean
    connect?: InvoiceWhereUniqueInput
    update?: XOR<XOR<InvoiceUpdateToOneWithWhereWithoutOrdersInput, InvoiceUpdateWithoutOrdersInput>, InvoiceUncheckedUpdateWithoutOrdersInput>
  }

  export type NotificationUpdateManyWithoutOrderNestedInput = {
    create?: XOR<NotificationCreateWithoutOrderInput, NotificationUncheckedCreateWithoutOrderInput> | NotificationCreateWithoutOrderInput[] | NotificationUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutOrderInput | NotificationCreateOrConnectWithoutOrderInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutOrderInput | NotificationUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: NotificationCreateManyOrderInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutOrderInput | NotificationUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutOrderInput | NotificationUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type BidsUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<BidsCreateWithoutOrderInput, BidsUncheckedCreateWithoutOrderInput> | BidsCreateWithoutOrderInput[] | BidsUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: BidsCreateOrConnectWithoutOrderInput | BidsCreateOrConnectWithoutOrderInput[]
    upsert?: BidsUpsertWithWhereUniqueWithoutOrderInput | BidsUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: BidsCreateManyOrderInputEnvelope
    set?: BidsWhereUniqueInput | BidsWhereUniqueInput[]
    disconnect?: BidsWhereUniqueInput | BidsWhereUniqueInput[]
    delete?: BidsWhereUniqueInput | BidsWhereUniqueInput[]
    connect?: BidsWhereUniqueInput | BidsWhereUniqueInput[]
    update?: BidsUpdateWithWhereUniqueWithoutOrderInput | BidsUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: BidsUpdateManyWithWhereWithoutOrderInput | BidsUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: BidsScalarWhereInput | BidsScalarWhereInput[]
  }

  export type AssignmentUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<AssignmentCreateWithoutOrderInput, AssignmentUncheckedCreateWithoutOrderInput> | AssignmentCreateWithoutOrderInput[] | AssignmentUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: AssignmentCreateOrConnectWithoutOrderInput | AssignmentCreateOrConnectWithoutOrderInput[]
    upsert?: AssignmentUpsertWithWhereUniqueWithoutOrderInput | AssignmentUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: AssignmentCreateManyOrderInputEnvelope
    set?: AssignmentWhereUniqueInput | AssignmentWhereUniqueInput[]
    disconnect?: AssignmentWhereUniqueInput | AssignmentWhereUniqueInput[]
    delete?: AssignmentWhereUniqueInput | AssignmentWhereUniqueInput[]
    connect?: AssignmentWhereUniqueInput | AssignmentWhereUniqueInput[]
    update?: AssignmentUpdateWithWhereUniqueWithoutOrderInput | AssignmentUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: AssignmentUpdateManyWithWhereWithoutOrderInput | AssignmentUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: AssignmentScalarWhereInput | AssignmentScalarWhereInput[]
  }

  export type SubmittedJobsUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<SubmittedJobsCreateWithoutOrderInput, SubmittedJobsUncheckedCreateWithoutOrderInput> | SubmittedJobsCreateWithoutOrderInput[] | SubmittedJobsUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: SubmittedJobsCreateOrConnectWithoutOrderInput | SubmittedJobsCreateOrConnectWithoutOrderInput[]
    upsert?: SubmittedJobsUpsertWithWhereUniqueWithoutOrderInput | SubmittedJobsUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: SubmittedJobsCreateManyOrderInputEnvelope
    set?: SubmittedJobsWhereUniqueInput | SubmittedJobsWhereUniqueInput[]
    disconnect?: SubmittedJobsWhereUniqueInput | SubmittedJobsWhereUniqueInput[]
    delete?: SubmittedJobsWhereUniqueInput | SubmittedJobsWhereUniqueInput[]
    connect?: SubmittedJobsWhereUniqueInput | SubmittedJobsWhereUniqueInput[]
    update?: SubmittedJobsUpdateWithWhereUniqueWithoutOrderInput | SubmittedJobsUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: SubmittedJobsUpdateManyWithWhereWithoutOrderInput | SubmittedJobsUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: SubmittedJobsScalarWhereInput | SubmittedJobsScalarWhereInput[]
  }

  export type CancelledJobsUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<CancelledJobsCreateWithoutOrderInput, CancelledJobsUncheckedCreateWithoutOrderInput> | CancelledJobsCreateWithoutOrderInput[] | CancelledJobsUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: CancelledJobsCreateOrConnectWithoutOrderInput | CancelledJobsCreateOrConnectWithoutOrderInput[]
    upsert?: CancelledJobsUpsertWithWhereUniqueWithoutOrderInput | CancelledJobsUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: CancelledJobsCreateManyOrderInputEnvelope
    set?: CancelledJobsWhereUniqueInput | CancelledJobsWhereUniqueInput[]
    disconnect?: CancelledJobsWhereUniqueInput | CancelledJobsWhereUniqueInput[]
    delete?: CancelledJobsWhereUniqueInput | CancelledJobsWhereUniqueInput[]
    connect?: CancelledJobsWhereUniqueInput | CancelledJobsWhereUniqueInput[]
    update?: CancelledJobsUpdateWithWhereUniqueWithoutOrderInput | CancelledJobsUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: CancelledJobsUpdateManyWithWhereWithoutOrderInput | CancelledJobsUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: CancelledJobsScalarWhereInput | CancelledJobsScalarWhereInput[]
  }

  export type FinesUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<FinesCreateWithoutOrderInput, FinesUncheckedCreateWithoutOrderInput> | FinesCreateWithoutOrderInput[] | FinesUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: FinesCreateOrConnectWithoutOrderInput | FinesCreateOrConnectWithoutOrderInput[]
    upsert?: FinesUpsertWithWhereUniqueWithoutOrderInput | FinesUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: FinesCreateManyOrderInputEnvelope
    set?: FinesWhereUniqueInput | FinesWhereUniqueInput[]
    disconnect?: FinesWhereUniqueInput | FinesWhereUniqueInput[]
    delete?: FinesWhereUniqueInput | FinesWhereUniqueInput[]
    connect?: FinesWhereUniqueInput | FinesWhereUniqueInput[]
    update?: FinesUpdateWithWhereUniqueWithoutOrderInput | FinesUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: FinesUpdateManyWithWhereWithoutOrderInput | FinesUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: FinesScalarWhereInput | FinesScalarWhereInput[]
  }

  export type ReviewUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<ReviewCreateWithoutOrderInput, ReviewUncheckedCreateWithoutOrderInput> | ReviewCreateWithoutOrderInput[] | ReviewUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutOrderInput | ReviewCreateOrConnectWithoutOrderInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutOrderInput | ReviewUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: ReviewCreateManyOrderInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutOrderInput | ReviewUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutOrderInput | ReviewUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type NotificationUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<NotificationCreateWithoutOrderInput, NotificationUncheckedCreateWithoutOrderInput> | NotificationCreateWithoutOrderInput[] | NotificationUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutOrderInput | NotificationCreateOrConnectWithoutOrderInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutOrderInput | NotificationUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: NotificationCreateManyOrderInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutOrderInput | NotificationUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutOrderInput | NotificationUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type OrderCreateNestedOneWithoutBidsInput = {
    create?: XOR<OrderCreateWithoutBidsInput, OrderUncheckedCreateWithoutBidsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutBidsInput
    connect?: OrderWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutBidsInput = {
    create?: XOR<UserCreateWithoutBidsInput, UserUncheckedCreateWithoutBidsInput>
    connectOrCreate?: UserCreateOrConnectWithoutBidsInput
    connect?: UserWhereUniqueInput
  }

  export type OrderUpdateOneRequiredWithoutBidsNestedInput = {
    create?: XOR<OrderCreateWithoutBidsInput, OrderUncheckedCreateWithoutBidsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutBidsInput
    upsert?: OrderUpsertWithoutBidsInput
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutBidsInput, OrderUpdateWithoutBidsInput>, OrderUncheckedUpdateWithoutBidsInput>
  }

  export type UserUpdateOneRequiredWithoutBidsNestedInput = {
    create?: XOR<UserCreateWithoutBidsInput, UserUncheckedCreateWithoutBidsInput>
    connectOrCreate?: UserCreateOrConnectWithoutBidsInput
    upsert?: UserUpsertWithoutBidsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutBidsInput, UserUpdateWithoutBidsInput>, UserUncheckedUpdateWithoutBidsInput>
  }

  export type OrderCreateNestedOneWithoutAssignmentsInput = {
    create?: XOR<OrderCreateWithoutAssignmentsInput, OrderUncheckedCreateWithoutAssignmentsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutAssignmentsInput
    connect?: OrderWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutAssignmentsInput = {
    create?: XOR<UserCreateWithoutAssignmentsInput, UserUncheckedCreateWithoutAssignmentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAssignmentsInput
    connect?: UserWhereUniqueInput
  }

  export type OrderUpdateOneRequiredWithoutAssignmentsNestedInput = {
    create?: XOR<OrderCreateWithoutAssignmentsInput, OrderUncheckedCreateWithoutAssignmentsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutAssignmentsInput
    upsert?: OrderUpsertWithoutAssignmentsInput
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutAssignmentsInput, OrderUpdateWithoutAssignmentsInput>, OrderUncheckedUpdateWithoutAssignmentsInput>
  }

  export type UserUpdateOneRequiredWithoutAssignmentsNestedInput = {
    create?: XOR<UserCreateWithoutAssignmentsInput, UserUncheckedCreateWithoutAssignmentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAssignmentsInput
    upsert?: UserUpsertWithoutAssignmentsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAssignmentsInput, UserUpdateWithoutAssignmentsInput>, UserUncheckedUpdateWithoutAssignmentsInput>
  }

  export type OrderCreateNestedOneWithoutSubmittedJobsInput = {
    create?: XOR<OrderCreateWithoutSubmittedJobsInput, OrderUncheckedCreateWithoutSubmittedJobsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutSubmittedJobsInput
    connect?: OrderWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutSubmittedJobsInput = {
    create?: XOR<UserCreateWithoutSubmittedJobsInput, UserUncheckedCreateWithoutSubmittedJobsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSubmittedJobsInput
    connect?: UserWhereUniqueInput
  }

  export type OrderUpdateOneRequiredWithoutSubmittedJobsNestedInput = {
    create?: XOR<OrderCreateWithoutSubmittedJobsInput, OrderUncheckedCreateWithoutSubmittedJobsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutSubmittedJobsInput
    upsert?: OrderUpsertWithoutSubmittedJobsInput
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutSubmittedJobsInput, OrderUpdateWithoutSubmittedJobsInput>, OrderUncheckedUpdateWithoutSubmittedJobsInput>
  }

  export type UserUpdateOneRequiredWithoutSubmittedJobsNestedInput = {
    create?: XOR<UserCreateWithoutSubmittedJobsInput, UserUncheckedCreateWithoutSubmittedJobsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSubmittedJobsInput
    upsert?: UserUpsertWithoutSubmittedJobsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSubmittedJobsInput, UserUpdateWithoutSubmittedJobsInput>, UserUncheckedUpdateWithoutSubmittedJobsInput>
  }

  export type OrderCreateNestedOneWithoutCancelledJobsInput = {
    create?: XOR<OrderCreateWithoutCancelledJobsInput, OrderUncheckedCreateWithoutCancelledJobsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutCancelledJobsInput
    connect?: OrderWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutCancelledJobsInput = {
    create?: XOR<UserCreateWithoutCancelledJobsInput, UserUncheckedCreateWithoutCancelledJobsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCancelledJobsInput
    connect?: UserWhereUniqueInput
  }

  export type OrderUpdateOneRequiredWithoutCancelledJobsNestedInput = {
    create?: XOR<OrderCreateWithoutCancelledJobsInput, OrderUncheckedCreateWithoutCancelledJobsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutCancelledJobsInput
    upsert?: OrderUpsertWithoutCancelledJobsInput
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutCancelledJobsInput, OrderUpdateWithoutCancelledJobsInput>, OrderUncheckedUpdateWithoutCancelledJobsInput>
  }

  export type UserUpdateOneWithoutCancelledJobsNestedInput = {
    create?: XOR<UserCreateWithoutCancelledJobsInput, UserUncheckedCreateWithoutCancelledJobsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCancelledJobsInput
    upsert?: UserUpsertWithoutCancelledJobsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCancelledJobsInput, UserUpdateWithoutCancelledJobsInput>, UserUncheckedUpdateWithoutCancelledJobsInput>
  }

  export type OrderCreateNestedManyWithoutInvoiceInput = {
    create?: XOR<OrderCreateWithoutInvoiceInput, OrderUncheckedCreateWithoutInvoiceInput> | OrderCreateWithoutInvoiceInput[] | OrderUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutInvoiceInput | OrderCreateOrConnectWithoutInvoiceInput[]
    createMany?: OrderCreateManyInvoiceInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type PaymentCreateNestedManyWithoutInvoiceInput = {
    create?: XOR<PaymentCreateWithoutInvoiceInput, PaymentUncheckedCreateWithoutInvoiceInput> | PaymentCreateWithoutInvoiceInput[] | PaymentUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutInvoiceInput | PaymentCreateOrConnectWithoutInvoiceInput[]
    createMany?: PaymentCreateManyInvoiceInputEnvelope
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutInvoicesInput = {
    create?: XOR<UserCreateWithoutInvoicesInput, UserUncheckedCreateWithoutInvoicesInput>
    connectOrCreate?: UserCreateOrConnectWithoutInvoicesInput
    connect?: UserWhereUniqueInput
  }

  export type FinesCreateNestedManyWithoutInvoiceInput = {
    create?: XOR<FinesCreateWithoutInvoiceInput, FinesUncheckedCreateWithoutInvoiceInput> | FinesCreateWithoutInvoiceInput[] | FinesUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: FinesCreateOrConnectWithoutInvoiceInput | FinesCreateOrConnectWithoutInvoiceInput[]
    createMany?: FinesCreateManyInvoiceInputEnvelope
    connect?: FinesWhereUniqueInput | FinesWhereUniqueInput[]
  }

  export type ReviewCreateNestedManyWithoutInvoiceInput = {
    create?: XOR<ReviewCreateWithoutInvoiceInput, ReviewUncheckedCreateWithoutInvoiceInput> | ReviewCreateWithoutInvoiceInput[] | ReviewUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutInvoiceInput | ReviewCreateOrConnectWithoutInvoiceInput[]
    createMany?: ReviewCreateManyInvoiceInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutInvoiceInput = {
    create?: XOR<OrderCreateWithoutInvoiceInput, OrderUncheckedCreateWithoutInvoiceInput> | OrderCreateWithoutInvoiceInput[] | OrderUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutInvoiceInput | OrderCreateOrConnectWithoutInvoiceInput[]
    createMany?: OrderCreateManyInvoiceInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type PaymentUncheckedCreateNestedManyWithoutInvoiceInput = {
    create?: XOR<PaymentCreateWithoutInvoiceInput, PaymentUncheckedCreateWithoutInvoiceInput> | PaymentCreateWithoutInvoiceInput[] | PaymentUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutInvoiceInput | PaymentCreateOrConnectWithoutInvoiceInput[]
    createMany?: PaymentCreateManyInvoiceInputEnvelope
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
  }

  export type FinesUncheckedCreateNestedManyWithoutInvoiceInput = {
    create?: XOR<FinesCreateWithoutInvoiceInput, FinesUncheckedCreateWithoutInvoiceInput> | FinesCreateWithoutInvoiceInput[] | FinesUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: FinesCreateOrConnectWithoutInvoiceInput | FinesCreateOrConnectWithoutInvoiceInput[]
    createMany?: FinesCreateManyInvoiceInputEnvelope
    connect?: FinesWhereUniqueInput | FinesWhereUniqueInput[]
  }

  export type ReviewUncheckedCreateNestedManyWithoutInvoiceInput = {
    create?: XOR<ReviewCreateWithoutInvoiceInput, ReviewUncheckedCreateWithoutInvoiceInput> | ReviewCreateWithoutInvoiceInput[] | ReviewUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutInvoiceInput | ReviewCreateOrConnectWithoutInvoiceInput[]
    createMany?: ReviewCreateManyInvoiceInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type OrderUpdateManyWithoutInvoiceNestedInput = {
    create?: XOR<OrderCreateWithoutInvoiceInput, OrderUncheckedCreateWithoutInvoiceInput> | OrderCreateWithoutInvoiceInput[] | OrderUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutInvoiceInput | OrderCreateOrConnectWithoutInvoiceInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutInvoiceInput | OrderUpsertWithWhereUniqueWithoutInvoiceInput[]
    createMany?: OrderCreateManyInvoiceInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutInvoiceInput | OrderUpdateWithWhereUniqueWithoutInvoiceInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutInvoiceInput | OrderUpdateManyWithWhereWithoutInvoiceInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type PaymentUpdateManyWithoutInvoiceNestedInput = {
    create?: XOR<PaymentCreateWithoutInvoiceInput, PaymentUncheckedCreateWithoutInvoiceInput> | PaymentCreateWithoutInvoiceInput[] | PaymentUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutInvoiceInput | PaymentCreateOrConnectWithoutInvoiceInput[]
    upsert?: PaymentUpsertWithWhereUniqueWithoutInvoiceInput | PaymentUpsertWithWhereUniqueWithoutInvoiceInput[]
    createMany?: PaymentCreateManyInvoiceInputEnvelope
    set?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    disconnect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    delete?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    update?: PaymentUpdateWithWhereUniqueWithoutInvoiceInput | PaymentUpdateWithWhereUniqueWithoutInvoiceInput[]
    updateMany?: PaymentUpdateManyWithWhereWithoutInvoiceInput | PaymentUpdateManyWithWhereWithoutInvoiceInput[]
    deleteMany?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
  }

  export type UserUpdateOneRequiredWithoutInvoicesNestedInput = {
    create?: XOR<UserCreateWithoutInvoicesInput, UserUncheckedCreateWithoutInvoicesInput>
    connectOrCreate?: UserCreateOrConnectWithoutInvoicesInput
    upsert?: UserUpsertWithoutInvoicesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutInvoicesInput, UserUpdateWithoutInvoicesInput>, UserUncheckedUpdateWithoutInvoicesInput>
  }

  export type FinesUpdateManyWithoutInvoiceNestedInput = {
    create?: XOR<FinesCreateWithoutInvoiceInput, FinesUncheckedCreateWithoutInvoiceInput> | FinesCreateWithoutInvoiceInput[] | FinesUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: FinesCreateOrConnectWithoutInvoiceInput | FinesCreateOrConnectWithoutInvoiceInput[]
    upsert?: FinesUpsertWithWhereUniqueWithoutInvoiceInput | FinesUpsertWithWhereUniqueWithoutInvoiceInput[]
    createMany?: FinesCreateManyInvoiceInputEnvelope
    set?: FinesWhereUniqueInput | FinesWhereUniqueInput[]
    disconnect?: FinesWhereUniqueInput | FinesWhereUniqueInput[]
    delete?: FinesWhereUniqueInput | FinesWhereUniqueInput[]
    connect?: FinesWhereUniqueInput | FinesWhereUniqueInput[]
    update?: FinesUpdateWithWhereUniqueWithoutInvoiceInput | FinesUpdateWithWhereUniqueWithoutInvoiceInput[]
    updateMany?: FinesUpdateManyWithWhereWithoutInvoiceInput | FinesUpdateManyWithWhereWithoutInvoiceInput[]
    deleteMany?: FinesScalarWhereInput | FinesScalarWhereInput[]
  }

  export type ReviewUpdateManyWithoutInvoiceNestedInput = {
    create?: XOR<ReviewCreateWithoutInvoiceInput, ReviewUncheckedCreateWithoutInvoiceInput> | ReviewCreateWithoutInvoiceInput[] | ReviewUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutInvoiceInput | ReviewCreateOrConnectWithoutInvoiceInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutInvoiceInput | ReviewUpsertWithWhereUniqueWithoutInvoiceInput[]
    createMany?: ReviewCreateManyInvoiceInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutInvoiceInput | ReviewUpdateWithWhereUniqueWithoutInvoiceInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutInvoiceInput | ReviewUpdateManyWithWhereWithoutInvoiceInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutInvoiceNestedInput = {
    create?: XOR<OrderCreateWithoutInvoiceInput, OrderUncheckedCreateWithoutInvoiceInput> | OrderCreateWithoutInvoiceInput[] | OrderUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutInvoiceInput | OrderCreateOrConnectWithoutInvoiceInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutInvoiceInput | OrderUpsertWithWhereUniqueWithoutInvoiceInput[]
    createMany?: OrderCreateManyInvoiceInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutInvoiceInput | OrderUpdateWithWhereUniqueWithoutInvoiceInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutInvoiceInput | OrderUpdateManyWithWhereWithoutInvoiceInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type PaymentUncheckedUpdateManyWithoutInvoiceNestedInput = {
    create?: XOR<PaymentCreateWithoutInvoiceInput, PaymentUncheckedCreateWithoutInvoiceInput> | PaymentCreateWithoutInvoiceInput[] | PaymentUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutInvoiceInput | PaymentCreateOrConnectWithoutInvoiceInput[]
    upsert?: PaymentUpsertWithWhereUniqueWithoutInvoiceInput | PaymentUpsertWithWhereUniqueWithoutInvoiceInput[]
    createMany?: PaymentCreateManyInvoiceInputEnvelope
    set?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    disconnect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    delete?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    update?: PaymentUpdateWithWhereUniqueWithoutInvoiceInput | PaymentUpdateWithWhereUniqueWithoutInvoiceInput[]
    updateMany?: PaymentUpdateManyWithWhereWithoutInvoiceInput | PaymentUpdateManyWithWhereWithoutInvoiceInput[]
    deleteMany?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
  }

  export type FinesUncheckedUpdateManyWithoutInvoiceNestedInput = {
    create?: XOR<FinesCreateWithoutInvoiceInput, FinesUncheckedCreateWithoutInvoiceInput> | FinesCreateWithoutInvoiceInput[] | FinesUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: FinesCreateOrConnectWithoutInvoiceInput | FinesCreateOrConnectWithoutInvoiceInput[]
    upsert?: FinesUpsertWithWhereUniqueWithoutInvoiceInput | FinesUpsertWithWhereUniqueWithoutInvoiceInput[]
    createMany?: FinesCreateManyInvoiceInputEnvelope
    set?: FinesWhereUniqueInput | FinesWhereUniqueInput[]
    disconnect?: FinesWhereUniqueInput | FinesWhereUniqueInput[]
    delete?: FinesWhereUniqueInput | FinesWhereUniqueInput[]
    connect?: FinesWhereUniqueInput | FinesWhereUniqueInput[]
    update?: FinesUpdateWithWhereUniqueWithoutInvoiceInput | FinesUpdateWithWhereUniqueWithoutInvoiceInput[]
    updateMany?: FinesUpdateManyWithWhereWithoutInvoiceInput | FinesUpdateManyWithWhereWithoutInvoiceInput[]
    deleteMany?: FinesScalarWhereInput | FinesScalarWhereInput[]
  }

  export type ReviewUncheckedUpdateManyWithoutInvoiceNestedInput = {
    create?: XOR<ReviewCreateWithoutInvoiceInput, ReviewUncheckedCreateWithoutInvoiceInput> | ReviewCreateWithoutInvoiceInput[] | ReviewUncheckedCreateWithoutInvoiceInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutInvoiceInput | ReviewCreateOrConnectWithoutInvoiceInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutInvoiceInput | ReviewUpsertWithWhereUniqueWithoutInvoiceInput[]
    createMany?: ReviewCreateManyInvoiceInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutInvoiceInput | ReviewUpdateWithWhereUniqueWithoutInvoiceInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutInvoiceInput | ReviewUpdateManyWithWhereWithoutInvoiceInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type InvoiceCreateNestedOneWithoutPaymentsInput = {
    create?: XOR<InvoiceCreateWithoutPaymentsInput, InvoiceUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: InvoiceCreateOrConnectWithoutPaymentsInput
    connect?: InvoiceWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutPaymentsInput = {
    create?: XOR<UserCreateWithoutPaymentsInput, UserUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutPaymentsInput
    connect?: UserWhereUniqueInput
  }

  export type EnumModeOfPaymentFieldUpdateOperationsInput = {
    set?: $Enums.ModeOfPayment
  }

  export type InvoiceUpdateOneRequiredWithoutPaymentsNestedInput = {
    create?: XOR<InvoiceCreateWithoutPaymentsInput, InvoiceUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: InvoiceCreateOrConnectWithoutPaymentsInput
    upsert?: InvoiceUpsertWithoutPaymentsInput
    connect?: InvoiceWhereUniqueInput
    update?: XOR<XOR<InvoiceUpdateToOneWithWhereWithoutPaymentsInput, InvoiceUpdateWithoutPaymentsInput>, InvoiceUncheckedUpdateWithoutPaymentsInput>
  }

  export type UserUpdateOneRequiredWithoutPaymentsNestedInput = {
    create?: XOR<UserCreateWithoutPaymentsInput, UserUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutPaymentsInput
    upsert?: UserUpsertWithoutPaymentsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutPaymentsInput, UserUpdateWithoutPaymentsInput>, UserUncheckedUpdateWithoutPaymentsInput>
  }

  export type OrderCreateNestedOneWithoutFinesInput = {
    create?: XOR<OrderCreateWithoutFinesInput, OrderUncheckedCreateWithoutFinesInput>
    connectOrCreate?: OrderCreateOrConnectWithoutFinesInput
    connect?: OrderWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutFinesInput = {
    create?: XOR<UserCreateWithoutFinesInput, UserUncheckedCreateWithoutFinesInput>
    connectOrCreate?: UserCreateOrConnectWithoutFinesInput
    connect?: UserWhereUniqueInput
  }

  export type InvoiceCreateNestedOneWithoutFinesInput = {
    create?: XOR<InvoiceCreateWithoutFinesInput, InvoiceUncheckedCreateWithoutFinesInput>
    connectOrCreate?: InvoiceCreateOrConnectWithoutFinesInput
    connect?: InvoiceWhereUniqueInput
  }

  export type OrderUpdateOneRequiredWithoutFinesNestedInput = {
    create?: XOR<OrderCreateWithoutFinesInput, OrderUncheckedCreateWithoutFinesInput>
    connectOrCreate?: OrderCreateOrConnectWithoutFinesInput
    upsert?: OrderUpsertWithoutFinesInput
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutFinesInput, OrderUpdateWithoutFinesInput>, OrderUncheckedUpdateWithoutFinesInput>
  }

  export type UserUpdateOneRequiredWithoutFinesNestedInput = {
    create?: XOR<UserCreateWithoutFinesInput, UserUncheckedCreateWithoutFinesInput>
    connectOrCreate?: UserCreateOrConnectWithoutFinesInput
    upsert?: UserUpsertWithoutFinesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutFinesInput, UserUpdateWithoutFinesInput>, UserUncheckedUpdateWithoutFinesInput>
  }

  export type InvoiceUpdateOneWithoutFinesNestedInput = {
    create?: XOR<InvoiceCreateWithoutFinesInput, InvoiceUncheckedCreateWithoutFinesInput>
    connectOrCreate?: InvoiceCreateOrConnectWithoutFinesInput
    upsert?: InvoiceUpsertWithoutFinesInput
    disconnect?: InvoiceWhereInput | boolean
    delete?: InvoiceWhereInput | boolean
    connect?: InvoiceWhereUniqueInput
    update?: XOR<XOR<InvoiceUpdateToOneWithWhereWithoutFinesInput, InvoiceUpdateWithoutFinesInput>, InvoiceUncheckedUpdateWithoutFinesInput>
  }

  export type OrderCreateNestedOneWithoutReviewsInput = {
    create?: XOR<OrderCreateWithoutReviewsInput, OrderUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutReviewsInput
    connect?: OrderWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutReviewsInput = {
    create?: XOR<UserCreateWithoutReviewsInput, UserUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReviewsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutReviewedInput = {
    create?: XOR<UserCreateWithoutReviewedInput, UserUncheckedCreateWithoutReviewedInput>
    connectOrCreate?: UserCreateOrConnectWithoutReviewedInput
    connect?: UserWhereUniqueInput
  }

  export type InvoiceCreateNestedOneWithoutReviewsInput = {
    create?: XOR<InvoiceCreateWithoutReviewsInput, InvoiceUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: InvoiceCreateOrConnectWithoutReviewsInput
    connect?: InvoiceWhereUniqueInput
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type OrderUpdateOneRequiredWithoutReviewsNestedInput = {
    create?: XOR<OrderCreateWithoutReviewsInput, OrderUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutReviewsInput
    upsert?: OrderUpsertWithoutReviewsInput
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutReviewsInput, OrderUpdateWithoutReviewsInput>, OrderUncheckedUpdateWithoutReviewsInput>
  }

  export type UserUpdateOneRequiredWithoutReviewsNestedInput = {
    create?: XOR<UserCreateWithoutReviewsInput, UserUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReviewsInput
    upsert?: UserUpsertWithoutReviewsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReviewsInput, UserUpdateWithoutReviewsInput>, UserUncheckedUpdateWithoutReviewsInput>
  }

  export type UserUpdateOneRequiredWithoutReviewedNestedInput = {
    create?: XOR<UserCreateWithoutReviewedInput, UserUncheckedCreateWithoutReviewedInput>
    connectOrCreate?: UserCreateOrConnectWithoutReviewedInput
    upsert?: UserUpsertWithoutReviewedInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReviewedInput, UserUpdateWithoutReviewedInput>, UserUncheckedUpdateWithoutReviewedInput>
  }

  export type InvoiceUpdateOneWithoutReviewsNestedInput = {
    create?: XOR<InvoiceCreateWithoutReviewsInput, InvoiceUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: InvoiceCreateOrConnectWithoutReviewsInput
    upsert?: InvoiceUpsertWithoutReviewsInput
    disconnect?: InvoiceWhereInput | boolean
    delete?: InvoiceWhereInput | boolean
    connect?: InvoiceWhereUniqueInput
    update?: XOR<XOR<InvoiceUpdateToOneWithWhereWithoutReviewsInput, InvoiceUpdateWithoutReviewsInput>, InvoiceUncheckedUpdateWithoutReviewsInput>
  }

  export type UserCreateNestedOneWithoutNotificationsInput = {
    create?: XOR<UserCreateWithoutNotificationsInput, UserUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotificationsInput
    connect?: UserWhereUniqueInput
  }

  export type OrderCreateNestedOneWithoutNotificationsInput = {
    create?: XOR<OrderCreateWithoutNotificationsInput, OrderUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutNotificationsInput
    connect?: OrderWhereUniqueInput
  }

  export type EnumNotificationTypeFieldUpdateOperationsInput = {
    set?: $Enums.NotificationType
  }

  export type UserUpdateOneRequiredWithoutNotificationsNestedInput = {
    create?: XOR<UserCreateWithoutNotificationsInput, UserUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotificationsInput
    upsert?: UserUpsertWithoutNotificationsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutNotificationsInput, UserUpdateWithoutNotificationsInput>, UserUncheckedUpdateWithoutNotificationsInput>
  }

  export type OrderUpdateOneWithoutNotificationsNestedInput = {
    create?: XOR<OrderCreateWithoutNotificationsInput, OrderUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutNotificationsInput
    upsert?: OrderUpsertWithoutNotificationsInput
    disconnect?: OrderWhereInput | boolean
    delete?: OrderWhereInput | boolean
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutNotificationsInput, OrderUpdateWithoutNotificationsInput>, OrderUncheckedUpdateWithoutNotificationsInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedEnumRoleNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel> | null
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel> | null
    not?: NestedEnumRoleNullableFilter<$PrismaModel> | $Enums.Role | null
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedEnumRoleNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel> | null
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel> | null
    not?: NestedEnumRoleNullableWithAggregatesFilter<$PrismaModel> | $Enums.Role | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumRoleNullableFilter<$PrismaModel>
    _max?: NestedEnumRoleNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumApplicationStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ApplicationStatus | EnumApplicationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ApplicationStatus[] | ListEnumApplicationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ApplicationStatus[] | ListEnumApplicationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumApplicationStatusFilter<$PrismaModel> | $Enums.ApplicationStatus
  }

  export type NestedEnumApplicationStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ApplicationStatus | EnumApplicationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ApplicationStatus[] | ListEnumApplicationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ApplicationStatus[] | ListEnumApplicationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumApplicationStatusWithAggregatesFilter<$PrismaModel> | $Enums.ApplicationStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumApplicationStatusFilter<$PrismaModel>
    _max?: NestedEnumApplicationStatusFilter<$PrismaModel>
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedEnumOrderStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderStatusFilter<$PrismaModel> | $Enums.OrderStatus
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedEnumOrderStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderStatusWithAggregatesFilter<$PrismaModel> | $Enums.OrderStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderStatusFilter<$PrismaModel>
    _max?: NestedEnumOrderStatusFilter<$PrismaModel>
  }

  export type NestedEnumModeOfPaymentFilter<$PrismaModel = never> = {
    equals?: $Enums.ModeOfPayment | EnumModeOfPaymentFieldRefInput<$PrismaModel>
    in?: $Enums.ModeOfPayment[] | ListEnumModeOfPaymentFieldRefInput<$PrismaModel>
    notIn?: $Enums.ModeOfPayment[] | ListEnumModeOfPaymentFieldRefInput<$PrismaModel>
    not?: NestedEnumModeOfPaymentFilter<$PrismaModel> | $Enums.ModeOfPayment
  }

  export type NestedEnumModeOfPaymentWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ModeOfPayment | EnumModeOfPaymentFieldRefInput<$PrismaModel>
    in?: $Enums.ModeOfPayment[] | ListEnumModeOfPaymentFieldRefInput<$PrismaModel>
    notIn?: $Enums.ModeOfPayment[] | ListEnumModeOfPaymentFieldRefInput<$PrismaModel>
    not?: NestedEnumModeOfPaymentWithAggregatesFilter<$PrismaModel> | $Enums.ModeOfPayment
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumModeOfPaymentFilter<$PrismaModel>
    _max?: NestedEnumModeOfPaymentFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumNotificationTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.NotificationType | EnumNotificationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumNotificationTypeFilter<$PrismaModel> | $Enums.NotificationType
  }

  export type NestedEnumNotificationTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.NotificationType | EnumNotificationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumNotificationTypeWithAggregatesFilter<$PrismaModel> | $Enums.NotificationType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumNotificationTypeFilter<$PrismaModel>
    _max?: NestedEnumNotificationTypeFilter<$PrismaModel>
  }

  export type OrderCreateWithoutFreelancerInput = {
    id?: string
    orderId: string
    topic: string
    category?: string | null
    service?: string | null
    sources?: string | null
    citation?: string | null
    pages?: Decimal | DecimalJsLike | number | string | null
    cpp?: number
    amount?: number
    deadline: Date | string
    duration: string
    instructions: string
    attachments?: OrderCreateattachmentsInput | string[]
    additionalNotes?: string | null
    status?: $Enums.OrderStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    bids?: BidsCreateNestedManyWithoutOrderInput
    assignments?: AssignmentCreateNestedManyWithoutOrderInput
    SubmittedJobs?: SubmittedJobsCreateNestedManyWithoutOrderInput
    cancelledJobs?: CancelledJobsCreateNestedManyWithoutOrderInput
    fines?: FinesCreateNestedManyWithoutOrderInput
    reviews?: ReviewCreateNestedManyWithoutOrderInput
    invoice?: InvoiceCreateNestedOneWithoutOrdersInput
    notifications?: NotificationCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutFreelancerInput = {
    id?: string
    orderId: string
    topic: string
    category?: string | null
    service?: string | null
    sources?: string | null
    citation?: string | null
    pages?: Decimal | DecimalJsLike | number | string | null
    cpp?: number
    amount?: number
    deadline: Date | string
    duration: string
    instructions: string
    attachments?: OrderCreateattachmentsInput | string[]
    additionalNotes?: string | null
    status?: $Enums.OrderStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    invoiceId?: string | null
    bids?: BidsUncheckedCreateNestedManyWithoutOrderInput
    assignments?: AssignmentUncheckedCreateNestedManyWithoutOrderInput
    SubmittedJobs?: SubmittedJobsUncheckedCreateNestedManyWithoutOrderInput
    cancelledJobs?: CancelledJobsUncheckedCreateNestedManyWithoutOrderInput
    fines?: FinesUncheckedCreateNestedManyWithoutOrderInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutOrderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutFreelancerInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutFreelancerInput, OrderUncheckedCreateWithoutFreelancerInput>
  }

  export type OrderCreateManyFreelancerInputEnvelope = {
    data: OrderCreateManyFreelancerInput | OrderCreateManyFreelancerInput[]
    skipDuplicates?: boolean
  }

  export type BidsCreateWithoutFreelancerInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: $Enums.OrderStatus
    order: OrderCreateNestedOneWithoutBidsInput
  }

  export type BidsUncheckedCreateWithoutFreelancerInput = {
    id?: string
    orderId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: $Enums.OrderStatus
  }

  export type BidsCreateOrConnectWithoutFreelancerInput = {
    where: BidsWhereUniqueInput
    create: XOR<BidsCreateWithoutFreelancerInput, BidsUncheckedCreateWithoutFreelancerInput>
  }

  export type BidsCreateManyFreelancerInputEnvelope = {
    data: BidsCreateManyFreelancerInput | BidsCreateManyFreelancerInput[]
    skipDuplicates?: boolean
  }

  export type AssignmentCreateWithoutFreelancerInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: $Enums.OrderStatus
    order: OrderCreateNestedOneWithoutAssignmentsInput
  }

  export type AssignmentUncheckedCreateWithoutFreelancerInput = {
    id?: string
    orderId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: $Enums.OrderStatus
  }

  export type AssignmentCreateOrConnectWithoutFreelancerInput = {
    where: AssignmentWhereUniqueInput
    create: XOR<AssignmentCreateWithoutFreelancerInput, AssignmentUncheckedCreateWithoutFreelancerInput>
  }

  export type AssignmentCreateManyFreelancerInputEnvelope = {
    data: AssignmentCreateManyFreelancerInput | AssignmentCreateManyFreelancerInput[]
    skipDuplicates?: boolean
  }

  export type SubmittedJobsCreateWithoutFreelancerInput = {
    id?: string
    file_Path: string
    file_mimeType: string
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: $Enums.OrderStatus
    order: OrderCreateNestedOneWithoutSubmittedJobsInput
  }

  export type SubmittedJobsUncheckedCreateWithoutFreelancerInput = {
    id?: string
    orderId: string
    file_Path: string
    file_mimeType: string
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: $Enums.OrderStatus
  }

  export type SubmittedJobsCreateOrConnectWithoutFreelancerInput = {
    where: SubmittedJobsWhereUniqueInput
    create: XOR<SubmittedJobsCreateWithoutFreelancerInput, SubmittedJobsUncheckedCreateWithoutFreelancerInput>
  }

  export type SubmittedJobsCreateManyFreelancerInputEnvelope = {
    data: SubmittedJobsCreateManyFreelancerInput | SubmittedJobsCreateManyFreelancerInput[]
    skipDuplicates?: boolean
  }

  export type CancelledJobsCreateWithoutFreelancerInput = {
    id?: string
    attachments?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: $Enums.OrderStatus
    order: OrderCreateNestedOneWithoutCancelledJobsInput
  }

  export type CancelledJobsUncheckedCreateWithoutFreelancerInput = {
    id?: string
    orderId: string
    attachments?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: $Enums.OrderStatus
  }

  export type CancelledJobsCreateOrConnectWithoutFreelancerInput = {
    where: CancelledJobsWhereUniqueInput
    create: XOR<CancelledJobsCreateWithoutFreelancerInput, CancelledJobsUncheckedCreateWithoutFreelancerInput>
  }

  export type CancelledJobsCreateManyFreelancerInputEnvelope = {
    data: CancelledJobsCreateManyFreelancerInput | CancelledJobsCreateManyFreelancerInput[]
    skipDuplicates?: boolean
  }

  export type InvoiceCreateWithoutUserInput = {
    id?: string
    invoiceNumber: string
    createdAt?: Date | string
    updatedAt?: Date | string
    totalAmount?: number
    finalAmount?: number
    isDraft?: boolean
    orders?: OrderCreateNestedManyWithoutInvoiceInput
    payments?: PaymentCreateNestedManyWithoutInvoiceInput
    fines?: FinesCreateNestedManyWithoutInvoiceInput
    reviews?: ReviewCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceUncheckedCreateWithoutUserInput = {
    id?: string
    invoiceNumber: string
    createdAt?: Date | string
    updatedAt?: Date | string
    totalAmount?: number
    finalAmount?: number
    isDraft?: boolean
    orders?: OrderUncheckedCreateNestedManyWithoutInvoiceInput
    payments?: PaymentUncheckedCreateNestedManyWithoutInvoiceInput
    fines?: FinesUncheckedCreateNestedManyWithoutInvoiceInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceCreateOrConnectWithoutUserInput = {
    where: InvoiceWhereUniqueInput
    create: XOR<InvoiceCreateWithoutUserInput, InvoiceUncheckedCreateWithoutUserInput>
  }

  export type InvoiceCreateManyUserInputEnvelope = {
    data: InvoiceCreateManyUserInput | InvoiceCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type PaymentCreateWithoutUserInput = {
    id?: string
    paymentRef: string
    amount: number
    modeOfPayment: $Enums.ModeOfPayment
    createdAt?: Date | string
    updatedAt?: Date | string
    invoice: InvoiceCreateNestedOneWithoutPaymentsInput
  }

  export type PaymentUncheckedCreateWithoutUserInput = {
    id?: string
    paymentRef: string
    amount: number
    modeOfPayment: $Enums.ModeOfPayment
    createdAt?: Date | string
    updatedAt?: Date | string
    invoiceId: string
  }

  export type PaymentCreateOrConnectWithoutUserInput = {
    where: PaymentWhereUniqueInput
    create: XOR<PaymentCreateWithoutUserInput, PaymentUncheckedCreateWithoutUserInput>
  }

  export type PaymentCreateManyUserInputEnvelope = {
    data: PaymentCreateManyUserInput | PaymentCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type FinesCreateWithoutFreelancerInput = {
    id?: string
    amount: number
    reason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    order: OrderCreateNestedOneWithoutFinesInput
    invoice?: InvoiceCreateNestedOneWithoutFinesInput
  }

  export type FinesUncheckedCreateWithoutFreelancerInput = {
    id?: string
    orderId: string
    amount: number
    reason?: string | null
    invoiceId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FinesCreateOrConnectWithoutFreelancerInput = {
    where: FinesWhereUniqueInput
    create: XOR<FinesCreateWithoutFreelancerInput, FinesUncheckedCreateWithoutFreelancerInput>
  }

  export type FinesCreateManyFreelancerInputEnvelope = {
    data: FinesCreateManyFreelancerInput | FinesCreateManyFreelancerInput[]
    skipDuplicates?: boolean
  }

  export type ReviewCreateWithoutReviewerInput = {
    id?: string
    rating?: number | null
    comment?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    order: OrderCreateNestedOneWithoutReviewsInput
    freelancer: UserCreateNestedOneWithoutReviewedInput
    invoice?: InvoiceCreateNestedOneWithoutReviewsInput
  }

  export type ReviewUncheckedCreateWithoutReviewerInput = {
    id?: string
    orderId: string
    freelancerId: string
    rating?: number | null
    comment?: string | null
    invoiceId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReviewCreateOrConnectWithoutReviewerInput = {
    where: ReviewWhereUniqueInput
    create: XOR<ReviewCreateWithoutReviewerInput, ReviewUncheckedCreateWithoutReviewerInput>
  }

  export type ReviewCreateManyReviewerInputEnvelope = {
    data: ReviewCreateManyReviewerInput | ReviewCreateManyReviewerInput[]
    skipDuplicates?: boolean
  }

  export type ReviewCreateWithoutFreelancerInput = {
    id?: string
    rating?: number | null
    comment?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    order: OrderCreateNestedOneWithoutReviewsInput
    reviewer: UserCreateNestedOneWithoutReviewsInput
    invoice?: InvoiceCreateNestedOneWithoutReviewsInput
  }

  export type ReviewUncheckedCreateWithoutFreelancerInput = {
    id?: string
    orderId: string
    reviewerId: string
    rating?: number | null
    comment?: string | null
    invoiceId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReviewCreateOrConnectWithoutFreelancerInput = {
    where: ReviewWhereUniqueInput
    create: XOR<ReviewCreateWithoutFreelancerInput, ReviewUncheckedCreateWithoutFreelancerInput>
  }

  export type ReviewCreateManyFreelancerInputEnvelope = {
    data: ReviewCreateManyFreelancerInput | ReviewCreateManyFreelancerInput[]
    skipDuplicates?: boolean
  }

  export type NotificationCreateWithoutUserInput = {
    id?: string
    title?: string | null
    message?: string | null
    read?: boolean
    type: $Enums.NotificationType
    createdAt?: Date | string
    updatedAt?: Date | string
    order?: OrderCreateNestedOneWithoutNotificationsInput
  }

  export type NotificationUncheckedCreateWithoutUserInput = {
    id?: string
    orderId?: string | null
    title?: string | null
    message?: string | null
    read?: boolean
    type: $Enums.NotificationType
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type NotificationCreateOrConnectWithoutUserInput = {
    where: NotificationWhereUniqueInput
    create: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput>
  }

  export type NotificationCreateManyUserInputEnvelope = {
    data: NotificationCreateManyUserInput | NotificationCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type FreelancerApplicationCreateWithoutUserInput = {
    id?: string
    status?: $Enums.ApplicationStatus
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FreelancerApplicationUncheckedCreateWithoutUserInput = {
    id?: string
    status?: $Enums.ApplicationStatus
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FreelancerApplicationCreateOrConnectWithoutUserInput = {
    where: FreelancerApplicationWhereUniqueInput
    create: XOR<FreelancerApplicationCreateWithoutUserInput, FreelancerApplicationUncheckedCreateWithoutUserInput>
  }

  export type FreelancerApplicationCreateManyUserInputEnvelope = {
    data: FreelancerApplicationCreateManyUserInput | FreelancerApplicationCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type OrderUpsertWithWhereUniqueWithoutFreelancerInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutFreelancerInput, OrderUncheckedUpdateWithoutFreelancerInput>
    create: XOR<OrderCreateWithoutFreelancerInput, OrderUncheckedCreateWithoutFreelancerInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutFreelancerInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutFreelancerInput, OrderUncheckedUpdateWithoutFreelancerInput>
  }

  export type OrderUpdateManyWithWhereWithoutFreelancerInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutFreelancerInput>
  }

  export type OrderScalarWhereInput = {
    AND?: OrderScalarWhereInput | OrderScalarWhereInput[]
    OR?: OrderScalarWhereInput[]
    NOT?: OrderScalarWhereInput | OrderScalarWhereInput[]
    id?: StringFilter<"Order"> | string
    orderId?: StringFilter<"Order"> | string
    topic?: StringFilter<"Order"> | string
    category?: StringNullableFilter<"Order"> | string | null
    service?: StringNullableFilter<"Order"> | string | null
    sources?: StringNullableFilter<"Order"> | string | null
    citation?: StringNullableFilter<"Order"> | string | null
    pages?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    cpp?: IntFilter<"Order"> | number
    amount?: IntFilter<"Order"> | number
    deadline?: DateTimeFilter<"Order"> | Date | string
    duration?: StringFilter<"Order"> | string
    instructions?: StringFilter<"Order"> | string
    attachments?: StringNullableListFilter<"Order">
    additionalNotes?: StringNullableFilter<"Order"> | string | null
    status?: EnumOrderStatusFilter<"Order"> | $Enums.OrderStatus
    createdAt?: DateTimeFilter<"Order"> | Date | string
    updatedAt?: DateTimeFilter<"Order"> | Date | string
    freelancerId?: StringNullableFilter<"Order"> | string | null
    invoiceId?: StringNullableFilter<"Order"> | string | null
  }

  export type BidsUpsertWithWhereUniqueWithoutFreelancerInput = {
    where: BidsWhereUniqueInput
    update: XOR<BidsUpdateWithoutFreelancerInput, BidsUncheckedUpdateWithoutFreelancerInput>
    create: XOR<BidsCreateWithoutFreelancerInput, BidsUncheckedCreateWithoutFreelancerInput>
  }

  export type BidsUpdateWithWhereUniqueWithoutFreelancerInput = {
    where: BidsWhereUniqueInput
    data: XOR<BidsUpdateWithoutFreelancerInput, BidsUncheckedUpdateWithoutFreelancerInput>
  }

  export type BidsUpdateManyWithWhereWithoutFreelancerInput = {
    where: BidsScalarWhereInput
    data: XOR<BidsUpdateManyMutationInput, BidsUncheckedUpdateManyWithoutFreelancerInput>
  }

  export type BidsScalarWhereInput = {
    AND?: BidsScalarWhereInput | BidsScalarWhereInput[]
    OR?: BidsScalarWhereInput[]
    NOT?: BidsScalarWhereInput | BidsScalarWhereInput[]
    id?: StringFilter<"Bids"> | string
    orderId?: StringFilter<"Bids"> | string
    freelancerId?: StringFilter<"Bids"> | string
    createdAt?: DateTimeFilter<"Bids"> | Date | string
    updatedAt?: DateTimeFilter<"Bids"> | Date | string
    status?: EnumOrderStatusFilter<"Bids"> | $Enums.OrderStatus
  }

  export type AssignmentUpsertWithWhereUniqueWithoutFreelancerInput = {
    where: AssignmentWhereUniqueInput
    update: XOR<AssignmentUpdateWithoutFreelancerInput, AssignmentUncheckedUpdateWithoutFreelancerInput>
    create: XOR<AssignmentCreateWithoutFreelancerInput, AssignmentUncheckedCreateWithoutFreelancerInput>
  }

  export type AssignmentUpdateWithWhereUniqueWithoutFreelancerInput = {
    where: AssignmentWhereUniqueInput
    data: XOR<AssignmentUpdateWithoutFreelancerInput, AssignmentUncheckedUpdateWithoutFreelancerInput>
  }

  export type AssignmentUpdateManyWithWhereWithoutFreelancerInput = {
    where: AssignmentScalarWhereInput
    data: XOR<AssignmentUpdateManyMutationInput, AssignmentUncheckedUpdateManyWithoutFreelancerInput>
  }

  export type AssignmentScalarWhereInput = {
    AND?: AssignmentScalarWhereInput | AssignmentScalarWhereInput[]
    OR?: AssignmentScalarWhereInput[]
    NOT?: AssignmentScalarWhereInput | AssignmentScalarWhereInput[]
    id?: StringFilter<"Assignment"> | string
    orderId?: StringFilter<"Assignment"> | string
    freelancerId?: StringFilter<"Assignment"> | string
    createdAt?: DateTimeFilter<"Assignment"> | Date | string
    updatedAt?: DateTimeFilter<"Assignment"> | Date | string
    status?: EnumOrderStatusFilter<"Assignment"> | $Enums.OrderStatus
  }

  export type SubmittedJobsUpsertWithWhereUniqueWithoutFreelancerInput = {
    where: SubmittedJobsWhereUniqueInput
    update: XOR<SubmittedJobsUpdateWithoutFreelancerInput, SubmittedJobsUncheckedUpdateWithoutFreelancerInput>
    create: XOR<SubmittedJobsCreateWithoutFreelancerInput, SubmittedJobsUncheckedCreateWithoutFreelancerInput>
  }

  export type SubmittedJobsUpdateWithWhereUniqueWithoutFreelancerInput = {
    where: SubmittedJobsWhereUniqueInput
    data: XOR<SubmittedJobsUpdateWithoutFreelancerInput, SubmittedJobsUncheckedUpdateWithoutFreelancerInput>
  }

  export type SubmittedJobsUpdateManyWithWhereWithoutFreelancerInput = {
    where: SubmittedJobsScalarWhereInput
    data: XOR<SubmittedJobsUpdateManyMutationInput, SubmittedJobsUncheckedUpdateManyWithoutFreelancerInput>
  }

  export type SubmittedJobsScalarWhereInput = {
    AND?: SubmittedJobsScalarWhereInput | SubmittedJobsScalarWhereInput[]
    OR?: SubmittedJobsScalarWhereInput[]
    NOT?: SubmittedJobsScalarWhereInput | SubmittedJobsScalarWhereInput[]
    id?: StringFilter<"SubmittedJobs"> | string
    orderId?: StringFilter<"SubmittedJobs"> | string
    freelancerId?: StringFilter<"SubmittedJobs"> | string
    file_Path?: StringFilter<"SubmittedJobs"> | string
    file_mimeType?: StringFilter<"SubmittedJobs"> | string
    createdAt?: DateTimeFilter<"SubmittedJobs"> | Date | string
    updatedAt?: DateTimeFilter<"SubmittedJobs"> | Date | string
    status?: EnumOrderStatusFilter<"SubmittedJobs"> | $Enums.OrderStatus
  }

  export type CancelledJobsUpsertWithWhereUniqueWithoutFreelancerInput = {
    where: CancelledJobsWhereUniqueInput
    update: XOR<CancelledJobsUpdateWithoutFreelancerInput, CancelledJobsUncheckedUpdateWithoutFreelancerInput>
    create: XOR<CancelledJobsCreateWithoutFreelancerInput, CancelledJobsUncheckedCreateWithoutFreelancerInput>
  }

  export type CancelledJobsUpdateWithWhereUniqueWithoutFreelancerInput = {
    where: CancelledJobsWhereUniqueInput
    data: XOR<CancelledJobsUpdateWithoutFreelancerInput, CancelledJobsUncheckedUpdateWithoutFreelancerInput>
  }

  export type CancelledJobsUpdateManyWithWhereWithoutFreelancerInput = {
    where: CancelledJobsScalarWhereInput
    data: XOR<CancelledJobsUpdateManyMutationInput, CancelledJobsUncheckedUpdateManyWithoutFreelancerInput>
  }

  export type CancelledJobsScalarWhereInput = {
    AND?: CancelledJobsScalarWhereInput | CancelledJobsScalarWhereInput[]
    OR?: CancelledJobsScalarWhereInput[]
    NOT?: CancelledJobsScalarWhereInput | CancelledJobsScalarWhereInput[]
    id?: StringFilter<"CancelledJobs"> | string
    orderId?: StringFilter<"CancelledJobs"> | string
    freelancerId?: StringFilter<"CancelledJobs"> | string
    attachments?: StringNullableFilter<"CancelledJobs"> | string | null
    createdAt?: DateTimeFilter<"CancelledJobs"> | Date | string
    updatedAt?: DateTimeFilter<"CancelledJobs"> | Date | string
    status?: EnumOrderStatusFilter<"CancelledJobs"> | $Enums.OrderStatus
  }

  export type InvoiceUpsertWithWhereUniqueWithoutUserInput = {
    where: InvoiceWhereUniqueInput
    update: XOR<InvoiceUpdateWithoutUserInput, InvoiceUncheckedUpdateWithoutUserInput>
    create: XOR<InvoiceCreateWithoutUserInput, InvoiceUncheckedCreateWithoutUserInput>
  }

  export type InvoiceUpdateWithWhereUniqueWithoutUserInput = {
    where: InvoiceWhereUniqueInput
    data: XOR<InvoiceUpdateWithoutUserInput, InvoiceUncheckedUpdateWithoutUserInput>
  }

  export type InvoiceUpdateManyWithWhereWithoutUserInput = {
    where: InvoiceScalarWhereInput
    data: XOR<InvoiceUpdateManyMutationInput, InvoiceUncheckedUpdateManyWithoutUserInput>
  }

  export type InvoiceScalarWhereInput = {
    AND?: InvoiceScalarWhereInput | InvoiceScalarWhereInput[]
    OR?: InvoiceScalarWhereInput[]
    NOT?: InvoiceScalarWhereInput | InvoiceScalarWhereInput[]
    id?: StringFilter<"Invoice"> | string
    invoiceNumber?: StringFilter<"Invoice"> | string
    createdAt?: DateTimeFilter<"Invoice"> | Date | string
    updatedAt?: DateTimeFilter<"Invoice"> | Date | string
    totalAmount?: IntFilter<"Invoice"> | number
    finalAmount?: IntFilter<"Invoice"> | number
    userId?: StringFilter<"Invoice"> | string
    isDraft?: BoolFilter<"Invoice"> | boolean
  }

  export type PaymentUpsertWithWhereUniqueWithoutUserInput = {
    where: PaymentWhereUniqueInput
    update: XOR<PaymentUpdateWithoutUserInput, PaymentUncheckedUpdateWithoutUserInput>
    create: XOR<PaymentCreateWithoutUserInput, PaymentUncheckedCreateWithoutUserInput>
  }

  export type PaymentUpdateWithWhereUniqueWithoutUserInput = {
    where: PaymentWhereUniqueInput
    data: XOR<PaymentUpdateWithoutUserInput, PaymentUncheckedUpdateWithoutUserInput>
  }

  export type PaymentUpdateManyWithWhereWithoutUserInput = {
    where: PaymentScalarWhereInput
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyWithoutUserInput>
  }

  export type PaymentScalarWhereInput = {
    AND?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
    OR?: PaymentScalarWhereInput[]
    NOT?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
    id?: StringFilter<"Payment"> | string
    paymentRef?: StringFilter<"Payment"> | string
    amount?: IntFilter<"Payment"> | number
    modeOfPayment?: EnumModeOfPaymentFilter<"Payment"> | $Enums.ModeOfPayment
    createdAt?: DateTimeFilter<"Payment"> | Date | string
    updatedAt?: DateTimeFilter<"Payment"> | Date | string
    invoiceId?: StringFilter<"Payment"> | string
    userId?: StringFilter<"Payment"> | string
  }

  export type FinesUpsertWithWhereUniqueWithoutFreelancerInput = {
    where: FinesWhereUniqueInput
    update: XOR<FinesUpdateWithoutFreelancerInput, FinesUncheckedUpdateWithoutFreelancerInput>
    create: XOR<FinesCreateWithoutFreelancerInput, FinesUncheckedCreateWithoutFreelancerInput>
  }

  export type FinesUpdateWithWhereUniqueWithoutFreelancerInput = {
    where: FinesWhereUniqueInput
    data: XOR<FinesUpdateWithoutFreelancerInput, FinesUncheckedUpdateWithoutFreelancerInput>
  }

  export type FinesUpdateManyWithWhereWithoutFreelancerInput = {
    where: FinesScalarWhereInput
    data: XOR<FinesUpdateManyMutationInput, FinesUncheckedUpdateManyWithoutFreelancerInput>
  }

  export type FinesScalarWhereInput = {
    AND?: FinesScalarWhereInput | FinesScalarWhereInput[]
    OR?: FinesScalarWhereInput[]
    NOT?: FinesScalarWhereInput | FinesScalarWhereInput[]
    id?: StringFilter<"Fines"> | string
    orderId?: StringFilter<"Fines"> | string
    freelancerId?: StringFilter<"Fines"> | string
    amount?: IntFilter<"Fines"> | number
    reason?: StringNullableFilter<"Fines"> | string | null
    invoiceId?: StringNullableFilter<"Fines"> | string | null
    createdAt?: DateTimeFilter<"Fines"> | Date | string
    updatedAt?: DateTimeFilter<"Fines"> | Date | string
  }

  export type ReviewUpsertWithWhereUniqueWithoutReviewerInput = {
    where: ReviewWhereUniqueInput
    update: XOR<ReviewUpdateWithoutReviewerInput, ReviewUncheckedUpdateWithoutReviewerInput>
    create: XOR<ReviewCreateWithoutReviewerInput, ReviewUncheckedCreateWithoutReviewerInput>
  }

  export type ReviewUpdateWithWhereUniqueWithoutReviewerInput = {
    where: ReviewWhereUniqueInput
    data: XOR<ReviewUpdateWithoutReviewerInput, ReviewUncheckedUpdateWithoutReviewerInput>
  }

  export type ReviewUpdateManyWithWhereWithoutReviewerInput = {
    where: ReviewScalarWhereInput
    data: XOR<ReviewUpdateManyMutationInput, ReviewUncheckedUpdateManyWithoutReviewerInput>
  }

  export type ReviewScalarWhereInput = {
    AND?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
    OR?: ReviewScalarWhereInput[]
    NOT?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
    id?: StringFilter<"Review"> | string
    orderId?: StringFilter<"Review"> | string
    reviewerId?: StringFilter<"Review"> | string
    freelancerId?: StringFilter<"Review"> | string
    rating?: IntNullableFilter<"Review"> | number | null
    comment?: StringNullableFilter<"Review"> | string | null
    invoiceId?: StringNullableFilter<"Review"> | string | null
    createdAt?: DateTimeFilter<"Review"> | Date | string
    updatedAt?: DateTimeFilter<"Review"> | Date | string
  }

  export type ReviewUpsertWithWhereUniqueWithoutFreelancerInput = {
    where: ReviewWhereUniqueInput
    update: XOR<ReviewUpdateWithoutFreelancerInput, ReviewUncheckedUpdateWithoutFreelancerInput>
    create: XOR<ReviewCreateWithoutFreelancerInput, ReviewUncheckedCreateWithoutFreelancerInput>
  }

  export type ReviewUpdateWithWhereUniqueWithoutFreelancerInput = {
    where: ReviewWhereUniqueInput
    data: XOR<ReviewUpdateWithoutFreelancerInput, ReviewUncheckedUpdateWithoutFreelancerInput>
  }

  export type ReviewUpdateManyWithWhereWithoutFreelancerInput = {
    where: ReviewScalarWhereInput
    data: XOR<ReviewUpdateManyMutationInput, ReviewUncheckedUpdateManyWithoutFreelancerInput>
  }

  export type NotificationUpsertWithWhereUniqueWithoutUserInput = {
    where: NotificationWhereUniqueInput
    update: XOR<NotificationUpdateWithoutUserInput, NotificationUncheckedUpdateWithoutUserInput>
    create: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput>
  }

  export type NotificationUpdateWithWhereUniqueWithoutUserInput = {
    where: NotificationWhereUniqueInput
    data: XOR<NotificationUpdateWithoutUserInput, NotificationUncheckedUpdateWithoutUserInput>
  }

  export type NotificationUpdateManyWithWhereWithoutUserInput = {
    where: NotificationScalarWhereInput
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyWithoutUserInput>
  }

  export type NotificationScalarWhereInput = {
    AND?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
    OR?: NotificationScalarWhereInput[]
    NOT?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
    id?: StringFilter<"Notification"> | string
    userId?: StringFilter<"Notification"> | string
    orderId?: StringNullableFilter<"Notification"> | string | null
    title?: StringNullableFilter<"Notification"> | string | null
    message?: StringNullableFilter<"Notification"> | string | null
    read?: BoolFilter<"Notification"> | boolean
    type?: EnumNotificationTypeFilter<"Notification"> | $Enums.NotificationType
    createdAt?: DateTimeFilter<"Notification"> | Date | string
    updatedAt?: DateTimeFilter<"Notification"> | Date | string
  }

  export type FreelancerApplicationUpsertWithWhereUniqueWithoutUserInput = {
    where: FreelancerApplicationWhereUniqueInput
    update: XOR<FreelancerApplicationUpdateWithoutUserInput, FreelancerApplicationUncheckedUpdateWithoutUserInput>
    create: XOR<FreelancerApplicationCreateWithoutUserInput, FreelancerApplicationUncheckedCreateWithoutUserInput>
  }

  export type FreelancerApplicationUpdateWithWhereUniqueWithoutUserInput = {
    where: FreelancerApplicationWhereUniqueInput
    data: XOR<FreelancerApplicationUpdateWithoutUserInput, FreelancerApplicationUncheckedUpdateWithoutUserInput>
  }

  export type FreelancerApplicationUpdateManyWithWhereWithoutUserInput = {
    where: FreelancerApplicationScalarWhereInput
    data: XOR<FreelancerApplicationUpdateManyMutationInput, FreelancerApplicationUncheckedUpdateManyWithoutUserInput>
  }

  export type FreelancerApplicationScalarWhereInput = {
    AND?: FreelancerApplicationScalarWhereInput | FreelancerApplicationScalarWhereInput[]
    OR?: FreelancerApplicationScalarWhereInput[]
    NOT?: FreelancerApplicationScalarWhereInput | FreelancerApplicationScalarWhereInput[]
    id?: StringFilter<"FreelancerApplication"> | string
    userId?: StringFilter<"FreelancerApplication"> | string
    status?: EnumApplicationStatusFilter<"FreelancerApplication"> | $Enums.ApplicationStatus
    createdAt?: DateTimeFilter<"FreelancerApplication"> | Date | string
    updatedAt?: DateTimeFilter<"FreelancerApplication"> | Date | string
  }

  export type UserCreateWithoutFreelancerApplicationsInput = {
    id?: string
    fname: string
    lname: string
    email: string
    password: string
    role?: $Enums.Role | null
    profilePic?: string | null
    refreshToken?: string | null
    refreshTokenExp?: Date | string | null
    online?: boolean
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    experience?: string | null
    leadershipStyle?: string | null
    teamSize?: string | null
    achievements?: string | null
    professionalDevelopment?: string | null
    gender?: string | null
    country?: string | null
    city?: string | null
    altEmail?: string | null
    phone?: string | null
    altPhone?: string | null
    highestDegree?: string | null
    citationStyles?: string | null
    languages?: string | null
    disciplines?: string | null
    specialization?: string | null
    additionalSoftware?: string | null
    aboutMe?: string | null
    orders?: OrderCreateNestedManyWithoutFreelancerInput
    bids?: BidsCreateNestedManyWithoutFreelancerInput
    assignments?: AssignmentCreateNestedManyWithoutFreelancerInput
    SubmittedJobs?: SubmittedJobsCreateNestedManyWithoutFreelancerInput
    cancelledJobs?: CancelledJobsCreateNestedManyWithoutFreelancerInput
    invoices?: InvoiceCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    fines?: FinesCreateNestedManyWithoutFreelancerInput
    reviews?: ReviewCreateNestedManyWithoutReviewerInput
    reviewed?: ReviewCreateNestedManyWithoutFreelancerInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutFreelancerApplicationsInput = {
    id?: string
    fname: string
    lname: string
    email: string
    password: string
    role?: $Enums.Role | null
    profilePic?: string | null
    refreshToken?: string | null
    refreshTokenExp?: Date | string | null
    online?: boolean
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    experience?: string | null
    leadershipStyle?: string | null
    teamSize?: string | null
    achievements?: string | null
    professionalDevelopment?: string | null
    gender?: string | null
    country?: string | null
    city?: string | null
    altEmail?: string | null
    phone?: string | null
    altPhone?: string | null
    highestDegree?: string | null
    citationStyles?: string | null
    languages?: string | null
    disciplines?: string | null
    specialization?: string | null
    additionalSoftware?: string | null
    aboutMe?: string | null
    orders?: OrderUncheckedCreateNestedManyWithoutFreelancerInput
    bids?: BidsUncheckedCreateNestedManyWithoutFreelancerInput
    assignments?: AssignmentUncheckedCreateNestedManyWithoutFreelancerInput
    SubmittedJobs?: SubmittedJobsUncheckedCreateNestedManyWithoutFreelancerInput
    cancelledJobs?: CancelledJobsUncheckedCreateNestedManyWithoutFreelancerInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    fines?: FinesUncheckedCreateNestedManyWithoutFreelancerInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutReviewerInput
    reviewed?: ReviewUncheckedCreateNestedManyWithoutFreelancerInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutFreelancerApplicationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFreelancerApplicationsInput, UserUncheckedCreateWithoutFreelancerApplicationsInput>
  }

  export type UserUpsertWithoutFreelancerApplicationsInput = {
    update: XOR<UserUpdateWithoutFreelancerApplicationsInput, UserUncheckedUpdateWithoutFreelancerApplicationsInput>
    create: XOR<UserCreateWithoutFreelancerApplicationsInput, UserUncheckedCreateWithoutFreelancerApplicationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutFreelancerApplicationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutFreelancerApplicationsInput, UserUncheckedUpdateWithoutFreelancerApplicationsInput>
  }

  export type UserUpdateWithoutFreelancerApplicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    fname?: StringFieldUpdateOperationsInput | string
    lname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableEnumRoleFieldUpdateOperationsInput | $Enums.Role | null
    profilePic?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshTokenExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    online?: BoolFieldUpdateOperationsInput | boolean
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    leadershipStyle?: NullableStringFieldUpdateOperationsInput | string | null
    teamSize?: NullableStringFieldUpdateOperationsInput | string | null
    achievements?: NullableStringFieldUpdateOperationsInput | string | null
    professionalDevelopment?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    altEmail?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    altPhone?: NullableStringFieldUpdateOperationsInput | string | null
    highestDegree?: NullableStringFieldUpdateOperationsInput | string | null
    citationStyles?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    disciplines?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    additionalSoftware?: NullableStringFieldUpdateOperationsInput | string | null
    aboutMe?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: OrderUpdateManyWithoutFreelancerNestedInput
    bids?: BidsUpdateManyWithoutFreelancerNestedInput
    assignments?: AssignmentUpdateManyWithoutFreelancerNestedInput
    SubmittedJobs?: SubmittedJobsUpdateManyWithoutFreelancerNestedInput
    cancelledJobs?: CancelledJobsUpdateManyWithoutFreelancerNestedInput
    invoices?: InvoiceUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    fines?: FinesUpdateManyWithoutFreelancerNestedInput
    reviews?: ReviewUpdateManyWithoutReviewerNestedInput
    reviewed?: ReviewUpdateManyWithoutFreelancerNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutFreelancerApplicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    fname?: StringFieldUpdateOperationsInput | string
    lname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableEnumRoleFieldUpdateOperationsInput | $Enums.Role | null
    profilePic?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshTokenExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    online?: BoolFieldUpdateOperationsInput | boolean
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    leadershipStyle?: NullableStringFieldUpdateOperationsInput | string | null
    teamSize?: NullableStringFieldUpdateOperationsInput | string | null
    achievements?: NullableStringFieldUpdateOperationsInput | string | null
    professionalDevelopment?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    altEmail?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    altPhone?: NullableStringFieldUpdateOperationsInput | string | null
    highestDegree?: NullableStringFieldUpdateOperationsInput | string | null
    citationStyles?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    disciplines?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    additionalSoftware?: NullableStringFieldUpdateOperationsInput | string | null
    aboutMe?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: OrderUncheckedUpdateManyWithoutFreelancerNestedInput
    bids?: BidsUncheckedUpdateManyWithoutFreelancerNestedInput
    assignments?: AssignmentUncheckedUpdateManyWithoutFreelancerNestedInput
    SubmittedJobs?: SubmittedJobsUncheckedUpdateManyWithoutFreelancerNestedInput
    cancelledJobs?: CancelledJobsUncheckedUpdateManyWithoutFreelancerNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    fines?: FinesUncheckedUpdateManyWithoutFreelancerNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutReviewerNestedInput
    reviewed?: ReviewUncheckedUpdateManyWithoutFreelancerNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutOrdersInput = {
    id?: string
    fname: string
    lname: string
    email: string
    password: string
    role?: $Enums.Role | null
    profilePic?: string | null
    refreshToken?: string | null
    refreshTokenExp?: Date | string | null
    online?: boolean
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    experience?: string | null
    leadershipStyle?: string | null
    teamSize?: string | null
    achievements?: string | null
    professionalDevelopment?: string | null
    gender?: string | null
    country?: string | null
    city?: string | null
    altEmail?: string | null
    phone?: string | null
    altPhone?: string | null
    highestDegree?: string | null
    citationStyles?: string | null
    languages?: string | null
    disciplines?: string | null
    specialization?: string | null
    additionalSoftware?: string | null
    aboutMe?: string | null
    bids?: BidsCreateNestedManyWithoutFreelancerInput
    assignments?: AssignmentCreateNestedManyWithoutFreelancerInput
    SubmittedJobs?: SubmittedJobsCreateNestedManyWithoutFreelancerInput
    cancelledJobs?: CancelledJobsCreateNestedManyWithoutFreelancerInput
    invoices?: InvoiceCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    fines?: FinesCreateNestedManyWithoutFreelancerInput
    reviews?: ReviewCreateNestedManyWithoutReviewerInput
    reviewed?: ReviewCreateNestedManyWithoutFreelancerInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    freelancerApplications?: FreelancerApplicationCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutOrdersInput = {
    id?: string
    fname: string
    lname: string
    email: string
    password: string
    role?: $Enums.Role | null
    profilePic?: string | null
    refreshToken?: string | null
    refreshTokenExp?: Date | string | null
    online?: boolean
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    experience?: string | null
    leadershipStyle?: string | null
    teamSize?: string | null
    achievements?: string | null
    professionalDevelopment?: string | null
    gender?: string | null
    country?: string | null
    city?: string | null
    altEmail?: string | null
    phone?: string | null
    altPhone?: string | null
    highestDegree?: string | null
    citationStyles?: string | null
    languages?: string | null
    disciplines?: string | null
    specialization?: string | null
    additionalSoftware?: string | null
    aboutMe?: string | null
    bids?: BidsUncheckedCreateNestedManyWithoutFreelancerInput
    assignments?: AssignmentUncheckedCreateNestedManyWithoutFreelancerInput
    SubmittedJobs?: SubmittedJobsUncheckedCreateNestedManyWithoutFreelancerInput
    cancelledJobs?: CancelledJobsUncheckedCreateNestedManyWithoutFreelancerInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    fines?: FinesUncheckedCreateNestedManyWithoutFreelancerInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutReviewerInput
    reviewed?: ReviewUncheckedCreateNestedManyWithoutFreelancerInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    freelancerApplications?: FreelancerApplicationUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutOrdersInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutOrdersInput, UserUncheckedCreateWithoutOrdersInput>
  }

  export type BidsCreateWithoutOrderInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: $Enums.OrderStatus
    freelancer: UserCreateNestedOneWithoutBidsInput
  }

  export type BidsUncheckedCreateWithoutOrderInput = {
    id?: string
    freelancerId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: $Enums.OrderStatus
  }

  export type BidsCreateOrConnectWithoutOrderInput = {
    where: BidsWhereUniqueInput
    create: XOR<BidsCreateWithoutOrderInput, BidsUncheckedCreateWithoutOrderInput>
  }

  export type BidsCreateManyOrderInputEnvelope = {
    data: BidsCreateManyOrderInput | BidsCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type AssignmentCreateWithoutOrderInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: $Enums.OrderStatus
    freelancer: UserCreateNestedOneWithoutAssignmentsInput
  }

  export type AssignmentUncheckedCreateWithoutOrderInput = {
    id?: string
    freelancerId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: $Enums.OrderStatus
  }

  export type AssignmentCreateOrConnectWithoutOrderInput = {
    where: AssignmentWhereUniqueInput
    create: XOR<AssignmentCreateWithoutOrderInput, AssignmentUncheckedCreateWithoutOrderInput>
  }

  export type AssignmentCreateManyOrderInputEnvelope = {
    data: AssignmentCreateManyOrderInput | AssignmentCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type SubmittedJobsCreateWithoutOrderInput = {
    id?: string
    file_Path: string
    file_mimeType: string
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: $Enums.OrderStatus
    freelancer: UserCreateNestedOneWithoutSubmittedJobsInput
  }

  export type SubmittedJobsUncheckedCreateWithoutOrderInput = {
    id?: string
    freelancerId: string
    file_Path: string
    file_mimeType: string
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: $Enums.OrderStatus
  }

  export type SubmittedJobsCreateOrConnectWithoutOrderInput = {
    where: SubmittedJobsWhereUniqueInput
    create: XOR<SubmittedJobsCreateWithoutOrderInput, SubmittedJobsUncheckedCreateWithoutOrderInput>
  }

  export type SubmittedJobsCreateManyOrderInputEnvelope = {
    data: SubmittedJobsCreateManyOrderInput | SubmittedJobsCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type CancelledJobsCreateWithoutOrderInput = {
    id?: string
    attachments?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: $Enums.OrderStatus
    freelancer?: UserCreateNestedOneWithoutCancelledJobsInput
  }

  export type CancelledJobsUncheckedCreateWithoutOrderInput = {
    id?: string
    freelancerId: string
    attachments?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: $Enums.OrderStatus
  }

  export type CancelledJobsCreateOrConnectWithoutOrderInput = {
    where: CancelledJobsWhereUniqueInput
    create: XOR<CancelledJobsCreateWithoutOrderInput, CancelledJobsUncheckedCreateWithoutOrderInput>
  }

  export type CancelledJobsCreateManyOrderInputEnvelope = {
    data: CancelledJobsCreateManyOrderInput | CancelledJobsCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type FinesCreateWithoutOrderInput = {
    id?: string
    amount: number
    reason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    freelancer: UserCreateNestedOneWithoutFinesInput
    invoice?: InvoiceCreateNestedOneWithoutFinesInput
  }

  export type FinesUncheckedCreateWithoutOrderInput = {
    id?: string
    freelancerId: string
    amount: number
    reason?: string | null
    invoiceId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FinesCreateOrConnectWithoutOrderInput = {
    where: FinesWhereUniqueInput
    create: XOR<FinesCreateWithoutOrderInput, FinesUncheckedCreateWithoutOrderInput>
  }

  export type FinesCreateManyOrderInputEnvelope = {
    data: FinesCreateManyOrderInput | FinesCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type ReviewCreateWithoutOrderInput = {
    id?: string
    rating?: number | null
    comment?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    reviewer: UserCreateNestedOneWithoutReviewsInput
    freelancer: UserCreateNestedOneWithoutReviewedInput
    invoice?: InvoiceCreateNestedOneWithoutReviewsInput
  }

  export type ReviewUncheckedCreateWithoutOrderInput = {
    id?: string
    reviewerId: string
    freelancerId: string
    rating?: number | null
    comment?: string | null
    invoiceId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReviewCreateOrConnectWithoutOrderInput = {
    where: ReviewWhereUniqueInput
    create: XOR<ReviewCreateWithoutOrderInput, ReviewUncheckedCreateWithoutOrderInput>
  }

  export type ReviewCreateManyOrderInputEnvelope = {
    data: ReviewCreateManyOrderInput | ReviewCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type InvoiceCreateWithoutOrdersInput = {
    id?: string
    invoiceNumber: string
    createdAt?: Date | string
    updatedAt?: Date | string
    totalAmount?: number
    finalAmount?: number
    isDraft?: boolean
    payments?: PaymentCreateNestedManyWithoutInvoiceInput
    user: UserCreateNestedOneWithoutInvoicesInput
    fines?: FinesCreateNestedManyWithoutInvoiceInput
    reviews?: ReviewCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceUncheckedCreateWithoutOrdersInput = {
    id?: string
    invoiceNumber: string
    createdAt?: Date | string
    updatedAt?: Date | string
    totalAmount?: number
    finalAmount?: number
    userId: string
    isDraft?: boolean
    payments?: PaymentUncheckedCreateNestedManyWithoutInvoiceInput
    fines?: FinesUncheckedCreateNestedManyWithoutInvoiceInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceCreateOrConnectWithoutOrdersInput = {
    where: InvoiceWhereUniqueInput
    create: XOR<InvoiceCreateWithoutOrdersInput, InvoiceUncheckedCreateWithoutOrdersInput>
  }

  export type NotificationCreateWithoutOrderInput = {
    id?: string
    title?: string | null
    message?: string | null
    read?: boolean
    type: $Enums.NotificationType
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutNotificationsInput
  }

  export type NotificationUncheckedCreateWithoutOrderInput = {
    id?: string
    userId: string
    title?: string | null
    message?: string | null
    read?: boolean
    type: $Enums.NotificationType
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type NotificationCreateOrConnectWithoutOrderInput = {
    where: NotificationWhereUniqueInput
    create: XOR<NotificationCreateWithoutOrderInput, NotificationUncheckedCreateWithoutOrderInput>
  }

  export type NotificationCreateManyOrderInputEnvelope = {
    data: NotificationCreateManyOrderInput | NotificationCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutOrdersInput = {
    update: XOR<UserUpdateWithoutOrdersInput, UserUncheckedUpdateWithoutOrdersInput>
    create: XOR<UserCreateWithoutOrdersInput, UserUncheckedCreateWithoutOrdersInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutOrdersInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutOrdersInput, UserUncheckedUpdateWithoutOrdersInput>
  }

  export type UserUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    fname?: StringFieldUpdateOperationsInput | string
    lname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableEnumRoleFieldUpdateOperationsInput | $Enums.Role | null
    profilePic?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshTokenExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    online?: BoolFieldUpdateOperationsInput | boolean
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    leadershipStyle?: NullableStringFieldUpdateOperationsInput | string | null
    teamSize?: NullableStringFieldUpdateOperationsInput | string | null
    achievements?: NullableStringFieldUpdateOperationsInput | string | null
    professionalDevelopment?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    altEmail?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    altPhone?: NullableStringFieldUpdateOperationsInput | string | null
    highestDegree?: NullableStringFieldUpdateOperationsInput | string | null
    citationStyles?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    disciplines?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    additionalSoftware?: NullableStringFieldUpdateOperationsInput | string | null
    aboutMe?: NullableStringFieldUpdateOperationsInput | string | null
    bids?: BidsUpdateManyWithoutFreelancerNestedInput
    assignments?: AssignmentUpdateManyWithoutFreelancerNestedInput
    SubmittedJobs?: SubmittedJobsUpdateManyWithoutFreelancerNestedInput
    cancelledJobs?: CancelledJobsUpdateManyWithoutFreelancerNestedInput
    invoices?: InvoiceUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    fines?: FinesUpdateManyWithoutFreelancerNestedInput
    reviews?: ReviewUpdateManyWithoutReviewerNestedInput
    reviewed?: ReviewUpdateManyWithoutFreelancerNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    freelancerApplications?: FreelancerApplicationUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    fname?: StringFieldUpdateOperationsInput | string
    lname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableEnumRoleFieldUpdateOperationsInput | $Enums.Role | null
    profilePic?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshTokenExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    online?: BoolFieldUpdateOperationsInput | boolean
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    leadershipStyle?: NullableStringFieldUpdateOperationsInput | string | null
    teamSize?: NullableStringFieldUpdateOperationsInput | string | null
    achievements?: NullableStringFieldUpdateOperationsInput | string | null
    professionalDevelopment?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    altEmail?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    altPhone?: NullableStringFieldUpdateOperationsInput | string | null
    highestDegree?: NullableStringFieldUpdateOperationsInput | string | null
    citationStyles?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    disciplines?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    additionalSoftware?: NullableStringFieldUpdateOperationsInput | string | null
    aboutMe?: NullableStringFieldUpdateOperationsInput | string | null
    bids?: BidsUncheckedUpdateManyWithoutFreelancerNestedInput
    assignments?: AssignmentUncheckedUpdateManyWithoutFreelancerNestedInput
    SubmittedJobs?: SubmittedJobsUncheckedUpdateManyWithoutFreelancerNestedInput
    cancelledJobs?: CancelledJobsUncheckedUpdateManyWithoutFreelancerNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    fines?: FinesUncheckedUpdateManyWithoutFreelancerNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutReviewerNestedInput
    reviewed?: ReviewUncheckedUpdateManyWithoutFreelancerNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    freelancerApplications?: FreelancerApplicationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type BidsUpsertWithWhereUniqueWithoutOrderInput = {
    where: BidsWhereUniqueInput
    update: XOR<BidsUpdateWithoutOrderInput, BidsUncheckedUpdateWithoutOrderInput>
    create: XOR<BidsCreateWithoutOrderInput, BidsUncheckedCreateWithoutOrderInput>
  }

  export type BidsUpdateWithWhereUniqueWithoutOrderInput = {
    where: BidsWhereUniqueInput
    data: XOR<BidsUpdateWithoutOrderInput, BidsUncheckedUpdateWithoutOrderInput>
  }

  export type BidsUpdateManyWithWhereWithoutOrderInput = {
    where: BidsScalarWhereInput
    data: XOR<BidsUpdateManyMutationInput, BidsUncheckedUpdateManyWithoutOrderInput>
  }

  export type AssignmentUpsertWithWhereUniqueWithoutOrderInput = {
    where: AssignmentWhereUniqueInput
    update: XOR<AssignmentUpdateWithoutOrderInput, AssignmentUncheckedUpdateWithoutOrderInput>
    create: XOR<AssignmentCreateWithoutOrderInput, AssignmentUncheckedCreateWithoutOrderInput>
  }

  export type AssignmentUpdateWithWhereUniqueWithoutOrderInput = {
    where: AssignmentWhereUniqueInput
    data: XOR<AssignmentUpdateWithoutOrderInput, AssignmentUncheckedUpdateWithoutOrderInput>
  }

  export type AssignmentUpdateManyWithWhereWithoutOrderInput = {
    where: AssignmentScalarWhereInput
    data: XOR<AssignmentUpdateManyMutationInput, AssignmentUncheckedUpdateManyWithoutOrderInput>
  }

  export type SubmittedJobsUpsertWithWhereUniqueWithoutOrderInput = {
    where: SubmittedJobsWhereUniqueInput
    update: XOR<SubmittedJobsUpdateWithoutOrderInput, SubmittedJobsUncheckedUpdateWithoutOrderInput>
    create: XOR<SubmittedJobsCreateWithoutOrderInput, SubmittedJobsUncheckedCreateWithoutOrderInput>
  }

  export type SubmittedJobsUpdateWithWhereUniqueWithoutOrderInput = {
    where: SubmittedJobsWhereUniqueInput
    data: XOR<SubmittedJobsUpdateWithoutOrderInput, SubmittedJobsUncheckedUpdateWithoutOrderInput>
  }

  export type SubmittedJobsUpdateManyWithWhereWithoutOrderInput = {
    where: SubmittedJobsScalarWhereInput
    data: XOR<SubmittedJobsUpdateManyMutationInput, SubmittedJobsUncheckedUpdateManyWithoutOrderInput>
  }

  export type CancelledJobsUpsertWithWhereUniqueWithoutOrderInput = {
    where: CancelledJobsWhereUniqueInput
    update: XOR<CancelledJobsUpdateWithoutOrderInput, CancelledJobsUncheckedUpdateWithoutOrderInput>
    create: XOR<CancelledJobsCreateWithoutOrderInput, CancelledJobsUncheckedCreateWithoutOrderInput>
  }

  export type CancelledJobsUpdateWithWhereUniqueWithoutOrderInput = {
    where: CancelledJobsWhereUniqueInput
    data: XOR<CancelledJobsUpdateWithoutOrderInput, CancelledJobsUncheckedUpdateWithoutOrderInput>
  }

  export type CancelledJobsUpdateManyWithWhereWithoutOrderInput = {
    where: CancelledJobsScalarWhereInput
    data: XOR<CancelledJobsUpdateManyMutationInput, CancelledJobsUncheckedUpdateManyWithoutOrderInput>
  }

  export type FinesUpsertWithWhereUniqueWithoutOrderInput = {
    where: FinesWhereUniqueInput
    update: XOR<FinesUpdateWithoutOrderInput, FinesUncheckedUpdateWithoutOrderInput>
    create: XOR<FinesCreateWithoutOrderInput, FinesUncheckedCreateWithoutOrderInput>
  }

  export type FinesUpdateWithWhereUniqueWithoutOrderInput = {
    where: FinesWhereUniqueInput
    data: XOR<FinesUpdateWithoutOrderInput, FinesUncheckedUpdateWithoutOrderInput>
  }

  export type FinesUpdateManyWithWhereWithoutOrderInput = {
    where: FinesScalarWhereInput
    data: XOR<FinesUpdateManyMutationInput, FinesUncheckedUpdateManyWithoutOrderInput>
  }

  export type ReviewUpsertWithWhereUniqueWithoutOrderInput = {
    where: ReviewWhereUniqueInput
    update: XOR<ReviewUpdateWithoutOrderInput, ReviewUncheckedUpdateWithoutOrderInput>
    create: XOR<ReviewCreateWithoutOrderInput, ReviewUncheckedCreateWithoutOrderInput>
  }

  export type ReviewUpdateWithWhereUniqueWithoutOrderInput = {
    where: ReviewWhereUniqueInput
    data: XOR<ReviewUpdateWithoutOrderInput, ReviewUncheckedUpdateWithoutOrderInput>
  }

  export type ReviewUpdateManyWithWhereWithoutOrderInput = {
    where: ReviewScalarWhereInput
    data: XOR<ReviewUpdateManyMutationInput, ReviewUncheckedUpdateManyWithoutOrderInput>
  }

  export type InvoiceUpsertWithoutOrdersInput = {
    update: XOR<InvoiceUpdateWithoutOrdersInput, InvoiceUncheckedUpdateWithoutOrdersInput>
    create: XOR<InvoiceCreateWithoutOrdersInput, InvoiceUncheckedCreateWithoutOrdersInput>
    where?: InvoiceWhereInput
  }

  export type InvoiceUpdateToOneWithWhereWithoutOrdersInput = {
    where?: InvoiceWhereInput
    data: XOR<InvoiceUpdateWithoutOrdersInput, InvoiceUncheckedUpdateWithoutOrdersInput>
  }

  export type InvoiceUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalAmount?: IntFieldUpdateOperationsInput | number
    finalAmount?: IntFieldUpdateOperationsInput | number
    isDraft?: BoolFieldUpdateOperationsInput | boolean
    payments?: PaymentUpdateManyWithoutInvoiceNestedInput
    user?: UserUpdateOneRequiredWithoutInvoicesNestedInput
    fines?: FinesUpdateManyWithoutInvoiceNestedInput
    reviews?: ReviewUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalAmount?: IntFieldUpdateOperationsInput | number
    finalAmount?: IntFieldUpdateOperationsInput | number
    userId?: StringFieldUpdateOperationsInput | string
    isDraft?: BoolFieldUpdateOperationsInput | boolean
    payments?: PaymentUncheckedUpdateManyWithoutInvoiceNestedInput
    fines?: FinesUncheckedUpdateManyWithoutInvoiceNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutInvoiceNestedInput
  }

  export type NotificationUpsertWithWhereUniqueWithoutOrderInput = {
    where: NotificationWhereUniqueInput
    update: XOR<NotificationUpdateWithoutOrderInput, NotificationUncheckedUpdateWithoutOrderInput>
    create: XOR<NotificationCreateWithoutOrderInput, NotificationUncheckedCreateWithoutOrderInput>
  }

  export type NotificationUpdateWithWhereUniqueWithoutOrderInput = {
    where: NotificationWhereUniqueInput
    data: XOR<NotificationUpdateWithoutOrderInput, NotificationUncheckedUpdateWithoutOrderInput>
  }

  export type NotificationUpdateManyWithWhereWithoutOrderInput = {
    where: NotificationScalarWhereInput
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyWithoutOrderInput>
  }

  export type OrderCreateWithoutBidsInput = {
    id?: string
    orderId: string
    topic: string
    category?: string | null
    service?: string | null
    sources?: string | null
    citation?: string | null
    pages?: Decimal | DecimalJsLike | number | string | null
    cpp?: number
    amount?: number
    deadline: Date | string
    duration: string
    instructions: string
    attachments?: OrderCreateattachmentsInput | string[]
    additionalNotes?: string | null
    status?: $Enums.OrderStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    freelancer?: UserCreateNestedOneWithoutOrdersInput
    assignments?: AssignmentCreateNestedManyWithoutOrderInput
    SubmittedJobs?: SubmittedJobsCreateNestedManyWithoutOrderInput
    cancelledJobs?: CancelledJobsCreateNestedManyWithoutOrderInput
    fines?: FinesCreateNestedManyWithoutOrderInput
    reviews?: ReviewCreateNestedManyWithoutOrderInput
    invoice?: InvoiceCreateNestedOneWithoutOrdersInput
    notifications?: NotificationCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutBidsInput = {
    id?: string
    orderId: string
    topic: string
    category?: string | null
    service?: string | null
    sources?: string | null
    citation?: string | null
    pages?: Decimal | DecimalJsLike | number | string | null
    cpp?: number
    amount?: number
    deadline: Date | string
    duration: string
    instructions: string
    attachments?: OrderCreateattachmentsInput | string[]
    additionalNotes?: string | null
    status?: $Enums.OrderStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    freelancerId?: string | null
    invoiceId?: string | null
    assignments?: AssignmentUncheckedCreateNestedManyWithoutOrderInput
    SubmittedJobs?: SubmittedJobsUncheckedCreateNestedManyWithoutOrderInput
    cancelledJobs?: CancelledJobsUncheckedCreateNestedManyWithoutOrderInput
    fines?: FinesUncheckedCreateNestedManyWithoutOrderInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutOrderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutBidsInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutBidsInput, OrderUncheckedCreateWithoutBidsInput>
  }

  export type UserCreateWithoutBidsInput = {
    id?: string
    fname: string
    lname: string
    email: string
    password: string
    role?: $Enums.Role | null
    profilePic?: string | null
    refreshToken?: string | null
    refreshTokenExp?: Date | string | null
    online?: boolean
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    experience?: string | null
    leadershipStyle?: string | null
    teamSize?: string | null
    achievements?: string | null
    professionalDevelopment?: string | null
    gender?: string | null
    country?: string | null
    city?: string | null
    altEmail?: string | null
    phone?: string | null
    altPhone?: string | null
    highestDegree?: string | null
    citationStyles?: string | null
    languages?: string | null
    disciplines?: string | null
    specialization?: string | null
    additionalSoftware?: string | null
    aboutMe?: string | null
    orders?: OrderCreateNestedManyWithoutFreelancerInput
    assignments?: AssignmentCreateNestedManyWithoutFreelancerInput
    SubmittedJobs?: SubmittedJobsCreateNestedManyWithoutFreelancerInput
    cancelledJobs?: CancelledJobsCreateNestedManyWithoutFreelancerInput
    invoices?: InvoiceCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    fines?: FinesCreateNestedManyWithoutFreelancerInput
    reviews?: ReviewCreateNestedManyWithoutReviewerInput
    reviewed?: ReviewCreateNestedManyWithoutFreelancerInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    freelancerApplications?: FreelancerApplicationCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutBidsInput = {
    id?: string
    fname: string
    lname: string
    email: string
    password: string
    role?: $Enums.Role | null
    profilePic?: string | null
    refreshToken?: string | null
    refreshTokenExp?: Date | string | null
    online?: boolean
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    experience?: string | null
    leadershipStyle?: string | null
    teamSize?: string | null
    achievements?: string | null
    professionalDevelopment?: string | null
    gender?: string | null
    country?: string | null
    city?: string | null
    altEmail?: string | null
    phone?: string | null
    altPhone?: string | null
    highestDegree?: string | null
    citationStyles?: string | null
    languages?: string | null
    disciplines?: string | null
    specialization?: string | null
    additionalSoftware?: string | null
    aboutMe?: string | null
    orders?: OrderUncheckedCreateNestedManyWithoutFreelancerInput
    assignments?: AssignmentUncheckedCreateNestedManyWithoutFreelancerInput
    SubmittedJobs?: SubmittedJobsUncheckedCreateNestedManyWithoutFreelancerInput
    cancelledJobs?: CancelledJobsUncheckedCreateNestedManyWithoutFreelancerInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    fines?: FinesUncheckedCreateNestedManyWithoutFreelancerInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutReviewerInput
    reviewed?: ReviewUncheckedCreateNestedManyWithoutFreelancerInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    freelancerApplications?: FreelancerApplicationUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutBidsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutBidsInput, UserUncheckedCreateWithoutBidsInput>
  }

  export type OrderUpsertWithoutBidsInput = {
    update: XOR<OrderUpdateWithoutBidsInput, OrderUncheckedUpdateWithoutBidsInput>
    create: XOR<OrderCreateWithoutBidsInput, OrderUncheckedCreateWithoutBidsInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutBidsInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutBidsInput, OrderUncheckedUpdateWithoutBidsInput>
  }

  export type OrderUpdateWithoutBidsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    topic?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    service?: NullableStringFieldUpdateOperationsInput | string | null
    sources?: NullableStringFieldUpdateOperationsInput | string | null
    citation?: NullableStringFieldUpdateOperationsInput | string | null
    pages?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cpp?: IntFieldUpdateOperationsInput | number
    amount?: IntFieldUpdateOperationsInput | number
    deadline?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: StringFieldUpdateOperationsInput | string
    instructions?: StringFieldUpdateOperationsInput | string
    attachments?: OrderUpdateattachmentsInput | string[]
    additionalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    freelancer?: UserUpdateOneWithoutOrdersNestedInput
    assignments?: AssignmentUpdateManyWithoutOrderNestedInput
    SubmittedJobs?: SubmittedJobsUpdateManyWithoutOrderNestedInput
    cancelledJobs?: CancelledJobsUpdateManyWithoutOrderNestedInput
    fines?: FinesUpdateManyWithoutOrderNestedInput
    reviews?: ReviewUpdateManyWithoutOrderNestedInput
    invoice?: InvoiceUpdateOneWithoutOrdersNestedInput
    notifications?: NotificationUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutBidsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    topic?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    service?: NullableStringFieldUpdateOperationsInput | string | null
    sources?: NullableStringFieldUpdateOperationsInput | string | null
    citation?: NullableStringFieldUpdateOperationsInput | string | null
    pages?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cpp?: IntFieldUpdateOperationsInput | number
    amount?: IntFieldUpdateOperationsInput | number
    deadline?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: StringFieldUpdateOperationsInput | string
    instructions?: StringFieldUpdateOperationsInput | string
    attachments?: OrderUpdateattachmentsInput | string[]
    additionalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    freelancerId?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    assignments?: AssignmentUncheckedUpdateManyWithoutOrderNestedInput
    SubmittedJobs?: SubmittedJobsUncheckedUpdateManyWithoutOrderNestedInput
    cancelledJobs?: CancelledJobsUncheckedUpdateManyWithoutOrderNestedInput
    fines?: FinesUncheckedUpdateManyWithoutOrderNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutOrderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type UserUpsertWithoutBidsInput = {
    update: XOR<UserUpdateWithoutBidsInput, UserUncheckedUpdateWithoutBidsInput>
    create: XOR<UserCreateWithoutBidsInput, UserUncheckedCreateWithoutBidsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutBidsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutBidsInput, UserUncheckedUpdateWithoutBidsInput>
  }

  export type UserUpdateWithoutBidsInput = {
    id?: StringFieldUpdateOperationsInput | string
    fname?: StringFieldUpdateOperationsInput | string
    lname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableEnumRoleFieldUpdateOperationsInput | $Enums.Role | null
    profilePic?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshTokenExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    online?: BoolFieldUpdateOperationsInput | boolean
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    leadershipStyle?: NullableStringFieldUpdateOperationsInput | string | null
    teamSize?: NullableStringFieldUpdateOperationsInput | string | null
    achievements?: NullableStringFieldUpdateOperationsInput | string | null
    professionalDevelopment?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    altEmail?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    altPhone?: NullableStringFieldUpdateOperationsInput | string | null
    highestDegree?: NullableStringFieldUpdateOperationsInput | string | null
    citationStyles?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    disciplines?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    additionalSoftware?: NullableStringFieldUpdateOperationsInput | string | null
    aboutMe?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: OrderUpdateManyWithoutFreelancerNestedInput
    assignments?: AssignmentUpdateManyWithoutFreelancerNestedInput
    SubmittedJobs?: SubmittedJobsUpdateManyWithoutFreelancerNestedInput
    cancelledJobs?: CancelledJobsUpdateManyWithoutFreelancerNestedInput
    invoices?: InvoiceUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    fines?: FinesUpdateManyWithoutFreelancerNestedInput
    reviews?: ReviewUpdateManyWithoutReviewerNestedInput
    reviewed?: ReviewUpdateManyWithoutFreelancerNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    freelancerApplications?: FreelancerApplicationUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutBidsInput = {
    id?: StringFieldUpdateOperationsInput | string
    fname?: StringFieldUpdateOperationsInput | string
    lname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableEnumRoleFieldUpdateOperationsInput | $Enums.Role | null
    profilePic?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshTokenExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    online?: BoolFieldUpdateOperationsInput | boolean
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    leadershipStyle?: NullableStringFieldUpdateOperationsInput | string | null
    teamSize?: NullableStringFieldUpdateOperationsInput | string | null
    achievements?: NullableStringFieldUpdateOperationsInput | string | null
    professionalDevelopment?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    altEmail?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    altPhone?: NullableStringFieldUpdateOperationsInput | string | null
    highestDegree?: NullableStringFieldUpdateOperationsInput | string | null
    citationStyles?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    disciplines?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    additionalSoftware?: NullableStringFieldUpdateOperationsInput | string | null
    aboutMe?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: OrderUncheckedUpdateManyWithoutFreelancerNestedInput
    assignments?: AssignmentUncheckedUpdateManyWithoutFreelancerNestedInput
    SubmittedJobs?: SubmittedJobsUncheckedUpdateManyWithoutFreelancerNestedInput
    cancelledJobs?: CancelledJobsUncheckedUpdateManyWithoutFreelancerNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    fines?: FinesUncheckedUpdateManyWithoutFreelancerNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutReviewerNestedInput
    reviewed?: ReviewUncheckedUpdateManyWithoutFreelancerNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    freelancerApplications?: FreelancerApplicationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type OrderCreateWithoutAssignmentsInput = {
    id?: string
    orderId: string
    topic: string
    category?: string | null
    service?: string | null
    sources?: string | null
    citation?: string | null
    pages?: Decimal | DecimalJsLike | number | string | null
    cpp?: number
    amount?: number
    deadline: Date | string
    duration: string
    instructions: string
    attachments?: OrderCreateattachmentsInput | string[]
    additionalNotes?: string | null
    status?: $Enums.OrderStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    freelancer?: UserCreateNestedOneWithoutOrdersInput
    bids?: BidsCreateNestedManyWithoutOrderInput
    SubmittedJobs?: SubmittedJobsCreateNestedManyWithoutOrderInput
    cancelledJobs?: CancelledJobsCreateNestedManyWithoutOrderInput
    fines?: FinesCreateNestedManyWithoutOrderInput
    reviews?: ReviewCreateNestedManyWithoutOrderInput
    invoice?: InvoiceCreateNestedOneWithoutOrdersInput
    notifications?: NotificationCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutAssignmentsInput = {
    id?: string
    orderId: string
    topic: string
    category?: string | null
    service?: string | null
    sources?: string | null
    citation?: string | null
    pages?: Decimal | DecimalJsLike | number | string | null
    cpp?: number
    amount?: number
    deadline: Date | string
    duration: string
    instructions: string
    attachments?: OrderCreateattachmentsInput | string[]
    additionalNotes?: string | null
    status?: $Enums.OrderStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    freelancerId?: string | null
    invoiceId?: string | null
    bids?: BidsUncheckedCreateNestedManyWithoutOrderInput
    SubmittedJobs?: SubmittedJobsUncheckedCreateNestedManyWithoutOrderInput
    cancelledJobs?: CancelledJobsUncheckedCreateNestedManyWithoutOrderInput
    fines?: FinesUncheckedCreateNestedManyWithoutOrderInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutOrderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutAssignmentsInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutAssignmentsInput, OrderUncheckedCreateWithoutAssignmentsInput>
  }

  export type UserCreateWithoutAssignmentsInput = {
    id?: string
    fname: string
    lname: string
    email: string
    password: string
    role?: $Enums.Role | null
    profilePic?: string | null
    refreshToken?: string | null
    refreshTokenExp?: Date | string | null
    online?: boolean
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    experience?: string | null
    leadershipStyle?: string | null
    teamSize?: string | null
    achievements?: string | null
    professionalDevelopment?: string | null
    gender?: string | null
    country?: string | null
    city?: string | null
    altEmail?: string | null
    phone?: string | null
    altPhone?: string | null
    highestDegree?: string | null
    citationStyles?: string | null
    languages?: string | null
    disciplines?: string | null
    specialization?: string | null
    additionalSoftware?: string | null
    aboutMe?: string | null
    orders?: OrderCreateNestedManyWithoutFreelancerInput
    bids?: BidsCreateNestedManyWithoutFreelancerInput
    SubmittedJobs?: SubmittedJobsCreateNestedManyWithoutFreelancerInput
    cancelledJobs?: CancelledJobsCreateNestedManyWithoutFreelancerInput
    invoices?: InvoiceCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    fines?: FinesCreateNestedManyWithoutFreelancerInput
    reviews?: ReviewCreateNestedManyWithoutReviewerInput
    reviewed?: ReviewCreateNestedManyWithoutFreelancerInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    freelancerApplications?: FreelancerApplicationCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutAssignmentsInput = {
    id?: string
    fname: string
    lname: string
    email: string
    password: string
    role?: $Enums.Role | null
    profilePic?: string | null
    refreshToken?: string | null
    refreshTokenExp?: Date | string | null
    online?: boolean
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    experience?: string | null
    leadershipStyle?: string | null
    teamSize?: string | null
    achievements?: string | null
    professionalDevelopment?: string | null
    gender?: string | null
    country?: string | null
    city?: string | null
    altEmail?: string | null
    phone?: string | null
    altPhone?: string | null
    highestDegree?: string | null
    citationStyles?: string | null
    languages?: string | null
    disciplines?: string | null
    specialization?: string | null
    additionalSoftware?: string | null
    aboutMe?: string | null
    orders?: OrderUncheckedCreateNestedManyWithoutFreelancerInput
    bids?: BidsUncheckedCreateNestedManyWithoutFreelancerInput
    SubmittedJobs?: SubmittedJobsUncheckedCreateNestedManyWithoutFreelancerInput
    cancelledJobs?: CancelledJobsUncheckedCreateNestedManyWithoutFreelancerInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    fines?: FinesUncheckedCreateNestedManyWithoutFreelancerInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutReviewerInput
    reviewed?: ReviewUncheckedCreateNestedManyWithoutFreelancerInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    freelancerApplications?: FreelancerApplicationUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutAssignmentsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAssignmentsInput, UserUncheckedCreateWithoutAssignmentsInput>
  }

  export type OrderUpsertWithoutAssignmentsInput = {
    update: XOR<OrderUpdateWithoutAssignmentsInput, OrderUncheckedUpdateWithoutAssignmentsInput>
    create: XOR<OrderCreateWithoutAssignmentsInput, OrderUncheckedCreateWithoutAssignmentsInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutAssignmentsInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutAssignmentsInput, OrderUncheckedUpdateWithoutAssignmentsInput>
  }

  export type OrderUpdateWithoutAssignmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    topic?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    service?: NullableStringFieldUpdateOperationsInput | string | null
    sources?: NullableStringFieldUpdateOperationsInput | string | null
    citation?: NullableStringFieldUpdateOperationsInput | string | null
    pages?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cpp?: IntFieldUpdateOperationsInput | number
    amount?: IntFieldUpdateOperationsInput | number
    deadline?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: StringFieldUpdateOperationsInput | string
    instructions?: StringFieldUpdateOperationsInput | string
    attachments?: OrderUpdateattachmentsInput | string[]
    additionalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    freelancer?: UserUpdateOneWithoutOrdersNestedInput
    bids?: BidsUpdateManyWithoutOrderNestedInput
    SubmittedJobs?: SubmittedJobsUpdateManyWithoutOrderNestedInput
    cancelledJobs?: CancelledJobsUpdateManyWithoutOrderNestedInput
    fines?: FinesUpdateManyWithoutOrderNestedInput
    reviews?: ReviewUpdateManyWithoutOrderNestedInput
    invoice?: InvoiceUpdateOneWithoutOrdersNestedInput
    notifications?: NotificationUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutAssignmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    topic?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    service?: NullableStringFieldUpdateOperationsInput | string | null
    sources?: NullableStringFieldUpdateOperationsInput | string | null
    citation?: NullableStringFieldUpdateOperationsInput | string | null
    pages?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cpp?: IntFieldUpdateOperationsInput | number
    amount?: IntFieldUpdateOperationsInput | number
    deadline?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: StringFieldUpdateOperationsInput | string
    instructions?: StringFieldUpdateOperationsInput | string
    attachments?: OrderUpdateattachmentsInput | string[]
    additionalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    freelancerId?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    bids?: BidsUncheckedUpdateManyWithoutOrderNestedInput
    SubmittedJobs?: SubmittedJobsUncheckedUpdateManyWithoutOrderNestedInput
    cancelledJobs?: CancelledJobsUncheckedUpdateManyWithoutOrderNestedInput
    fines?: FinesUncheckedUpdateManyWithoutOrderNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutOrderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type UserUpsertWithoutAssignmentsInput = {
    update: XOR<UserUpdateWithoutAssignmentsInput, UserUncheckedUpdateWithoutAssignmentsInput>
    create: XOR<UserCreateWithoutAssignmentsInput, UserUncheckedCreateWithoutAssignmentsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAssignmentsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAssignmentsInput, UserUncheckedUpdateWithoutAssignmentsInput>
  }

  export type UserUpdateWithoutAssignmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    fname?: StringFieldUpdateOperationsInput | string
    lname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableEnumRoleFieldUpdateOperationsInput | $Enums.Role | null
    profilePic?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshTokenExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    online?: BoolFieldUpdateOperationsInput | boolean
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    leadershipStyle?: NullableStringFieldUpdateOperationsInput | string | null
    teamSize?: NullableStringFieldUpdateOperationsInput | string | null
    achievements?: NullableStringFieldUpdateOperationsInput | string | null
    professionalDevelopment?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    altEmail?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    altPhone?: NullableStringFieldUpdateOperationsInput | string | null
    highestDegree?: NullableStringFieldUpdateOperationsInput | string | null
    citationStyles?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    disciplines?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    additionalSoftware?: NullableStringFieldUpdateOperationsInput | string | null
    aboutMe?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: OrderUpdateManyWithoutFreelancerNestedInput
    bids?: BidsUpdateManyWithoutFreelancerNestedInput
    SubmittedJobs?: SubmittedJobsUpdateManyWithoutFreelancerNestedInput
    cancelledJobs?: CancelledJobsUpdateManyWithoutFreelancerNestedInput
    invoices?: InvoiceUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    fines?: FinesUpdateManyWithoutFreelancerNestedInput
    reviews?: ReviewUpdateManyWithoutReviewerNestedInput
    reviewed?: ReviewUpdateManyWithoutFreelancerNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    freelancerApplications?: FreelancerApplicationUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutAssignmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    fname?: StringFieldUpdateOperationsInput | string
    lname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableEnumRoleFieldUpdateOperationsInput | $Enums.Role | null
    profilePic?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshTokenExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    online?: BoolFieldUpdateOperationsInput | boolean
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    leadershipStyle?: NullableStringFieldUpdateOperationsInput | string | null
    teamSize?: NullableStringFieldUpdateOperationsInput | string | null
    achievements?: NullableStringFieldUpdateOperationsInput | string | null
    professionalDevelopment?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    altEmail?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    altPhone?: NullableStringFieldUpdateOperationsInput | string | null
    highestDegree?: NullableStringFieldUpdateOperationsInput | string | null
    citationStyles?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    disciplines?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    additionalSoftware?: NullableStringFieldUpdateOperationsInput | string | null
    aboutMe?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: OrderUncheckedUpdateManyWithoutFreelancerNestedInput
    bids?: BidsUncheckedUpdateManyWithoutFreelancerNestedInput
    SubmittedJobs?: SubmittedJobsUncheckedUpdateManyWithoutFreelancerNestedInput
    cancelledJobs?: CancelledJobsUncheckedUpdateManyWithoutFreelancerNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    fines?: FinesUncheckedUpdateManyWithoutFreelancerNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutReviewerNestedInput
    reviewed?: ReviewUncheckedUpdateManyWithoutFreelancerNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    freelancerApplications?: FreelancerApplicationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type OrderCreateWithoutSubmittedJobsInput = {
    id?: string
    orderId: string
    topic: string
    category?: string | null
    service?: string | null
    sources?: string | null
    citation?: string | null
    pages?: Decimal | DecimalJsLike | number | string | null
    cpp?: number
    amount?: number
    deadline: Date | string
    duration: string
    instructions: string
    attachments?: OrderCreateattachmentsInput | string[]
    additionalNotes?: string | null
    status?: $Enums.OrderStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    freelancer?: UserCreateNestedOneWithoutOrdersInput
    bids?: BidsCreateNestedManyWithoutOrderInput
    assignments?: AssignmentCreateNestedManyWithoutOrderInput
    cancelledJobs?: CancelledJobsCreateNestedManyWithoutOrderInput
    fines?: FinesCreateNestedManyWithoutOrderInput
    reviews?: ReviewCreateNestedManyWithoutOrderInput
    invoice?: InvoiceCreateNestedOneWithoutOrdersInput
    notifications?: NotificationCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutSubmittedJobsInput = {
    id?: string
    orderId: string
    topic: string
    category?: string | null
    service?: string | null
    sources?: string | null
    citation?: string | null
    pages?: Decimal | DecimalJsLike | number | string | null
    cpp?: number
    amount?: number
    deadline: Date | string
    duration: string
    instructions: string
    attachments?: OrderCreateattachmentsInput | string[]
    additionalNotes?: string | null
    status?: $Enums.OrderStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    freelancerId?: string | null
    invoiceId?: string | null
    bids?: BidsUncheckedCreateNestedManyWithoutOrderInput
    assignments?: AssignmentUncheckedCreateNestedManyWithoutOrderInput
    cancelledJobs?: CancelledJobsUncheckedCreateNestedManyWithoutOrderInput
    fines?: FinesUncheckedCreateNestedManyWithoutOrderInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutOrderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutSubmittedJobsInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutSubmittedJobsInput, OrderUncheckedCreateWithoutSubmittedJobsInput>
  }

  export type UserCreateWithoutSubmittedJobsInput = {
    id?: string
    fname: string
    lname: string
    email: string
    password: string
    role?: $Enums.Role | null
    profilePic?: string | null
    refreshToken?: string | null
    refreshTokenExp?: Date | string | null
    online?: boolean
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    experience?: string | null
    leadershipStyle?: string | null
    teamSize?: string | null
    achievements?: string | null
    professionalDevelopment?: string | null
    gender?: string | null
    country?: string | null
    city?: string | null
    altEmail?: string | null
    phone?: string | null
    altPhone?: string | null
    highestDegree?: string | null
    citationStyles?: string | null
    languages?: string | null
    disciplines?: string | null
    specialization?: string | null
    additionalSoftware?: string | null
    aboutMe?: string | null
    orders?: OrderCreateNestedManyWithoutFreelancerInput
    bids?: BidsCreateNestedManyWithoutFreelancerInput
    assignments?: AssignmentCreateNestedManyWithoutFreelancerInput
    cancelledJobs?: CancelledJobsCreateNestedManyWithoutFreelancerInput
    invoices?: InvoiceCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    fines?: FinesCreateNestedManyWithoutFreelancerInput
    reviews?: ReviewCreateNestedManyWithoutReviewerInput
    reviewed?: ReviewCreateNestedManyWithoutFreelancerInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    freelancerApplications?: FreelancerApplicationCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutSubmittedJobsInput = {
    id?: string
    fname: string
    lname: string
    email: string
    password: string
    role?: $Enums.Role | null
    profilePic?: string | null
    refreshToken?: string | null
    refreshTokenExp?: Date | string | null
    online?: boolean
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    experience?: string | null
    leadershipStyle?: string | null
    teamSize?: string | null
    achievements?: string | null
    professionalDevelopment?: string | null
    gender?: string | null
    country?: string | null
    city?: string | null
    altEmail?: string | null
    phone?: string | null
    altPhone?: string | null
    highestDegree?: string | null
    citationStyles?: string | null
    languages?: string | null
    disciplines?: string | null
    specialization?: string | null
    additionalSoftware?: string | null
    aboutMe?: string | null
    orders?: OrderUncheckedCreateNestedManyWithoutFreelancerInput
    bids?: BidsUncheckedCreateNestedManyWithoutFreelancerInput
    assignments?: AssignmentUncheckedCreateNestedManyWithoutFreelancerInput
    cancelledJobs?: CancelledJobsUncheckedCreateNestedManyWithoutFreelancerInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    fines?: FinesUncheckedCreateNestedManyWithoutFreelancerInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutReviewerInput
    reviewed?: ReviewUncheckedCreateNestedManyWithoutFreelancerInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    freelancerApplications?: FreelancerApplicationUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutSubmittedJobsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSubmittedJobsInput, UserUncheckedCreateWithoutSubmittedJobsInput>
  }

  export type OrderUpsertWithoutSubmittedJobsInput = {
    update: XOR<OrderUpdateWithoutSubmittedJobsInput, OrderUncheckedUpdateWithoutSubmittedJobsInput>
    create: XOR<OrderCreateWithoutSubmittedJobsInput, OrderUncheckedCreateWithoutSubmittedJobsInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutSubmittedJobsInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutSubmittedJobsInput, OrderUncheckedUpdateWithoutSubmittedJobsInput>
  }

  export type OrderUpdateWithoutSubmittedJobsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    topic?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    service?: NullableStringFieldUpdateOperationsInput | string | null
    sources?: NullableStringFieldUpdateOperationsInput | string | null
    citation?: NullableStringFieldUpdateOperationsInput | string | null
    pages?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cpp?: IntFieldUpdateOperationsInput | number
    amount?: IntFieldUpdateOperationsInput | number
    deadline?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: StringFieldUpdateOperationsInput | string
    instructions?: StringFieldUpdateOperationsInput | string
    attachments?: OrderUpdateattachmentsInput | string[]
    additionalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    freelancer?: UserUpdateOneWithoutOrdersNestedInput
    bids?: BidsUpdateManyWithoutOrderNestedInput
    assignments?: AssignmentUpdateManyWithoutOrderNestedInput
    cancelledJobs?: CancelledJobsUpdateManyWithoutOrderNestedInput
    fines?: FinesUpdateManyWithoutOrderNestedInput
    reviews?: ReviewUpdateManyWithoutOrderNestedInput
    invoice?: InvoiceUpdateOneWithoutOrdersNestedInput
    notifications?: NotificationUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutSubmittedJobsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    topic?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    service?: NullableStringFieldUpdateOperationsInput | string | null
    sources?: NullableStringFieldUpdateOperationsInput | string | null
    citation?: NullableStringFieldUpdateOperationsInput | string | null
    pages?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cpp?: IntFieldUpdateOperationsInput | number
    amount?: IntFieldUpdateOperationsInput | number
    deadline?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: StringFieldUpdateOperationsInput | string
    instructions?: StringFieldUpdateOperationsInput | string
    attachments?: OrderUpdateattachmentsInput | string[]
    additionalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    freelancerId?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    bids?: BidsUncheckedUpdateManyWithoutOrderNestedInput
    assignments?: AssignmentUncheckedUpdateManyWithoutOrderNestedInput
    cancelledJobs?: CancelledJobsUncheckedUpdateManyWithoutOrderNestedInput
    fines?: FinesUncheckedUpdateManyWithoutOrderNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutOrderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type UserUpsertWithoutSubmittedJobsInput = {
    update: XOR<UserUpdateWithoutSubmittedJobsInput, UserUncheckedUpdateWithoutSubmittedJobsInput>
    create: XOR<UserCreateWithoutSubmittedJobsInput, UserUncheckedCreateWithoutSubmittedJobsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSubmittedJobsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSubmittedJobsInput, UserUncheckedUpdateWithoutSubmittedJobsInput>
  }

  export type UserUpdateWithoutSubmittedJobsInput = {
    id?: StringFieldUpdateOperationsInput | string
    fname?: StringFieldUpdateOperationsInput | string
    lname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableEnumRoleFieldUpdateOperationsInput | $Enums.Role | null
    profilePic?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshTokenExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    online?: BoolFieldUpdateOperationsInput | boolean
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    leadershipStyle?: NullableStringFieldUpdateOperationsInput | string | null
    teamSize?: NullableStringFieldUpdateOperationsInput | string | null
    achievements?: NullableStringFieldUpdateOperationsInput | string | null
    professionalDevelopment?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    altEmail?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    altPhone?: NullableStringFieldUpdateOperationsInput | string | null
    highestDegree?: NullableStringFieldUpdateOperationsInput | string | null
    citationStyles?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    disciplines?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    additionalSoftware?: NullableStringFieldUpdateOperationsInput | string | null
    aboutMe?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: OrderUpdateManyWithoutFreelancerNestedInput
    bids?: BidsUpdateManyWithoutFreelancerNestedInput
    assignments?: AssignmentUpdateManyWithoutFreelancerNestedInput
    cancelledJobs?: CancelledJobsUpdateManyWithoutFreelancerNestedInput
    invoices?: InvoiceUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    fines?: FinesUpdateManyWithoutFreelancerNestedInput
    reviews?: ReviewUpdateManyWithoutReviewerNestedInput
    reviewed?: ReviewUpdateManyWithoutFreelancerNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    freelancerApplications?: FreelancerApplicationUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutSubmittedJobsInput = {
    id?: StringFieldUpdateOperationsInput | string
    fname?: StringFieldUpdateOperationsInput | string
    lname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableEnumRoleFieldUpdateOperationsInput | $Enums.Role | null
    profilePic?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshTokenExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    online?: BoolFieldUpdateOperationsInput | boolean
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    leadershipStyle?: NullableStringFieldUpdateOperationsInput | string | null
    teamSize?: NullableStringFieldUpdateOperationsInput | string | null
    achievements?: NullableStringFieldUpdateOperationsInput | string | null
    professionalDevelopment?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    altEmail?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    altPhone?: NullableStringFieldUpdateOperationsInput | string | null
    highestDegree?: NullableStringFieldUpdateOperationsInput | string | null
    citationStyles?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    disciplines?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    additionalSoftware?: NullableStringFieldUpdateOperationsInput | string | null
    aboutMe?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: OrderUncheckedUpdateManyWithoutFreelancerNestedInput
    bids?: BidsUncheckedUpdateManyWithoutFreelancerNestedInput
    assignments?: AssignmentUncheckedUpdateManyWithoutFreelancerNestedInput
    cancelledJobs?: CancelledJobsUncheckedUpdateManyWithoutFreelancerNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    fines?: FinesUncheckedUpdateManyWithoutFreelancerNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutReviewerNestedInput
    reviewed?: ReviewUncheckedUpdateManyWithoutFreelancerNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    freelancerApplications?: FreelancerApplicationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type OrderCreateWithoutCancelledJobsInput = {
    id?: string
    orderId: string
    topic: string
    category?: string | null
    service?: string | null
    sources?: string | null
    citation?: string | null
    pages?: Decimal | DecimalJsLike | number | string | null
    cpp?: number
    amount?: number
    deadline: Date | string
    duration: string
    instructions: string
    attachments?: OrderCreateattachmentsInput | string[]
    additionalNotes?: string | null
    status?: $Enums.OrderStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    freelancer?: UserCreateNestedOneWithoutOrdersInput
    bids?: BidsCreateNestedManyWithoutOrderInput
    assignments?: AssignmentCreateNestedManyWithoutOrderInput
    SubmittedJobs?: SubmittedJobsCreateNestedManyWithoutOrderInput
    fines?: FinesCreateNestedManyWithoutOrderInput
    reviews?: ReviewCreateNestedManyWithoutOrderInput
    invoice?: InvoiceCreateNestedOneWithoutOrdersInput
    notifications?: NotificationCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutCancelledJobsInput = {
    id?: string
    orderId: string
    topic: string
    category?: string | null
    service?: string | null
    sources?: string | null
    citation?: string | null
    pages?: Decimal | DecimalJsLike | number | string | null
    cpp?: number
    amount?: number
    deadline: Date | string
    duration: string
    instructions: string
    attachments?: OrderCreateattachmentsInput | string[]
    additionalNotes?: string | null
    status?: $Enums.OrderStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    freelancerId?: string | null
    invoiceId?: string | null
    bids?: BidsUncheckedCreateNestedManyWithoutOrderInput
    assignments?: AssignmentUncheckedCreateNestedManyWithoutOrderInput
    SubmittedJobs?: SubmittedJobsUncheckedCreateNestedManyWithoutOrderInput
    fines?: FinesUncheckedCreateNestedManyWithoutOrderInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutOrderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutCancelledJobsInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutCancelledJobsInput, OrderUncheckedCreateWithoutCancelledJobsInput>
  }

  export type UserCreateWithoutCancelledJobsInput = {
    id?: string
    fname: string
    lname: string
    email: string
    password: string
    role?: $Enums.Role | null
    profilePic?: string | null
    refreshToken?: string | null
    refreshTokenExp?: Date | string | null
    online?: boolean
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    experience?: string | null
    leadershipStyle?: string | null
    teamSize?: string | null
    achievements?: string | null
    professionalDevelopment?: string | null
    gender?: string | null
    country?: string | null
    city?: string | null
    altEmail?: string | null
    phone?: string | null
    altPhone?: string | null
    highestDegree?: string | null
    citationStyles?: string | null
    languages?: string | null
    disciplines?: string | null
    specialization?: string | null
    additionalSoftware?: string | null
    aboutMe?: string | null
    orders?: OrderCreateNestedManyWithoutFreelancerInput
    bids?: BidsCreateNestedManyWithoutFreelancerInput
    assignments?: AssignmentCreateNestedManyWithoutFreelancerInput
    SubmittedJobs?: SubmittedJobsCreateNestedManyWithoutFreelancerInput
    invoices?: InvoiceCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    fines?: FinesCreateNestedManyWithoutFreelancerInput
    reviews?: ReviewCreateNestedManyWithoutReviewerInput
    reviewed?: ReviewCreateNestedManyWithoutFreelancerInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    freelancerApplications?: FreelancerApplicationCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutCancelledJobsInput = {
    id?: string
    fname: string
    lname: string
    email: string
    password: string
    role?: $Enums.Role | null
    profilePic?: string | null
    refreshToken?: string | null
    refreshTokenExp?: Date | string | null
    online?: boolean
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    experience?: string | null
    leadershipStyle?: string | null
    teamSize?: string | null
    achievements?: string | null
    professionalDevelopment?: string | null
    gender?: string | null
    country?: string | null
    city?: string | null
    altEmail?: string | null
    phone?: string | null
    altPhone?: string | null
    highestDegree?: string | null
    citationStyles?: string | null
    languages?: string | null
    disciplines?: string | null
    specialization?: string | null
    additionalSoftware?: string | null
    aboutMe?: string | null
    orders?: OrderUncheckedCreateNestedManyWithoutFreelancerInput
    bids?: BidsUncheckedCreateNestedManyWithoutFreelancerInput
    assignments?: AssignmentUncheckedCreateNestedManyWithoutFreelancerInput
    SubmittedJobs?: SubmittedJobsUncheckedCreateNestedManyWithoutFreelancerInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    fines?: FinesUncheckedCreateNestedManyWithoutFreelancerInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutReviewerInput
    reviewed?: ReviewUncheckedCreateNestedManyWithoutFreelancerInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    freelancerApplications?: FreelancerApplicationUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutCancelledJobsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCancelledJobsInput, UserUncheckedCreateWithoutCancelledJobsInput>
  }

  export type OrderUpsertWithoutCancelledJobsInput = {
    update: XOR<OrderUpdateWithoutCancelledJobsInput, OrderUncheckedUpdateWithoutCancelledJobsInput>
    create: XOR<OrderCreateWithoutCancelledJobsInput, OrderUncheckedCreateWithoutCancelledJobsInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutCancelledJobsInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutCancelledJobsInput, OrderUncheckedUpdateWithoutCancelledJobsInput>
  }

  export type OrderUpdateWithoutCancelledJobsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    topic?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    service?: NullableStringFieldUpdateOperationsInput | string | null
    sources?: NullableStringFieldUpdateOperationsInput | string | null
    citation?: NullableStringFieldUpdateOperationsInput | string | null
    pages?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cpp?: IntFieldUpdateOperationsInput | number
    amount?: IntFieldUpdateOperationsInput | number
    deadline?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: StringFieldUpdateOperationsInput | string
    instructions?: StringFieldUpdateOperationsInput | string
    attachments?: OrderUpdateattachmentsInput | string[]
    additionalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    freelancer?: UserUpdateOneWithoutOrdersNestedInput
    bids?: BidsUpdateManyWithoutOrderNestedInput
    assignments?: AssignmentUpdateManyWithoutOrderNestedInput
    SubmittedJobs?: SubmittedJobsUpdateManyWithoutOrderNestedInput
    fines?: FinesUpdateManyWithoutOrderNestedInput
    reviews?: ReviewUpdateManyWithoutOrderNestedInput
    invoice?: InvoiceUpdateOneWithoutOrdersNestedInput
    notifications?: NotificationUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutCancelledJobsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    topic?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    service?: NullableStringFieldUpdateOperationsInput | string | null
    sources?: NullableStringFieldUpdateOperationsInput | string | null
    citation?: NullableStringFieldUpdateOperationsInput | string | null
    pages?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cpp?: IntFieldUpdateOperationsInput | number
    amount?: IntFieldUpdateOperationsInput | number
    deadline?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: StringFieldUpdateOperationsInput | string
    instructions?: StringFieldUpdateOperationsInput | string
    attachments?: OrderUpdateattachmentsInput | string[]
    additionalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    freelancerId?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    bids?: BidsUncheckedUpdateManyWithoutOrderNestedInput
    assignments?: AssignmentUncheckedUpdateManyWithoutOrderNestedInput
    SubmittedJobs?: SubmittedJobsUncheckedUpdateManyWithoutOrderNestedInput
    fines?: FinesUncheckedUpdateManyWithoutOrderNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutOrderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type UserUpsertWithoutCancelledJobsInput = {
    update: XOR<UserUpdateWithoutCancelledJobsInput, UserUncheckedUpdateWithoutCancelledJobsInput>
    create: XOR<UserCreateWithoutCancelledJobsInput, UserUncheckedCreateWithoutCancelledJobsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCancelledJobsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCancelledJobsInput, UserUncheckedUpdateWithoutCancelledJobsInput>
  }

  export type UserUpdateWithoutCancelledJobsInput = {
    id?: StringFieldUpdateOperationsInput | string
    fname?: StringFieldUpdateOperationsInput | string
    lname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableEnumRoleFieldUpdateOperationsInput | $Enums.Role | null
    profilePic?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshTokenExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    online?: BoolFieldUpdateOperationsInput | boolean
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    leadershipStyle?: NullableStringFieldUpdateOperationsInput | string | null
    teamSize?: NullableStringFieldUpdateOperationsInput | string | null
    achievements?: NullableStringFieldUpdateOperationsInput | string | null
    professionalDevelopment?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    altEmail?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    altPhone?: NullableStringFieldUpdateOperationsInput | string | null
    highestDegree?: NullableStringFieldUpdateOperationsInput | string | null
    citationStyles?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    disciplines?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    additionalSoftware?: NullableStringFieldUpdateOperationsInput | string | null
    aboutMe?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: OrderUpdateManyWithoutFreelancerNestedInput
    bids?: BidsUpdateManyWithoutFreelancerNestedInput
    assignments?: AssignmentUpdateManyWithoutFreelancerNestedInput
    SubmittedJobs?: SubmittedJobsUpdateManyWithoutFreelancerNestedInput
    invoices?: InvoiceUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    fines?: FinesUpdateManyWithoutFreelancerNestedInput
    reviews?: ReviewUpdateManyWithoutReviewerNestedInput
    reviewed?: ReviewUpdateManyWithoutFreelancerNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    freelancerApplications?: FreelancerApplicationUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutCancelledJobsInput = {
    id?: StringFieldUpdateOperationsInput | string
    fname?: StringFieldUpdateOperationsInput | string
    lname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableEnumRoleFieldUpdateOperationsInput | $Enums.Role | null
    profilePic?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshTokenExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    online?: BoolFieldUpdateOperationsInput | boolean
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    leadershipStyle?: NullableStringFieldUpdateOperationsInput | string | null
    teamSize?: NullableStringFieldUpdateOperationsInput | string | null
    achievements?: NullableStringFieldUpdateOperationsInput | string | null
    professionalDevelopment?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    altEmail?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    altPhone?: NullableStringFieldUpdateOperationsInput | string | null
    highestDegree?: NullableStringFieldUpdateOperationsInput | string | null
    citationStyles?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    disciplines?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    additionalSoftware?: NullableStringFieldUpdateOperationsInput | string | null
    aboutMe?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: OrderUncheckedUpdateManyWithoutFreelancerNestedInput
    bids?: BidsUncheckedUpdateManyWithoutFreelancerNestedInput
    assignments?: AssignmentUncheckedUpdateManyWithoutFreelancerNestedInput
    SubmittedJobs?: SubmittedJobsUncheckedUpdateManyWithoutFreelancerNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    fines?: FinesUncheckedUpdateManyWithoutFreelancerNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutReviewerNestedInput
    reviewed?: ReviewUncheckedUpdateManyWithoutFreelancerNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    freelancerApplications?: FreelancerApplicationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type OrderCreateWithoutInvoiceInput = {
    id?: string
    orderId: string
    topic: string
    category?: string | null
    service?: string | null
    sources?: string | null
    citation?: string | null
    pages?: Decimal | DecimalJsLike | number | string | null
    cpp?: number
    amount?: number
    deadline: Date | string
    duration: string
    instructions: string
    attachments?: OrderCreateattachmentsInput | string[]
    additionalNotes?: string | null
    status?: $Enums.OrderStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    freelancer?: UserCreateNestedOneWithoutOrdersInput
    bids?: BidsCreateNestedManyWithoutOrderInput
    assignments?: AssignmentCreateNestedManyWithoutOrderInput
    SubmittedJobs?: SubmittedJobsCreateNestedManyWithoutOrderInput
    cancelledJobs?: CancelledJobsCreateNestedManyWithoutOrderInput
    fines?: FinesCreateNestedManyWithoutOrderInput
    reviews?: ReviewCreateNestedManyWithoutOrderInput
    notifications?: NotificationCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutInvoiceInput = {
    id?: string
    orderId: string
    topic: string
    category?: string | null
    service?: string | null
    sources?: string | null
    citation?: string | null
    pages?: Decimal | DecimalJsLike | number | string | null
    cpp?: number
    amount?: number
    deadline: Date | string
    duration: string
    instructions: string
    attachments?: OrderCreateattachmentsInput | string[]
    additionalNotes?: string | null
    status?: $Enums.OrderStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    freelancerId?: string | null
    bids?: BidsUncheckedCreateNestedManyWithoutOrderInput
    assignments?: AssignmentUncheckedCreateNestedManyWithoutOrderInput
    SubmittedJobs?: SubmittedJobsUncheckedCreateNestedManyWithoutOrderInput
    cancelledJobs?: CancelledJobsUncheckedCreateNestedManyWithoutOrderInput
    fines?: FinesUncheckedCreateNestedManyWithoutOrderInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutOrderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutInvoiceInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutInvoiceInput, OrderUncheckedCreateWithoutInvoiceInput>
  }

  export type OrderCreateManyInvoiceInputEnvelope = {
    data: OrderCreateManyInvoiceInput | OrderCreateManyInvoiceInput[]
    skipDuplicates?: boolean
  }

  export type PaymentCreateWithoutInvoiceInput = {
    id?: string
    paymentRef: string
    amount: number
    modeOfPayment: $Enums.ModeOfPayment
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutPaymentsInput
  }

  export type PaymentUncheckedCreateWithoutInvoiceInput = {
    id?: string
    paymentRef: string
    amount: number
    modeOfPayment: $Enums.ModeOfPayment
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
  }

  export type PaymentCreateOrConnectWithoutInvoiceInput = {
    where: PaymentWhereUniqueInput
    create: XOR<PaymentCreateWithoutInvoiceInput, PaymentUncheckedCreateWithoutInvoiceInput>
  }

  export type PaymentCreateManyInvoiceInputEnvelope = {
    data: PaymentCreateManyInvoiceInput | PaymentCreateManyInvoiceInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutInvoicesInput = {
    id?: string
    fname: string
    lname: string
    email: string
    password: string
    role?: $Enums.Role | null
    profilePic?: string | null
    refreshToken?: string | null
    refreshTokenExp?: Date | string | null
    online?: boolean
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    experience?: string | null
    leadershipStyle?: string | null
    teamSize?: string | null
    achievements?: string | null
    professionalDevelopment?: string | null
    gender?: string | null
    country?: string | null
    city?: string | null
    altEmail?: string | null
    phone?: string | null
    altPhone?: string | null
    highestDegree?: string | null
    citationStyles?: string | null
    languages?: string | null
    disciplines?: string | null
    specialization?: string | null
    additionalSoftware?: string | null
    aboutMe?: string | null
    orders?: OrderCreateNestedManyWithoutFreelancerInput
    bids?: BidsCreateNestedManyWithoutFreelancerInput
    assignments?: AssignmentCreateNestedManyWithoutFreelancerInput
    SubmittedJobs?: SubmittedJobsCreateNestedManyWithoutFreelancerInput
    cancelledJobs?: CancelledJobsCreateNestedManyWithoutFreelancerInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    fines?: FinesCreateNestedManyWithoutFreelancerInput
    reviews?: ReviewCreateNestedManyWithoutReviewerInput
    reviewed?: ReviewCreateNestedManyWithoutFreelancerInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    freelancerApplications?: FreelancerApplicationCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutInvoicesInput = {
    id?: string
    fname: string
    lname: string
    email: string
    password: string
    role?: $Enums.Role | null
    profilePic?: string | null
    refreshToken?: string | null
    refreshTokenExp?: Date | string | null
    online?: boolean
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    experience?: string | null
    leadershipStyle?: string | null
    teamSize?: string | null
    achievements?: string | null
    professionalDevelopment?: string | null
    gender?: string | null
    country?: string | null
    city?: string | null
    altEmail?: string | null
    phone?: string | null
    altPhone?: string | null
    highestDegree?: string | null
    citationStyles?: string | null
    languages?: string | null
    disciplines?: string | null
    specialization?: string | null
    additionalSoftware?: string | null
    aboutMe?: string | null
    orders?: OrderUncheckedCreateNestedManyWithoutFreelancerInput
    bids?: BidsUncheckedCreateNestedManyWithoutFreelancerInput
    assignments?: AssignmentUncheckedCreateNestedManyWithoutFreelancerInput
    SubmittedJobs?: SubmittedJobsUncheckedCreateNestedManyWithoutFreelancerInput
    cancelledJobs?: CancelledJobsUncheckedCreateNestedManyWithoutFreelancerInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    fines?: FinesUncheckedCreateNestedManyWithoutFreelancerInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutReviewerInput
    reviewed?: ReviewUncheckedCreateNestedManyWithoutFreelancerInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    freelancerApplications?: FreelancerApplicationUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutInvoicesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutInvoicesInput, UserUncheckedCreateWithoutInvoicesInput>
  }

  export type FinesCreateWithoutInvoiceInput = {
    id?: string
    amount: number
    reason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    order: OrderCreateNestedOneWithoutFinesInput
    freelancer: UserCreateNestedOneWithoutFinesInput
  }

  export type FinesUncheckedCreateWithoutInvoiceInput = {
    id?: string
    orderId: string
    freelancerId: string
    amount: number
    reason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FinesCreateOrConnectWithoutInvoiceInput = {
    where: FinesWhereUniqueInput
    create: XOR<FinesCreateWithoutInvoiceInput, FinesUncheckedCreateWithoutInvoiceInput>
  }

  export type FinesCreateManyInvoiceInputEnvelope = {
    data: FinesCreateManyInvoiceInput | FinesCreateManyInvoiceInput[]
    skipDuplicates?: boolean
  }

  export type ReviewCreateWithoutInvoiceInput = {
    id?: string
    rating?: number | null
    comment?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    order: OrderCreateNestedOneWithoutReviewsInput
    reviewer: UserCreateNestedOneWithoutReviewsInput
    freelancer: UserCreateNestedOneWithoutReviewedInput
  }

  export type ReviewUncheckedCreateWithoutInvoiceInput = {
    id?: string
    orderId: string
    reviewerId: string
    freelancerId: string
    rating?: number | null
    comment?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReviewCreateOrConnectWithoutInvoiceInput = {
    where: ReviewWhereUniqueInput
    create: XOR<ReviewCreateWithoutInvoiceInput, ReviewUncheckedCreateWithoutInvoiceInput>
  }

  export type ReviewCreateManyInvoiceInputEnvelope = {
    data: ReviewCreateManyInvoiceInput | ReviewCreateManyInvoiceInput[]
    skipDuplicates?: boolean
  }

  export type OrderUpsertWithWhereUniqueWithoutInvoiceInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutInvoiceInput, OrderUncheckedUpdateWithoutInvoiceInput>
    create: XOR<OrderCreateWithoutInvoiceInput, OrderUncheckedCreateWithoutInvoiceInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutInvoiceInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutInvoiceInput, OrderUncheckedUpdateWithoutInvoiceInput>
  }

  export type OrderUpdateManyWithWhereWithoutInvoiceInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutInvoiceInput>
  }

  export type PaymentUpsertWithWhereUniqueWithoutInvoiceInput = {
    where: PaymentWhereUniqueInput
    update: XOR<PaymentUpdateWithoutInvoiceInput, PaymentUncheckedUpdateWithoutInvoiceInput>
    create: XOR<PaymentCreateWithoutInvoiceInput, PaymentUncheckedCreateWithoutInvoiceInput>
  }

  export type PaymentUpdateWithWhereUniqueWithoutInvoiceInput = {
    where: PaymentWhereUniqueInput
    data: XOR<PaymentUpdateWithoutInvoiceInput, PaymentUncheckedUpdateWithoutInvoiceInput>
  }

  export type PaymentUpdateManyWithWhereWithoutInvoiceInput = {
    where: PaymentScalarWhereInput
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyWithoutInvoiceInput>
  }

  export type UserUpsertWithoutInvoicesInput = {
    update: XOR<UserUpdateWithoutInvoicesInput, UserUncheckedUpdateWithoutInvoicesInput>
    create: XOR<UserCreateWithoutInvoicesInput, UserUncheckedCreateWithoutInvoicesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutInvoicesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutInvoicesInput, UserUncheckedUpdateWithoutInvoicesInput>
  }

  export type UserUpdateWithoutInvoicesInput = {
    id?: StringFieldUpdateOperationsInput | string
    fname?: StringFieldUpdateOperationsInput | string
    lname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableEnumRoleFieldUpdateOperationsInput | $Enums.Role | null
    profilePic?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshTokenExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    online?: BoolFieldUpdateOperationsInput | boolean
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    leadershipStyle?: NullableStringFieldUpdateOperationsInput | string | null
    teamSize?: NullableStringFieldUpdateOperationsInput | string | null
    achievements?: NullableStringFieldUpdateOperationsInput | string | null
    professionalDevelopment?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    altEmail?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    altPhone?: NullableStringFieldUpdateOperationsInput | string | null
    highestDegree?: NullableStringFieldUpdateOperationsInput | string | null
    citationStyles?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    disciplines?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    additionalSoftware?: NullableStringFieldUpdateOperationsInput | string | null
    aboutMe?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: OrderUpdateManyWithoutFreelancerNestedInput
    bids?: BidsUpdateManyWithoutFreelancerNestedInput
    assignments?: AssignmentUpdateManyWithoutFreelancerNestedInput
    SubmittedJobs?: SubmittedJobsUpdateManyWithoutFreelancerNestedInput
    cancelledJobs?: CancelledJobsUpdateManyWithoutFreelancerNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    fines?: FinesUpdateManyWithoutFreelancerNestedInput
    reviews?: ReviewUpdateManyWithoutReviewerNestedInput
    reviewed?: ReviewUpdateManyWithoutFreelancerNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    freelancerApplications?: FreelancerApplicationUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutInvoicesInput = {
    id?: StringFieldUpdateOperationsInput | string
    fname?: StringFieldUpdateOperationsInput | string
    lname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableEnumRoleFieldUpdateOperationsInput | $Enums.Role | null
    profilePic?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshTokenExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    online?: BoolFieldUpdateOperationsInput | boolean
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    leadershipStyle?: NullableStringFieldUpdateOperationsInput | string | null
    teamSize?: NullableStringFieldUpdateOperationsInput | string | null
    achievements?: NullableStringFieldUpdateOperationsInput | string | null
    professionalDevelopment?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    altEmail?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    altPhone?: NullableStringFieldUpdateOperationsInput | string | null
    highestDegree?: NullableStringFieldUpdateOperationsInput | string | null
    citationStyles?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    disciplines?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    additionalSoftware?: NullableStringFieldUpdateOperationsInput | string | null
    aboutMe?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: OrderUncheckedUpdateManyWithoutFreelancerNestedInput
    bids?: BidsUncheckedUpdateManyWithoutFreelancerNestedInput
    assignments?: AssignmentUncheckedUpdateManyWithoutFreelancerNestedInput
    SubmittedJobs?: SubmittedJobsUncheckedUpdateManyWithoutFreelancerNestedInput
    cancelledJobs?: CancelledJobsUncheckedUpdateManyWithoutFreelancerNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    fines?: FinesUncheckedUpdateManyWithoutFreelancerNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutReviewerNestedInput
    reviewed?: ReviewUncheckedUpdateManyWithoutFreelancerNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    freelancerApplications?: FreelancerApplicationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type FinesUpsertWithWhereUniqueWithoutInvoiceInput = {
    where: FinesWhereUniqueInput
    update: XOR<FinesUpdateWithoutInvoiceInput, FinesUncheckedUpdateWithoutInvoiceInput>
    create: XOR<FinesCreateWithoutInvoiceInput, FinesUncheckedCreateWithoutInvoiceInput>
  }

  export type FinesUpdateWithWhereUniqueWithoutInvoiceInput = {
    where: FinesWhereUniqueInput
    data: XOR<FinesUpdateWithoutInvoiceInput, FinesUncheckedUpdateWithoutInvoiceInput>
  }

  export type FinesUpdateManyWithWhereWithoutInvoiceInput = {
    where: FinesScalarWhereInput
    data: XOR<FinesUpdateManyMutationInput, FinesUncheckedUpdateManyWithoutInvoiceInput>
  }

  export type ReviewUpsertWithWhereUniqueWithoutInvoiceInput = {
    where: ReviewWhereUniqueInput
    update: XOR<ReviewUpdateWithoutInvoiceInput, ReviewUncheckedUpdateWithoutInvoiceInput>
    create: XOR<ReviewCreateWithoutInvoiceInput, ReviewUncheckedCreateWithoutInvoiceInput>
  }

  export type ReviewUpdateWithWhereUniqueWithoutInvoiceInput = {
    where: ReviewWhereUniqueInput
    data: XOR<ReviewUpdateWithoutInvoiceInput, ReviewUncheckedUpdateWithoutInvoiceInput>
  }

  export type ReviewUpdateManyWithWhereWithoutInvoiceInput = {
    where: ReviewScalarWhereInput
    data: XOR<ReviewUpdateManyMutationInput, ReviewUncheckedUpdateManyWithoutInvoiceInput>
  }

  export type InvoiceCreateWithoutPaymentsInput = {
    id?: string
    invoiceNumber: string
    createdAt?: Date | string
    updatedAt?: Date | string
    totalAmount?: number
    finalAmount?: number
    isDraft?: boolean
    orders?: OrderCreateNestedManyWithoutInvoiceInput
    user: UserCreateNestedOneWithoutInvoicesInput
    fines?: FinesCreateNestedManyWithoutInvoiceInput
    reviews?: ReviewCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceUncheckedCreateWithoutPaymentsInput = {
    id?: string
    invoiceNumber: string
    createdAt?: Date | string
    updatedAt?: Date | string
    totalAmount?: number
    finalAmount?: number
    userId: string
    isDraft?: boolean
    orders?: OrderUncheckedCreateNestedManyWithoutInvoiceInput
    fines?: FinesUncheckedCreateNestedManyWithoutInvoiceInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceCreateOrConnectWithoutPaymentsInput = {
    where: InvoiceWhereUniqueInput
    create: XOR<InvoiceCreateWithoutPaymentsInput, InvoiceUncheckedCreateWithoutPaymentsInput>
  }

  export type UserCreateWithoutPaymentsInput = {
    id?: string
    fname: string
    lname: string
    email: string
    password: string
    role?: $Enums.Role | null
    profilePic?: string | null
    refreshToken?: string | null
    refreshTokenExp?: Date | string | null
    online?: boolean
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    experience?: string | null
    leadershipStyle?: string | null
    teamSize?: string | null
    achievements?: string | null
    professionalDevelopment?: string | null
    gender?: string | null
    country?: string | null
    city?: string | null
    altEmail?: string | null
    phone?: string | null
    altPhone?: string | null
    highestDegree?: string | null
    citationStyles?: string | null
    languages?: string | null
    disciplines?: string | null
    specialization?: string | null
    additionalSoftware?: string | null
    aboutMe?: string | null
    orders?: OrderCreateNestedManyWithoutFreelancerInput
    bids?: BidsCreateNestedManyWithoutFreelancerInput
    assignments?: AssignmentCreateNestedManyWithoutFreelancerInput
    SubmittedJobs?: SubmittedJobsCreateNestedManyWithoutFreelancerInput
    cancelledJobs?: CancelledJobsCreateNestedManyWithoutFreelancerInput
    invoices?: InvoiceCreateNestedManyWithoutUserInput
    fines?: FinesCreateNestedManyWithoutFreelancerInput
    reviews?: ReviewCreateNestedManyWithoutReviewerInput
    reviewed?: ReviewCreateNestedManyWithoutFreelancerInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    freelancerApplications?: FreelancerApplicationCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutPaymentsInput = {
    id?: string
    fname: string
    lname: string
    email: string
    password: string
    role?: $Enums.Role | null
    profilePic?: string | null
    refreshToken?: string | null
    refreshTokenExp?: Date | string | null
    online?: boolean
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    experience?: string | null
    leadershipStyle?: string | null
    teamSize?: string | null
    achievements?: string | null
    professionalDevelopment?: string | null
    gender?: string | null
    country?: string | null
    city?: string | null
    altEmail?: string | null
    phone?: string | null
    altPhone?: string | null
    highestDegree?: string | null
    citationStyles?: string | null
    languages?: string | null
    disciplines?: string | null
    specialization?: string | null
    additionalSoftware?: string | null
    aboutMe?: string | null
    orders?: OrderUncheckedCreateNestedManyWithoutFreelancerInput
    bids?: BidsUncheckedCreateNestedManyWithoutFreelancerInput
    assignments?: AssignmentUncheckedCreateNestedManyWithoutFreelancerInput
    SubmittedJobs?: SubmittedJobsUncheckedCreateNestedManyWithoutFreelancerInput
    cancelledJobs?: CancelledJobsUncheckedCreateNestedManyWithoutFreelancerInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutUserInput
    fines?: FinesUncheckedCreateNestedManyWithoutFreelancerInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutReviewerInput
    reviewed?: ReviewUncheckedCreateNestedManyWithoutFreelancerInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    freelancerApplications?: FreelancerApplicationUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutPaymentsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutPaymentsInput, UserUncheckedCreateWithoutPaymentsInput>
  }

  export type InvoiceUpsertWithoutPaymentsInput = {
    update: XOR<InvoiceUpdateWithoutPaymentsInput, InvoiceUncheckedUpdateWithoutPaymentsInput>
    create: XOR<InvoiceCreateWithoutPaymentsInput, InvoiceUncheckedCreateWithoutPaymentsInput>
    where?: InvoiceWhereInput
  }

  export type InvoiceUpdateToOneWithWhereWithoutPaymentsInput = {
    where?: InvoiceWhereInput
    data: XOR<InvoiceUpdateWithoutPaymentsInput, InvoiceUncheckedUpdateWithoutPaymentsInput>
  }

  export type InvoiceUpdateWithoutPaymentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalAmount?: IntFieldUpdateOperationsInput | number
    finalAmount?: IntFieldUpdateOperationsInput | number
    isDraft?: BoolFieldUpdateOperationsInput | boolean
    orders?: OrderUpdateManyWithoutInvoiceNestedInput
    user?: UserUpdateOneRequiredWithoutInvoicesNestedInput
    fines?: FinesUpdateManyWithoutInvoiceNestedInput
    reviews?: ReviewUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateWithoutPaymentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalAmount?: IntFieldUpdateOperationsInput | number
    finalAmount?: IntFieldUpdateOperationsInput | number
    userId?: StringFieldUpdateOperationsInput | string
    isDraft?: BoolFieldUpdateOperationsInput | boolean
    orders?: OrderUncheckedUpdateManyWithoutInvoiceNestedInput
    fines?: FinesUncheckedUpdateManyWithoutInvoiceNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutInvoiceNestedInput
  }

  export type UserUpsertWithoutPaymentsInput = {
    update: XOR<UserUpdateWithoutPaymentsInput, UserUncheckedUpdateWithoutPaymentsInput>
    create: XOR<UserCreateWithoutPaymentsInput, UserUncheckedCreateWithoutPaymentsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutPaymentsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutPaymentsInput, UserUncheckedUpdateWithoutPaymentsInput>
  }

  export type UserUpdateWithoutPaymentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    fname?: StringFieldUpdateOperationsInput | string
    lname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableEnumRoleFieldUpdateOperationsInput | $Enums.Role | null
    profilePic?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshTokenExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    online?: BoolFieldUpdateOperationsInput | boolean
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    leadershipStyle?: NullableStringFieldUpdateOperationsInput | string | null
    teamSize?: NullableStringFieldUpdateOperationsInput | string | null
    achievements?: NullableStringFieldUpdateOperationsInput | string | null
    professionalDevelopment?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    altEmail?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    altPhone?: NullableStringFieldUpdateOperationsInput | string | null
    highestDegree?: NullableStringFieldUpdateOperationsInput | string | null
    citationStyles?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    disciplines?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    additionalSoftware?: NullableStringFieldUpdateOperationsInput | string | null
    aboutMe?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: OrderUpdateManyWithoutFreelancerNestedInput
    bids?: BidsUpdateManyWithoutFreelancerNestedInput
    assignments?: AssignmentUpdateManyWithoutFreelancerNestedInput
    SubmittedJobs?: SubmittedJobsUpdateManyWithoutFreelancerNestedInput
    cancelledJobs?: CancelledJobsUpdateManyWithoutFreelancerNestedInput
    invoices?: InvoiceUpdateManyWithoutUserNestedInput
    fines?: FinesUpdateManyWithoutFreelancerNestedInput
    reviews?: ReviewUpdateManyWithoutReviewerNestedInput
    reviewed?: ReviewUpdateManyWithoutFreelancerNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    freelancerApplications?: FreelancerApplicationUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutPaymentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    fname?: StringFieldUpdateOperationsInput | string
    lname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableEnumRoleFieldUpdateOperationsInput | $Enums.Role | null
    profilePic?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshTokenExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    online?: BoolFieldUpdateOperationsInput | boolean
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    leadershipStyle?: NullableStringFieldUpdateOperationsInput | string | null
    teamSize?: NullableStringFieldUpdateOperationsInput | string | null
    achievements?: NullableStringFieldUpdateOperationsInput | string | null
    professionalDevelopment?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    altEmail?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    altPhone?: NullableStringFieldUpdateOperationsInput | string | null
    highestDegree?: NullableStringFieldUpdateOperationsInput | string | null
    citationStyles?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    disciplines?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    additionalSoftware?: NullableStringFieldUpdateOperationsInput | string | null
    aboutMe?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: OrderUncheckedUpdateManyWithoutFreelancerNestedInput
    bids?: BidsUncheckedUpdateManyWithoutFreelancerNestedInput
    assignments?: AssignmentUncheckedUpdateManyWithoutFreelancerNestedInput
    SubmittedJobs?: SubmittedJobsUncheckedUpdateManyWithoutFreelancerNestedInput
    cancelledJobs?: CancelledJobsUncheckedUpdateManyWithoutFreelancerNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutUserNestedInput
    fines?: FinesUncheckedUpdateManyWithoutFreelancerNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutReviewerNestedInput
    reviewed?: ReviewUncheckedUpdateManyWithoutFreelancerNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    freelancerApplications?: FreelancerApplicationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type OrderCreateWithoutFinesInput = {
    id?: string
    orderId: string
    topic: string
    category?: string | null
    service?: string | null
    sources?: string | null
    citation?: string | null
    pages?: Decimal | DecimalJsLike | number | string | null
    cpp?: number
    amount?: number
    deadline: Date | string
    duration: string
    instructions: string
    attachments?: OrderCreateattachmentsInput | string[]
    additionalNotes?: string | null
    status?: $Enums.OrderStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    freelancer?: UserCreateNestedOneWithoutOrdersInput
    bids?: BidsCreateNestedManyWithoutOrderInput
    assignments?: AssignmentCreateNestedManyWithoutOrderInput
    SubmittedJobs?: SubmittedJobsCreateNestedManyWithoutOrderInput
    cancelledJobs?: CancelledJobsCreateNestedManyWithoutOrderInput
    reviews?: ReviewCreateNestedManyWithoutOrderInput
    invoice?: InvoiceCreateNestedOneWithoutOrdersInput
    notifications?: NotificationCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutFinesInput = {
    id?: string
    orderId: string
    topic: string
    category?: string | null
    service?: string | null
    sources?: string | null
    citation?: string | null
    pages?: Decimal | DecimalJsLike | number | string | null
    cpp?: number
    amount?: number
    deadline: Date | string
    duration: string
    instructions: string
    attachments?: OrderCreateattachmentsInput | string[]
    additionalNotes?: string | null
    status?: $Enums.OrderStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    freelancerId?: string | null
    invoiceId?: string | null
    bids?: BidsUncheckedCreateNestedManyWithoutOrderInput
    assignments?: AssignmentUncheckedCreateNestedManyWithoutOrderInput
    SubmittedJobs?: SubmittedJobsUncheckedCreateNestedManyWithoutOrderInput
    cancelledJobs?: CancelledJobsUncheckedCreateNestedManyWithoutOrderInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutOrderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutFinesInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutFinesInput, OrderUncheckedCreateWithoutFinesInput>
  }

  export type UserCreateWithoutFinesInput = {
    id?: string
    fname: string
    lname: string
    email: string
    password: string
    role?: $Enums.Role | null
    profilePic?: string | null
    refreshToken?: string | null
    refreshTokenExp?: Date | string | null
    online?: boolean
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    experience?: string | null
    leadershipStyle?: string | null
    teamSize?: string | null
    achievements?: string | null
    professionalDevelopment?: string | null
    gender?: string | null
    country?: string | null
    city?: string | null
    altEmail?: string | null
    phone?: string | null
    altPhone?: string | null
    highestDegree?: string | null
    citationStyles?: string | null
    languages?: string | null
    disciplines?: string | null
    specialization?: string | null
    additionalSoftware?: string | null
    aboutMe?: string | null
    orders?: OrderCreateNestedManyWithoutFreelancerInput
    bids?: BidsCreateNestedManyWithoutFreelancerInput
    assignments?: AssignmentCreateNestedManyWithoutFreelancerInput
    SubmittedJobs?: SubmittedJobsCreateNestedManyWithoutFreelancerInput
    cancelledJobs?: CancelledJobsCreateNestedManyWithoutFreelancerInput
    invoices?: InvoiceCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutReviewerInput
    reviewed?: ReviewCreateNestedManyWithoutFreelancerInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    freelancerApplications?: FreelancerApplicationCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutFinesInput = {
    id?: string
    fname: string
    lname: string
    email: string
    password: string
    role?: $Enums.Role | null
    profilePic?: string | null
    refreshToken?: string | null
    refreshTokenExp?: Date | string | null
    online?: boolean
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    experience?: string | null
    leadershipStyle?: string | null
    teamSize?: string | null
    achievements?: string | null
    professionalDevelopment?: string | null
    gender?: string | null
    country?: string | null
    city?: string | null
    altEmail?: string | null
    phone?: string | null
    altPhone?: string | null
    highestDegree?: string | null
    citationStyles?: string | null
    languages?: string | null
    disciplines?: string | null
    specialization?: string | null
    additionalSoftware?: string | null
    aboutMe?: string | null
    orders?: OrderUncheckedCreateNestedManyWithoutFreelancerInput
    bids?: BidsUncheckedCreateNestedManyWithoutFreelancerInput
    assignments?: AssignmentUncheckedCreateNestedManyWithoutFreelancerInput
    SubmittedJobs?: SubmittedJobsUncheckedCreateNestedManyWithoutFreelancerInput
    cancelledJobs?: CancelledJobsUncheckedCreateNestedManyWithoutFreelancerInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutReviewerInput
    reviewed?: ReviewUncheckedCreateNestedManyWithoutFreelancerInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    freelancerApplications?: FreelancerApplicationUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutFinesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFinesInput, UserUncheckedCreateWithoutFinesInput>
  }

  export type InvoiceCreateWithoutFinesInput = {
    id?: string
    invoiceNumber: string
    createdAt?: Date | string
    updatedAt?: Date | string
    totalAmount?: number
    finalAmount?: number
    isDraft?: boolean
    orders?: OrderCreateNestedManyWithoutInvoiceInput
    payments?: PaymentCreateNestedManyWithoutInvoiceInput
    user: UserCreateNestedOneWithoutInvoicesInput
    reviews?: ReviewCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceUncheckedCreateWithoutFinesInput = {
    id?: string
    invoiceNumber: string
    createdAt?: Date | string
    updatedAt?: Date | string
    totalAmount?: number
    finalAmount?: number
    userId: string
    isDraft?: boolean
    orders?: OrderUncheckedCreateNestedManyWithoutInvoiceInput
    payments?: PaymentUncheckedCreateNestedManyWithoutInvoiceInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceCreateOrConnectWithoutFinesInput = {
    where: InvoiceWhereUniqueInput
    create: XOR<InvoiceCreateWithoutFinesInput, InvoiceUncheckedCreateWithoutFinesInput>
  }

  export type OrderUpsertWithoutFinesInput = {
    update: XOR<OrderUpdateWithoutFinesInput, OrderUncheckedUpdateWithoutFinesInput>
    create: XOR<OrderCreateWithoutFinesInput, OrderUncheckedCreateWithoutFinesInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutFinesInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutFinesInput, OrderUncheckedUpdateWithoutFinesInput>
  }

  export type OrderUpdateWithoutFinesInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    topic?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    service?: NullableStringFieldUpdateOperationsInput | string | null
    sources?: NullableStringFieldUpdateOperationsInput | string | null
    citation?: NullableStringFieldUpdateOperationsInput | string | null
    pages?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cpp?: IntFieldUpdateOperationsInput | number
    amount?: IntFieldUpdateOperationsInput | number
    deadline?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: StringFieldUpdateOperationsInput | string
    instructions?: StringFieldUpdateOperationsInput | string
    attachments?: OrderUpdateattachmentsInput | string[]
    additionalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    freelancer?: UserUpdateOneWithoutOrdersNestedInput
    bids?: BidsUpdateManyWithoutOrderNestedInput
    assignments?: AssignmentUpdateManyWithoutOrderNestedInput
    SubmittedJobs?: SubmittedJobsUpdateManyWithoutOrderNestedInput
    cancelledJobs?: CancelledJobsUpdateManyWithoutOrderNestedInput
    reviews?: ReviewUpdateManyWithoutOrderNestedInput
    invoice?: InvoiceUpdateOneWithoutOrdersNestedInput
    notifications?: NotificationUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutFinesInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    topic?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    service?: NullableStringFieldUpdateOperationsInput | string | null
    sources?: NullableStringFieldUpdateOperationsInput | string | null
    citation?: NullableStringFieldUpdateOperationsInput | string | null
    pages?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cpp?: IntFieldUpdateOperationsInput | number
    amount?: IntFieldUpdateOperationsInput | number
    deadline?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: StringFieldUpdateOperationsInput | string
    instructions?: StringFieldUpdateOperationsInput | string
    attachments?: OrderUpdateattachmentsInput | string[]
    additionalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    freelancerId?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    bids?: BidsUncheckedUpdateManyWithoutOrderNestedInput
    assignments?: AssignmentUncheckedUpdateManyWithoutOrderNestedInput
    SubmittedJobs?: SubmittedJobsUncheckedUpdateManyWithoutOrderNestedInput
    cancelledJobs?: CancelledJobsUncheckedUpdateManyWithoutOrderNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutOrderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type UserUpsertWithoutFinesInput = {
    update: XOR<UserUpdateWithoutFinesInput, UserUncheckedUpdateWithoutFinesInput>
    create: XOR<UserCreateWithoutFinesInput, UserUncheckedCreateWithoutFinesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutFinesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutFinesInput, UserUncheckedUpdateWithoutFinesInput>
  }

  export type UserUpdateWithoutFinesInput = {
    id?: StringFieldUpdateOperationsInput | string
    fname?: StringFieldUpdateOperationsInput | string
    lname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableEnumRoleFieldUpdateOperationsInput | $Enums.Role | null
    profilePic?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshTokenExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    online?: BoolFieldUpdateOperationsInput | boolean
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    leadershipStyle?: NullableStringFieldUpdateOperationsInput | string | null
    teamSize?: NullableStringFieldUpdateOperationsInput | string | null
    achievements?: NullableStringFieldUpdateOperationsInput | string | null
    professionalDevelopment?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    altEmail?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    altPhone?: NullableStringFieldUpdateOperationsInput | string | null
    highestDegree?: NullableStringFieldUpdateOperationsInput | string | null
    citationStyles?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    disciplines?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    additionalSoftware?: NullableStringFieldUpdateOperationsInput | string | null
    aboutMe?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: OrderUpdateManyWithoutFreelancerNestedInput
    bids?: BidsUpdateManyWithoutFreelancerNestedInput
    assignments?: AssignmentUpdateManyWithoutFreelancerNestedInput
    SubmittedJobs?: SubmittedJobsUpdateManyWithoutFreelancerNestedInput
    cancelledJobs?: CancelledJobsUpdateManyWithoutFreelancerNestedInput
    invoices?: InvoiceUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutReviewerNestedInput
    reviewed?: ReviewUpdateManyWithoutFreelancerNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    freelancerApplications?: FreelancerApplicationUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutFinesInput = {
    id?: StringFieldUpdateOperationsInput | string
    fname?: StringFieldUpdateOperationsInput | string
    lname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableEnumRoleFieldUpdateOperationsInput | $Enums.Role | null
    profilePic?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshTokenExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    online?: BoolFieldUpdateOperationsInput | boolean
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    leadershipStyle?: NullableStringFieldUpdateOperationsInput | string | null
    teamSize?: NullableStringFieldUpdateOperationsInput | string | null
    achievements?: NullableStringFieldUpdateOperationsInput | string | null
    professionalDevelopment?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    altEmail?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    altPhone?: NullableStringFieldUpdateOperationsInput | string | null
    highestDegree?: NullableStringFieldUpdateOperationsInput | string | null
    citationStyles?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    disciplines?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    additionalSoftware?: NullableStringFieldUpdateOperationsInput | string | null
    aboutMe?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: OrderUncheckedUpdateManyWithoutFreelancerNestedInput
    bids?: BidsUncheckedUpdateManyWithoutFreelancerNestedInput
    assignments?: AssignmentUncheckedUpdateManyWithoutFreelancerNestedInput
    SubmittedJobs?: SubmittedJobsUncheckedUpdateManyWithoutFreelancerNestedInput
    cancelledJobs?: CancelledJobsUncheckedUpdateManyWithoutFreelancerNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutReviewerNestedInput
    reviewed?: ReviewUncheckedUpdateManyWithoutFreelancerNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    freelancerApplications?: FreelancerApplicationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type InvoiceUpsertWithoutFinesInput = {
    update: XOR<InvoiceUpdateWithoutFinesInput, InvoiceUncheckedUpdateWithoutFinesInput>
    create: XOR<InvoiceCreateWithoutFinesInput, InvoiceUncheckedCreateWithoutFinesInput>
    where?: InvoiceWhereInput
  }

  export type InvoiceUpdateToOneWithWhereWithoutFinesInput = {
    where?: InvoiceWhereInput
    data: XOR<InvoiceUpdateWithoutFinesInput, InvoiceUncheckedUpdateWithoutFinesInput>
  }

  export type InvoiceUpdateWithoutFinesInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalAmount?: IntFieldUpdateOperationsInput | number
    finalAmount?: IntFieldUpdateOperationsInput | number
    isDraft?: BoolFieldUpdateOperationsInput | boolean
    orders?: OrderUpdateManyWithoutInvoiceNestedInput
    payments?: PaymentUpdateManyWithoutInvoiceNestedInput
    user?: UserUpdateOneRequiredWithoutInvoicesNestedInput
    reviews?: ReviewUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateWithoutFinesInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalAmount?: IntFieldUpdateOperationsInput | number
    finalAmount?: IntFieldUpdateOperationsInput | number
    userId?: StringFieldUpdateOperationsInput | string
    isDraft?: BoolFieldUpdateOperationsInput | boolean
    orders?: OrderUncheckedUpdateManyWithoutInvoiceNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutInvoiceNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutInvoiceNestedInput
  }

  export type OrderCreateWithoutReviewsInput = {
    id?: string
    orderId: string
    topic: string
    category?: string | null
    service?: string | null
    sources?: string | null
    citation?: string | null
    pages?: Decimal | DecimalJsLike | number | string | null
    cpp?: number
    amount?: number
    deadline: Date | string
    duration: string
    instructions: string
    attachments?: OrderCreateattachmentsInput | string[]
    additionalNotes?: string | null
    status?: $Enums.OrderStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    freelancer?: UserCreateNestedOneWithoutOrdersInput
    bids?: BidsCreateNestedManyWithoutOrderInput
    assignments?: AssignmentCreateNestedManyWithoutOrderInput
    SubmittedJobs?: SubmittedJobsCreateNestedManyWithoutOrderInput
    cancelledJobs?: CancelledJobsCreateNestedManyWithoutOrderInput
    fines?: FinesCreateNestedManyWithoutOrderInput
    invoice?: InvoiceCreateNestedOneWithoutOrdersInput
    notifications?: NotificationCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutReviewsInput = {
    id?: string
    orderId: string
    topic: string
    category?: string | null
    service?: string | null
    sources?: string | null
    citation?: string | null
    pages?: Decimal | DecimalJsLike | number | string | null
    cpp?: number
    amount?: number
    deadline: Date | string
    duration: string
    instructions: string
    attachments?: OrderCreateattachmentsInput | string[]
    additionalNotes?: string | null
    status?: $Enums.OrderStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    freelancerId?: string | null
    invoiceId?: string | null
    bids?: BidsUncheckedCreateNestedManyWithoutOrderInput
    assignments?: AssignmentUncheckedCreateNestedManyWithoutOrderInput
    SubmittedJobs?: SubmittedJobsUncheckedCreateNestedManyWithoutOrderInput
    cancelledJobs?: CancelledJobsUncheckedCreateNestedManyWithoutOrderInput
    fines?: FinesUncheckedCreateNestedManyWithoutOrderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutReviewsInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutReviewsInput, OrderUncheckedCreateWithoutReviewsInput>
  }

  export type UserCreateWithoutReviewsInput = {
    id?: string
    fname: string
    lname: string
    email: string
    password: string
    role?: $Enums.Role | null
    profilePic?: string | null
    refreshToken?: string | null
    refreshTokenExp?: Date | string | null
    online?: boolean
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    experience?: string | null
    leadershipStyle?: string | null
    teamSize?: string | null
    achievements?: string | null
    professionalDevelopment?: string | null
    gender?: string | null
    country?: string | null
    city?: string | null
    altEmail?: string | null
    phone?: string | null
    altPhone?: string | null
    highestDegree?: string | null
    citationStyles?: string | null
    languages?: string | null
    disciplines?: string | null
    specialization?: string | null
    additionalSoftware?: string | null
    aboutMe?: string | null
    orders?: OrderCreateNestedManyWithoutFreelancerInput
    bids?: BidsCreateNestedManyWithoutFreelancerInput
    assignments?: AssignmentCreateNestedManyWithoutFreelancerInput
    SubmittedJobs?: SubmittedJobsCreateNestedManyWithoutFreelancerInput
    cancelledJobs?: CancelledJobsCreateNestedManyWithoutFreelancerInput
    invoices?: InvoiceCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    fines?: FinesCreateNestedManyWithoutFreelancerInput
    reviewed?: ReviewCreateNestedManyWithoutFreelancerInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    freelancerApplications?: FreelancerApplicationCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutReviewsInput = {
    id?: string
    fname: string
    lname: string
    email: string
    password: string
    role?: $Enums.Role | null
    profilePic?: string | null
    refreshToken?: string | null
    refreshTokenExp?: Date | string | null
    online?: boolean
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    experience?: string | null
    leadershipStyle?: string | null
    teamSize?: string | null
    achievements?: string | null
    professionalDevelopment?: string | null
    gender?: string | null
    country?: string | null
    city?: string | null
    altEmail?: string | null
    phone?: string | null
    altPhone?: string | null
    highestDegree?: string | null
    citationStyles?: string | null
    languages?: string | null
    disciplines?: string | null
    specialization?: string | null
    additionalSoftware?: string | null
    aboutMe?: string | null
    orders?: OrderUncheckedCreateNestedManyWithoutFreelancerInput
    bids?: BidsUncheckedCreateNestedManyWithoutFreelancerInput
    assignments?: AssignmentUncheckedCreateNestedManyWithoutFreelancerInput
    SubmittedJobs?: SubmittedJobsUncheckedCreateNestedManyWithoutFreelancerInput
    cancelledJobs?: CancelledJobsUncheckedCreateNestedManyWithoutFreelancerInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    fines?: FinesUncheckedCreateNestedManyWithoutFreelancerInput
    reviewed?: ReviewUncheckedCreateNestedManyWithoutFreelancerInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    freelancerApplications?: FreelancerApplicationUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutReviewsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReviewsInput, UserUncheckedCreateWithoutReviewsInput>
  }

  export type UserCreateWithoutReviewedInput = {
    id?: string
    fname: string
    lname: string
    email: string
    password: string
    role?: $Enums.Role | null
    profilePic?: string | null
    refreshToken?: string | null
    refreshTokenExp?: Date | string | null
    online?: boolean
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    experience?: string | null
    leadershipStyle?: string | null
    teamSize?: string | null
    achievements?: string | null
    professionalDevelopment?: string | null
    gender?: string | null
    country?: string | null
    city?: string | null
    altEmail?: string | null
    phone?: string | null
    altPhone?: string | null
    highestDegree?: string | null
    citationStyles?: string | null
    languages?: string | null
    disciplines?: string | null
    specialization?: string | null
    additionalSoftware?: string | null
    aboutMe?: string | null
    orders?: OrderCreateNestedManyWithoutFreelancerInput
    bids?: BidsCreateNestedManyWithoutFreelancerInput
    assignments?: AssignmentCreateNestedManyWithoutFreelancerInput
    SubmittedJobs?: SubmittedJobsCreateNestedManyWithoutFreelancerInput
    cancelledJobs?: CancelledJobsCreateNestedManyWithoutFreelancerInput
    invoices?: InvoiceCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    fines?: FinesCreateNestedManyWithoutFreelancerInput
    reviews?: ReviewCreateNestedManyWithoutReviewerInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    freelancerApplications?: FreelancerApplicationCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutReviewedInput = {
    id?: string
    fname: string
    lname: string
    email: string
    password: string
    role?: $Enums.Role | null
    profilePic?: string | null
    refreshToken?: string | null
    refreshTokenExp?: Date | string | null
    online?: boolean
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    experience?: string | null
    leadershipStyle?: string | null
    teamSize?: string | null
    achievements?: string | null
    professionalDevelopment?: string | null
    gender?: string | null
    country?: string | null
    city?: string | null
    altEmail?: string | null
    phone?: string | null
    altPhone?: string | null
    highestDegree?: string | null
    citationStyles?: string | null
    languages?: string | null
    disciplines?: string | null
    specialization?: string | null
    additionalSoftware?: string | null
    aboutMe?: string | null
    orders?: OrderUncheckedCreateNestedManyWithoutFreelancerInput
    bids?: BidsUncheckedCreateNestedManyWithoutFreelancerInput
    assignments?: AssignmentUncheckedCreateNestedManyWithoutFreelancerInput
    SubmittedJobs?: SubmittedJobsUncheckedCreateNestedManyWithoutFreelancerInput
    cancelledJobs?: CancelledJobsUncheckedCreateNestedManyWithoutFreelancerInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    fines?: FinesUncheckedCreateNestedManyWithoutFreelancerInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutReviewerInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    freelancerApplications?: FreelancerApplicationUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutReviewedInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReviewedInput, UserUncheckedCreateWithoutReviewedInput>
  }

  export type InvoiceCreateWithoutReviewsInput = {
    id?: string
    invoiceNumber: string
    createdAt?: Date | string
    updatedAt?: Date | string
    totalAmount?: number
    finalAmount?: number
    isDraft?: boolean
    orders?: OrderCreateNestedManyWithoutInvoiceInput
    payments?: PaymentCreateNestedManyWithoutInvoiceInput
    user: UserCreateNestedOneWithoutInvoicesInput
    fines?: FinesCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceUncheckedCreateWithoutReviewsInput = {
    id?: string
    invoiceNumber: string
    createdAt?: Date | string
    updatedAt?: Date | string
    totalAmount?: number
    finalAmount?: number
    userId: string
    isDraft?: boolean
    orders?: OrderUncheckedCreateNestedManyWithoutInvoiceInput
    payments?: PaymentUncheckedCreateNestedManyWithoutInvoiceInput
    fines?: FinesUncheckedCreateNestedManyWithoutInvoiceInput
  }

  export type InvoiceCreateOrConnectWithoutReviewsInput = {
    where: InvoiceWhereUniqueInput
    create: XOR<InvoiceCreateWithoutReviewsInput, InvoiceUncheckedCreateWithoutReviewsInput>
  }

  export type OrderUpsertWithoutReviewsInput = {
    update: XOR<OrderUpdateWithoutReviewsInput, OrderUncheckedUpdateWithoutReviewsInput>
    create: XOR<OrderCreateWithoutReviewsInput, OrderUncheckedCreateWithoutReviewsInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutReviewsInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutReviewsInput, OrderUncheckedUpdateWithoutReviewsInput>
  }

  export type OrderUpdateWithoutReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    topic?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    service?: NullableStringFieldUpdateOperationsInput | string | null
    sources?: NullableStringFieldUpdateOperationsInput | string | null
    citation?: NullableStringFieldUpdateOperationsInput | string | null
    pages?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cpp?: IntFieldUpdateOperationsInput | number
    amount?: IntFieldUpdateOperationsInput | number
    deadline?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: StringFieldUpdateOperationsInput | string
    instructions?: StringFieldUpdateOperationsInput | string
    attachments?: OrderUpdateattachmentsInput | string[]
    additionalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    freelancer?: UserUpdateOneWithoutOrdersNestedInput
    bids?: BidsUpdateManyWithoutOrderNestedInput
    assignments?: AssignmentUpdateManyWithoutOrderNestedInput
    SubmittedJobs?: SubmittedJobsUpdateManyWithoutOrderNestedInput
    cancelledJobs?: CancelledJobsUpdateManyWithoutOrderNestedInput
    fines?: FinesUpdateManyWithoutOrderNestedInput
    invoice?: InvoiceUpdateOneWithoutOrdersNestedInput
    notifications?: NotificationUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    topic?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    service?: NullableStringFieldUpdateOperationsInput | string | null
    sources?: NullableStringFieldUpdateOperationsInput | string | null
    citation?: NullableStringFieldUpdateOperationsInput | string | null
    pages?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cpp?: IntFieldUpdateOperationsInput | number
    amount?: IntFieldUpdateOperationsInput | number
    deadline?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: StringFieldUpdateOperationsInput | string
    instructions?: StringFieldUpdateOperationsInput | string
    attachments?: OrderUpdateattachmentsInput | string[]
    additionalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    freelancerId?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    bids?: BidsUncheckedUpdateManyWithoutOrderNestedInput
    assignments?: AssignmentUncheckedUpdateManyWithoutOrderNestedInput
    SubmittedJobs?: SubmittedJobsUncheckedUpdateManyWithoutOrderNestedInput
    cancelledJobs?: CancelledJobsUncheckedUpdateManyWithoutOrderNestedInput
    fines?: FinesUncheckedUpdateManyWithoutOrderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type UserUpsertWithoutReviewsInput = {
    update: XOR<UserUpdateWithoutReviewsInput, UserUncheckedUpdateWithoutReviewsInput>
    create: XOR<UserCreateWithoutReviewsInput, UserUncheckedCreateWithoutReviewsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReviewsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReviewsInput, UserUncheckedUpdateWithoutReviewsInput>
  }

  export type UserUpdateWithoutReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    fname?: StringFieldUpdateOperationsInput | string
    lname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableEnumRoleFieldUpdateOperationsInput | $Enums.Role | null
    profilePic?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshTokenExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    online?: BoolFieldUpdateOperationsInput | boolean
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    leadershipStyle?: NullableStringFieldUpdateOperationsInput | string | null
    teamSize?: NullableStringFieldUpdateOperationsInput | string | null
    achievements?: NullableStringFieldUpdateOperationsInput | string | null
    professionalDevelopment?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    altEmail?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    altPhone?: NullableStringFieldUpdateOperationsInput | string | null
    highestDegree?: NullableStringFieldUpdateOperationsInput | string | null
    citationStyles?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    disciplines?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    additionalSoftware?: NullableStringFieldUpdateOperationsInput | string | null
    aboutMe?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: OrderUpdateManyWithoutFreelancerNestedInput
    bids?: BidsUpdateManyWithoutFreelancerNestedInput
    assignments?: AssignmentUpdateManyWithoutFreelancerNestedInput
    SubmittedJobs?: SubmittedJobsUpdateManyWithoutFreelancerNestedInput
    cancelledJobs?: CancelledJobsUpdateManyWithoutFreelancerNestedInput
    invoices?: InvoiceUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    fines?: FinesUpdateManyWithoutFreelancerNestedInput
    reviewed?: ReviewUpdateManyWithoutFreelancerNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    freelancerApplications?: FreelancerApplicationUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    fname?: StringFieldUpdateOperationsInput | string
    lname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableEnumRoleFieldUpdateOperationsInput | $Enums.Role | null
    profilePic?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshTokenExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    online?: BoolFieldUpdateOperationsInput | boolean
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    leadershipStyle?: NullableStringFieldUpdateOperationsInput | string | null
    teamSize?: NullableStringFieldUpdateOperationsInput | string | null
    achievements?: NullableStringFieldUpdateOperationsInput | string | null
    professionalDevelopment?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    altEmail?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    altPhone?: NullableStringFieldUpdateOperationsInput | string | null
    highestDegree?: NullableStringFieldUpdateOperationsInput | string | null
    citationStyles?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    disciplines?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    additionalSoftware?: NullableStringFieldUpdateOperationsInput | string | null
    aboutMe?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: OrderUncheckedUpdateManyWithoutFreelancerNestedInput
    bids?: BidsUncheckedUpdateManyWithoutFreelancerNestedInput
    assignments?: AssignmentUncheckedUpdateManyWithoutFreelancerNestedInput
    SubmittedJobs?: SubmittedJobsUncheckedUpdateManyWithoutFreelancerNestedInput
    cancelledJobs?: CancelledJobsUncheckedUpdateManyWithoutFreelancerNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    fines?: FinesUncheckedUpdateManyWithoutFreelancerNestedInput
    reviewed?: ReviewUncheckedUpdateManyWithoutFreelancerNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    freelancerApplications?: FreelancerApplicationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserUpsertWithoutReviewedInput = {
    update: XOR<UserUpdateWithoutReviewedInput, UserUncheckedUpdateWithoutReviewedInput>
    create: XOR<UserCreateWithoutReviewedInput, UserUncheckedCreateWithoutReviewedInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReviewedInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReviewedInput, UserUncheckedUpdateWithoutReviewedInput>
  }

  export type UserUpdateWithoutReviewedInput = {
    id?: StringFieldUpdateOperationsInput | string
    fname?: StringFieldUpdateOperationsInput | string
    lname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableEnumRoleFieldUpdateOperationsInput | $Enums.Role | null
    profilePic?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshTokenExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    online?: BoolFieldUpdateOperationsInput | boolean
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    leadershipStyle?: NullableStringFieldUpdateOperationsInput | string | null
    teamSize?: NullableStringFieldUpdateOperationsInput | string | null
    achievements?: NullableStringFieldUpdateOperationsInput | string | null
    professionalDevelopment?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    altEmail?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    altPhone?: NullableStringFieldUpdateOperationsInput | string | null
    highestDegree?: NullableStringFieldUpdateOperationsInput | string | null
    citationStyles?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    disciplines?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    additionalSoftware?: NullableStringFieldUpdateOperationsInput | string | null
    aboutMe?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: OrderUpdateManyWithoutFreelancerNestedInput
    bids?: BidsUpdateManyWithoutFreelancerNestedInput
    assignments?: AssignmentUpdateManyWithoutFreelancerNestedInput
    SubmittedJobs?: SubmittedJobsUpdateManyWithoutFreelancerNestedInput
    cancelledJobs?: CancelledJobsUpdateManyWithoutFreelancerNestedInput
    invoices?: InvoiceUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    fines?: FinesUpdateManyWithoutFreelancerNestedInput
    reviews?: ReviewUpdateManyWithoutReviewerNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    freelancerApplications?: FreelancerApplicationUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutReviewedInput = {
    id?: StringFieldUpdateOperationsInput | string
    fname?: StringFieldUpdateOperationsInput | string
    lname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableEnumRoleFieldUpdateOperationsInput | $Enums.Role | null
    profilePic?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshTokenExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    online?: BoolFieldUpdateOperationsInput | boolean
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    leadershipStyle?: NullableStringFieldUpdateOperationsInput | string | null
    teamSize?: NullableStringFieldUpdateOperationsInput | string | null
    achievements?: NullableStringFieldUpdateOperationsInput | string | null
    professionalDevelopment?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    altEmail?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    altPhone?: NullableStringFieldUpdateOperationsInput | string | null
    highestDegree?: NullableStringFieldUpdateOperationsInput | string | null
    citationStyles?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    disciplines?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    additionalSoftware?: NullableStringFieldUpdateOperationsInput | string | null
    aboutMe?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: OrderUncheckedUpdateManyWithoutFreelancerNestedInput
    bids?: BidsUncheckedUpdateManyWithoutFreelancerNestedInput
    assignments?: AssignmentUncheckedUpdateManyWithoutFreelancerNestedInput
    SubmittedJobs?: SubmittedJobsUncheckedUpdateManyWithoutFreelancerNestedInput
    cancelledJobs?: CancelledJobsUncheckedUpdateManyWithoutFreelancerNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    fines?: FinesUncheckedUpdateManyWithoutFreelancerNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutReviewerNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    freelancerApplications?: FreelancerApplicationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type InvoiceUpsertWithoutReviewsInput = {
    update: XOR<InvoiceUpdateWithoutReviewsInput, InvoiceUncheckedUpdateWithoutReviewsInput>
    create: XOR<InvoiceCreateWithoutReviewsInput, InvoiceUncheckedCreateWithoutReviewsInput>
    where?: InvoiceWhereInput
  }

  export type InvoiceUpdateToOneWithWhereWithoutReviewsInput = {
    where?: InvoiceWhereInput
    data: XOR<InvoiceUpdateWithoutReviewsInput, InvoiceUncheckedUpdateWithoutReviewsInput>
  }

  export type InvoiceUpdateWithoutReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalAmount?: IntFieldUpdateOperationsInput | number
    finalAmount?: IntFieldUpdateOperationsInput | number
    isDraft?: BoolFieldUpdateOperationsInput | boolean
    orders?: OrderUpdateManyWithoutInvoiceNestedInput
    payments?: PaymentUpdateManyWithoutInvoiceNestedInput
    user?: UserUpdateOneRequiredWithoutInvoicesNestedInput
    fines?: FinesUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateWithoutReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalAmount?: IntFieldUpdateOperationsInput | number
    finalAmount?: IntFieldUpdateOperationsInput | number
    userId?: StringFieldUpdateOperationsInput | string
    isDraft?: BoolFieldUpdateOperationsInput | boolean
    orders?: OrderUncheckedUpdateManyWithoutInvoiceNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutInvoiceNestedInput
    fines?: FinesUncheckedUpdateManyWithoutInvoiceNestedInput
  }

  export type UserCreateWithoutNotificationsInput = {
    id?: string
    fname: string
    lname: string
    email: string
    password: string
    role?: $Enums.Role | null
    profilePic?: string | null
    refreshToken?: string | null
    refreshTokenExp?: Date | string | null
    online?: boolean
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    experience?: string | null
    leadershipStyle?: string | null
    teamSize?: string | null
    achievements?: string | null
    professionalDevelopment?: string | null
    gender?: string | null
    country?: string | null
    city?: string | null
    altEmail?: string | null
    phone?: string | null
    altPhone?: string | null
    highestDegree?: string | null
    citationStyles?: string | null
    languages?: string | null
    disciplines?: string | null
    specialization?: string | null
    additionalSoftware?: string | null
    aboutMe?: string | null
    orders?: OrderCreateNestedManyWithoutFreelancerInput
    bids?: BidsCreateNestedManyWithoutFreelancerInput
    assignments?: AssignmentCreateNestedManyWithoutFreelancerInput
    SubmittedJobs?: SubmittedJobsCreateNestedManyWithoutFreelancerInput
    cancelledJobs?: CancelledJobsCreateNestedManyWithoutFreelancerInput
    invoices?: InvoiceCreateNestedManyWithoutUserInput
    payments?: PaymentCreateNestedManyWithoutUserInput
    fines?: FinesCreateNestedManyWithoutFreelancerInput
    reviews?: ReviewCreateNestedManyWithoutReviewerInput
    reviewed?: ReviewCreateNestedManyWithoutFreelancerInput
    freelancerApplications?: FreelancerApplicationCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutNotificationsInput = {
    id?: string
    fname: string
    lname: string
    email: string
    password: string
    role?: $Enums.Role | null
    profilePic?: string | null
    refreshToken?: string | null
    refreshTokenExp?: Date | string | null
    online?: boolean
    active?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    experience?: string | null
    leadershipStyle?: string | null
    teamSize?: string | null
    achievements?: string | null
    professionalDevelopment?: string | null
    gender?: string | null
    country?: string | null
    city?: string | null
    altEmail?: string | null
    phone?: string | null
    altPhone?: string | null
    highestDegree?: string | null
    citationStyles?: string | null
    languages?: string | null
    disciplines?: string | null
    specialization?: string | null
    additionalSoftware?: string | null
    aboutMe?: string | null
    orders?: OrderUncheckedCreateNestedManyWithoutFreelancerInput
    bids?: BidsUncheckedCreateNestedManyWithoutFreelancerInput
    assignments?: AssignmentUncheckedCreateNestedManyWithoutFreelancerInput
    SubmittedJobs?: SubmittedJobsUncheckedCreateNestedManyWithoutFreelancerInput
    cancelledJobs?: CancelledJobsUncheckedCreateNestedManyWithoutFreelancerInput
    invoices?: InvoiceUncheckedCreateNestedManyWithoutUserInput
    payments?: PaymentUncheckedCreateNestedManyWithoutUserInput
    fines?: FinesUncheckedCreateNestedManyWithoutFreelancerInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutReviewerInput
    reviewed?: ReviewUncheckedCreateNestedManyWithoutFreelancerInput
    freelancerApplications?: FreelancerApplicationUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutNotificationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutNotificationsInput, UserUncheckedCreateWithoutNotificationsInput>
  }

  export type OrderCreateWithoutNotificationsInput = {
    id?: string
    orderId: string
    topic: string
    category?: string | null
    service?: string | null
    sources?: string | null
    citation?: string | null
    pages?: Decimal | DecimalJsLike | number | string | null
    cpp?: number
    amount?: number
    deadline: Date | string
    duration: string
    instructions: string
    attachments?: OrderCreateattachmentsInput | string[]
    additionalNotes?: string | null
    status?: $Enums.OrderStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    freelancer?: UserCreateNestedOneWithoutOrdersInput
    bids?: BidsCreateNestedManyWithoutOrderInput
    assignments?: AssignmentCreateNestedManyWithoutOrderInput
    SubmittedJobs?: SubmittedJobsCreateNestedManyWithoutOrderInput
    cancelledJobs?: CancelledJobsCreateNestedManyWithoutOrderInput
    fines?: FinesCreateNestedManyWithoutOrderInput
    reviews?: ReviewCreateNestedManyWithoutOrderInput
    invoice?: InvoiceCreateNestedOneWithoutOrdersInput
  }

  export type OrderUncheckedCreateWithoutNotificationsInput = {
    id?: string
    orderId: string
    topic: string
    category?: string | null
    service?: string | null
    sources?: string | null
    citation?: string | null
    pages?: Decimal | DecimalJsLike | number | string | null
    cpp?: number
    amount?: number
    deadline: Date | string
    duration: string
    instructions: string
    attachments?: OrderCreateattachmentsInput | string[]
    additionalNotes?: string | null
    status?: $Enums.OrderStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    freelancerId?: string | null
    invoiceId?: string | null
    bids?: BidsUncheckedCreateNestedManyWithoutOrderInput
    assignments?: AssignmentUncheckedCreateNestedManyWithoutOrderInput
    SubmittedJobs?: SubmittedJobsUncheckedCreateNestedManyWithoutOrderInput
    cancelledJobs?: CancelledJobsUncheckedCreateNestedManyWithoutOrderInput
    fines?: FinesUncheckedCreateNestedManyWithoutOrderInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutNotificationsInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutNotificationsInput, OrderUncheckedCreateWithoutNotificationsInput>
  }

  export type UserUpsertWithoutNotificationsInput = {
    update: XOR<UserUpdateWithoutNotificationsInput, UserUncheckedUpdateWithoutNotificationsInput>
    create: XOR<UserCreateWithoutNotificationsInput, UserUncheckedCreateWithoutNotificationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutNotificationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutNotificationsInput, UserUncheckedUpdateWithoutNotificationsInput>
  }

  export type UserUpdateWithoutNotificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    fname?: StringFieldUpdateOperationsInput | string
    lname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableEnumRoleFieldUpdateOperationsInput | $Enums.Role | null
    profilePic?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshTokenExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    online?: BoolFieldUpdateOperationsInput | boolean
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    leadershipStyle?: NullableStringFieldUpdateOperationsInput | string | null
    teamSize?: NullableStringFieldUpdateOperationsInput | string | null
    achievements?: NullableStringFieldUpdateOperationsInput | string | null
    professionalDevelopment?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    altEmail?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    altPhone?: NullableStringFieldUpdateOperationsInput | string | null
    highestDegree?: NullableStringFieldUpdateOperationsInput | string | null
    citationStyles?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    disciplines?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    additionalSoftware?: NullableStringFieldUpdateOperationsInput | string | null
    aboutMe?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: OrderUpdateManyWithoutFreelancerNestedInput
    bids?: BidsUpdateManyWithoutFreelancerNestedInput
    assignments?: AssignmentUpdateManyWithoutFreelancerNestedInput
    SubmittedJobs?: SubmittedJobsUpdateManyWithoutFreelancerNestedInput
    cancelledJobs?: CancelledJobsUpdateManyWithoutFreelancerNestedInput
    invoices?: InvoiceUpdateManyWithoutUserNestedInput
    payments?: PaymentUpdateManyWithoutUserNestedInput
    fines?: FinesUpdateManyWithoutFreelancerNestedInput
    reviews?: ReviewUpdateManyWithoutReviewerNestedInput
    reviewed?: ReviewUpdateManyWithoutFreelancerNestedInput
    freelancerApplications?: FreelancerApplicationUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutNotificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    fname?: StringFieldUpdateOperationsInput | string
    lname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableEnumRoleFieldUpdateOperationsInput | $Enums.Role | null
    profilePic?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshTokenExp?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    online?: BoolFieldUpdateOperationsInput | boolean
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    experience?: NullableStringFieldUpdateOperationsInput | string | null
    leadershipStyle?: NullableStringFieldUpdateOperationsInput | string | null
    teamSize?: NullableStringFieldUpdateOperationsInput | string | null
    achievements?: NullableStringFieldUpdateOperationsInput | string | null
    professionalDevelopment?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    altEmail?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    altPhone?: NullableStringFieldUpdateOperationsInput | string | null
    highestDegree?: NullableStringFieldUpdateOperationsInput | string | null
    citationStyles?: NullableStringFieldUpdateOperationsInput | string | null
    languages?: NullableStringFieldUpdateOperationsInput | string | null
    disciplines?: NullableStringFieldUpdateOperationsInput | string | null
    specialization?: NullableStringFieldUpdateOperationsInput | string | null
    additionalSoftware?: NullableStringFieldUpdateOperationsInput | string | null
    aboutMe?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: OrderUncheckedUpdateManyWithoutFreelancerNestedInput
    bids?: BidsUncheckedUpdateManyWithoutFreelancerNestedInput
    assignments?: AssignmentUncheckedUpdateManyWithoutFreelancerNestedInput
    SubmittedJobs?: SubmittedJobsUncheckedUpdateManyWithoutFreelancerNestedInput
    cancelledJobs?: CancelledJobsUncheckedUpdateManyWithoutFreelancerNestedInput
    invoices?: InvoiceUncheckedUpdateManyWithoutUserNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutUserNestedInput
    fines?: FinesUncheckedUpdateManyWithoutFreelancerNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutReviewerNestedInput
    reviewed?: ReviewUncheckedUpdateManyWithoutFreelancerNestedInput
    freelancerApplications?: FreelancerApplicationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type OrderUpsertWithoutNotificationsInput = {
    update: XOR<OrderUpdateWithoutNotificationsInput, OrderUncheckedUpdateWithoutNotificationsInput>
    create: XOR<OrderCreateWithoutNotificationsInput, OrderUncheckedCreateWithoutNotificationsInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutNotificationsInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutNotificationsInput, OrderUncheckedUpdateWithoutNotificationsInput>
  }

  export type OrderUpdateWithoutNotificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    topic?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    service?: NullableStringFieldUpdateOperationsInput | string | null
    sources?: NullableStringFieldUpdateOperationsInput | string | null
    citation?: NullableStringFieldUpdateOperationsInput | string | null
    pages?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cpp?: IntFieldUpdateOperationsInput | number
    amount?: IntFieldUpdateOperationsInput | number
    deadline?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: StringFieldUpdateOperationsInput | string
    instructions?: StringFieldUpdateOperationsInput | string
    attachments?: OrderUpdateattachmentsInput | string[]
    additionalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    freelancer?: UserUpdateOneWithoutOrdersNestedInput
    bids?: BidsUpdateManyWithoutOrderNestedInput
    assignments?: AssignmentUpdateManyWithoutOrderNestedInput
    SubmittedJobs?: SubmittedJobsUpdateManyWithoutOrderNestedInput
    cancelledJobs?: CancelledJobsUpdateManyWithoutOrderNestedInput
    fines?: FinesUpdateManyWithoutOrderNestedInput
    reviews?: ReviewUpdateManyWithoutOrderNestedInput
    invoice?: InvoiceUpdateOneWithoutOrdersNestedInput
  }

  export type OrderUncheckedUpdateWithoutNotificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    topic?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    service?: NullableStringFieldUpdateOperationsInput | string | null
    sources?: NullableStringFieldUpdateOperationsInput | string | null
    citation?: NullableStringFieldUpdateOperationsInput | string | null
    pages?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cpp?: IntFieldUpdateOperationsInput | number
    amount?: IntFieldUpdateOperationsInput | number
    deadline?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: StringFieldUpdateOperationsInput | string
    instructions?: StringFieldUpdateOperationsInput | string
    attachments?: OrderUpdateattachmentsInput | string[]
    additionalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    freelancerId?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    bids?: BidsUncheckedUpdateManyWithoutOrderNestedInput
    assignments?: AssignmentUncheckedUpdateManyWithoutOrderNestedInput
    SubmittedJobs?: SubmittedJobsUncheckedUpdateManyWithoutOrderNestedInput
    cancelledJobs?: CancelledJobsUncheckedUpdateManyWithoutOrderNestedInput
    fines?: FinesUncheckedUpdateManyWithoutOrderNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderCreateManyFreelancerInput = {
    id?: string
    orderId: string
    topic: string
    category?: string | null
    service?: string | null
    sources?: string | null
    citation?: string | null
    pages?: Decimal | DecimalJsLike | number | string | null
    cpp?: number
    amount?: number
    deadline: Date | string
    duration: string
    instructions: string
    attachments?: OrderCreateattachmentsInput | string[]
    additionalNotes?: string | null
    status?: $Enums.OrderStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    invoiceId?: string | null
  }

  export type BidsCreateManyFreelancerInput = {
    id?: string
    orderId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: $Enums.OrderStatus
  }

  export type AssignmentCreateManyFreelancerInput = {
    id?: string
    orderId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: $Enums.OrderStatus
  }

  export type SubmittedJobsCreateManyFreelancerInput = {
    id?: string
    orderId: string
    file_Path: string
    file_mimeType: string
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: $Enums.OrderStatus
  }

  export type CancelledJobsCreateManyFreelancerInput = {
    id?: string
    orderId: string
    attachments?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: $Enums.OrderStatus
  }

  export type InvoiceCreateManyUserInput = {
    id?: string
    invoiceNumber: string
    createdAt?: Date | string
    updatedAt?: Date | string
    totalAmount?: number
    finalAmount?: number
    isDraft?: boolean
  }

  export type PaymentCreateManyUserInput = {
    id?: string
    paymentRef: string
    amount: number
    modeOfPayment: $Enums.ModeOfPayment
    createdAt?: Date | string
    updatedAt?: Date | string
    invoiceId: string
  }

  export type FinesCreateManyFreelancerInput = {
    id?: string
    orderId: string
    amount: number
    reason?: string | null
    invoiceId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReviewCreateManyReviewerInput = {
    id?: string
    orderId: string
    freelancerId: string
    rating?: number | null
    comment?: string | null
    invoiceId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReviewCreateManyFreelancerInput = {
    id?: string
    orderId: string
    reviewerId: string
    rating?: number | null
    comment?: string | null
    invoiceId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type NotificationCreateManyUserInput = {
    id?: string
    orderId?: string | null
    title?: string | null
    message?: string | null
    read?: boolean
    type: $Enums.NotificationType
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FreelancerApplicationCreateManyUserInput = {
    id?: string
    status?: $Enums.ApplicationStatus
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderUpdateWithoutFreelancerInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    topic?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    service?: NullableStringFieldUpdateOperationsInput | string | null
    sources?: NullableStringFieldUpdateOperationsInput | string | null
    citation?: NullableStringFieldUpdateOperationsInput | string | null
    pages?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cpp?: IntFieldUpdateOperationsInput | number
    amount?: IntFieldUpdateOperationsInput | number
    deadline?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: StringFieldUpdateOperationsInput | string
    instructions?: StringFieldUpdateOperationsInput | string
    attachments?: OrderUpdateattachmentsInput | string[]
    additionalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    bids?: BidsUpdateManyWithoutOrderNestedInput
    assignments?: AssignmentUpdateManyWithoutOrderNestedInput
    SubmittedJobs?: SubmittedJobsUpdateManyWithoutOrderNestedInput
    cancelledJobs?: CancelledJobsUpdateManyWithoutOrderNestedInput
    fines?: FinesUpdateManyWithoutOrderNestedInput
    reviews?: ReviewUpdateManyWithoutOrderNestedInput
    invoice?: InvoiceUpdateOneWithoutOrdersNestedInput
    notifications?: NotificationUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutFreelancerInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    topic?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    service?: NullableStringFieldUpdateOperationsInput | string | null
    sources?: NullableStringFieldUpdateOperationsInput | string | null
    citation?: NullableStringFieldUpdateOperationsInput | string | null
    pages?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cpp?: IntFieldUpdateOperationsInput | number
    amount?: IntFieldUpdateOperationsInput | number
    deadline?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: StringFieldUpdateOperationsInput | string
    instructions?: StringFieldUpdateOperationsInput | string
    attachments?: OrderUpdateattachmentsInput | string[]
    additionalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    bids?: BidsUncheckedUpdateManyWithoutOrderNestedInput
    assignments?: AssignmentUncheckedUpdateManyWithoutOrderNestedInput
    SubmittedJobs?: SubmittedJobsUncheckedUpdateManyWithoutOrderNestedInput
    cancelledJobs?: CancelledJobsUncheckedUpdateManyWithoutOrderNestedInput
    fines?: FinesUncheckedUpdateManyWithoutOrderNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutOrderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutFreelancerInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    topic?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    service?: NullableStringFieldUpdateOperationsInput | string | null
    sources?: NullableStringFieldUpdateOperationsInput | string | null
    citation?: NullableStringFieldUpdateOperationsInput | string | null
    pages?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cpp?: IntFieldUpdateOperationsInput | number
    amount?: IntFieldUpdateOperationsInput | number
    deadline?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: StringFieldUpdateOperationsInput | string
    instructions?: StringFieldUpdateOperationsInput | string
    attachments?: OrderUpdateattachmentsInput | string[]
    additionalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BidsUpdateWithoutFreelancerInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    order?: OrderUpdateOneRequiredWithoutBidsNestedInput
  }

  export type BidsUncheckedUpdateWithoutFreelancerInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
  }

  export type BidsUncheckedUpdateManyWithoutFreelancerInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
  }

  export type AssignmentUpdateWithoutFreelancerInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    order?: OrderUpdateOneRequiredWithoutAssignmentsNestedInput
  }

  export type AssignmentUncheckedUpdateWithoutFreelancerInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
  }

  export type AssignmentUncheckedUpdateManyWithoutFreelancerInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
  }

  export type SubmittedJobsUpdateWithoutFreelancerInput = {
    id?: StringFieldUpdateOperationsInput | string
    file_Path?: StringFieldUpdateOperationsInput | string
    file_mimeType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    order?: OrderUpdateOneRequiredWithoutSubmittedJobsNestedInput
  }

  export type SubmittedJobsUncheckedUpdateWithoutFreelancerInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    file_Path?: StringFieldUpdateOperationsInput | string
    file_mimeType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
  }

  export type SubmittedJobsUncheckedUpdateManyWithoutFreelancerInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    file_Path?: StringFieldUpdateOperationsInput | string
    file_mimeType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
  }

  export type CancelledJobsUpdateWithoutFreelancerInput = {
    id?: StringFieldUpdateOperationsInput | string
    attachments?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    order?: OrderUpdateOneRequiredWithoutCancelledJobsNestedInput
  }

  export type CancelledJobsUncheckedUpdateWithoutFreelancerInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    attachments?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
  }

  export type CancelledJobsUncheckedUpdateManyWithoutFreelancerInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    attachments?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
  }

  export type InvoiceUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalAmount?: IntFieldUpdateOperationsInput | number
    finalAmount?: IntFieldUpdateOperationsInput | number
    isDraft?: BoolFieldUpdateOperationsInput | boolean
    orders?: OrderUpdateManyWithoutInvoiceNestedInput
    payments?: PaymentUpdateManyWithoutInvoiceNestedInput
    fines?: FinesUpdateManyWithoutInvoiceNestedInput
    reviews?: ReviewUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalAmount?: IntFieldUpdateOperationsInput | number
    finalAmount?: IntFieldUpdateOperationsInput | number
    isDraft?: BoolFieldUpdateOperationsInput | boolean
    orders?: OrderUncheckedUpdateManyWithoutInvoiceNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutInvoiceNestedInput
    fines?: FinesUncheckedUpdateManyWithoutInvoiceNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutInvoiceNestedInput
  }

  export type InvoiceUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    invoiceNumber?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    totalAmount?: IntFieldUpdateOperationsInput | number
    finalAmount?: IntFieldUpdateOperationsInput | number
    isDraft?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PaymentUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    paymentRef?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    modeOfPayment?: EnumModeOfPaymentFieldUpdateOperationsInput | $Enums.ModeOfPayment
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    invoice?: InvoiceUpdateOneRequiredWithoutPaymentsNestedInput
  }

  export type PaymentUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    paymentRef?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    modeOfPayment?: EnumModeOfPaymentFieldUpdateOperationsInput | $Enums.ModeOfPayment
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceId?: StringFieldUpdateOperationsInput | string
  }

  export type PaymentUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    paymentRef?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    modeOfPayment?: EnumModeOfPaymentFieldUpdateOperationsInput | $Enums.ModeOfPayment
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    invoiceId?: StringFieldUpdateOperationsInput | string
  }

  export type FinesUpdateWithoutFreelancerInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneRequiredWithoutFinesNestedInput
    invoice?: InvoiceUpdateOneWithoutFinesNestedInput
  }

  export type FinesUncheckedUpdateWithoutFreelancerInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FinesUncheckedUpdateManyWithoutFreelancerInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewUpdateWithoutReviewerInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneRequiredWithoutReviewsNestedInput
    freelancer?: UserUpdateOneRequiredWithoutReviewedNestedInput
    invoice?: InvoiceUpdateOneWithoutReviewsNestedInput
  }

  export type ReviewUncheckedUpdateWithoutReviewerInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    freelancerId?: StringFieldUpdateOperationsInput | string
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewUncheckedUpdateManyWithoutReviewerInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    freelancerId?: StringFieldUpdateOperationsInput | string
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewUpdateWithoutFreelancerInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneRequiredWithoutReviewsNestedInput
    reviewer?: UserUpdateOneRequiredWithoutReviewsNestedInput
    invoice?: InvoiceUpdateOneWithoutReviewsNestedInput
  }

  export type ReviewUncheckedUpdateWithoutFreelancerInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    reviewerId?: StringFieldUpdateOperationsInput | string
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewUncheckedUpdateManyWithoutFreelancerInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    reviewerId?: StringFieldUpdateOperationsInput | string
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    message?: NullableStringFieldUpdateOperationsInput | string | null
    read?: BoolFieldUpdateOperationsInput | boolean
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneWithoutNotificationsNestedInput
  }

  export type NotificationUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    message?: NullableStringFieldUpdateOperationsInput | string | null
    read?: BoolFieldUpdateOperationsInput | boolean
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    message?: NullableStringFieldUpdateOperationsInput | string | null
    read?: BoolFieldUpdateOperationsInput | boolean
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FreelancerApplicationUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FreelancerApplicationUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FreelancerApplicationUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BidsCreateManyOrderInput = {
    id?: string
    freelancerId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: $Enums.OrderStatus
  }

  export type AssignmentCreateManyOrderInput = {
    id?: string
    freelancerId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: $Enums.OrderStatus
  }

  export type SubmittedJobsCreateManyOrderInput = {
    id?: string
    freelancerId: string
    file_Path: string
    file_mimeType: string
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: $Enums.OrderStatus
  }

  export type CancelledJobsCreateManyOrderInput = {
    id?: string
    freelancerId: string
    attachments?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    status?: $Enums.OrderStatus
  }

  export type FinesCreateManyOrderInput = {
    id?: string
    freelancerId: string
    amount: number
    reason?: string | null
    invoiceId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReviewCreateManyOrderInput = {
    id?: string
    reviewerId: string
    freelancerId: string
    rating?: number | null
    comment?: string | null
    invoiceId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type NotificationCreateManyOrderInput = {
    id?: string
    userId: string
    title?: string | null
    message?: string | null
    read?: boolean
    type: $Enums.NotificationType
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BidsUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    freelancer?: UserUpdateOneRequiredWithoutBidsNestedInput
  }

  export type BidsUncheckedUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    freelancerId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
  }

  export type BidsUncheckedUpdateManyWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    freelancerId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
  }

  export type AssignmentUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    freelancer?: UserUpdateOneRequiredWithoutAssignmentsNestedInput
  }

  export type AssignmentUncheckedUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    freelancerId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
  }

  export type AssignmentUncheckedUpdateManyWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    freelancerId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
  }

  export type SubmittedJobsUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    file_Path?: StringFieldUpdateOperationsInput | string
    file_mimeType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    freelancer?: UserUpdateOneRequiredWithoutSubmittedJobsNestedInput
  }

  export type SubmittedJobsUncheckedUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    freelancerId?: StringFieldUpdateOperationsInput | string
    file_Path?: StringFieldUpdateOperationsInput | string
    file_mimeType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
  }

  export type SubmittedJobsUncheckedUpdateManyWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    freelancerId?: StringFieldUpdateOperationsInput | string
    file_Path?: StringFieldUpdateOperationsInput | string
    file_mimeType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
  }

  export type CancelledJobsUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    attachments?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    freelancer?: UserUpdateOneWithoutCancelledJobsNestedInput
  }

  export type CancelledJobsUncheckedUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    freelancerId?: StringFieldUpdateOperationsInput | string
    attachments?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
  }

  export type CancelledJobsUncheckedUpdateManyWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    freelancerId?: StringFieldUpdateOperationsInput | string
    attachments?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
  }

  export type FinesUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    freelancer?: UserUpdateOneRequiredWithoutFinesNestedInput
    invoice?: InvoiceUpdateOneWithoutFinesNestedInput
  }

  export type FinesUncheckedUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    freelancerId?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FinesUncheckedUpdateManyWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    freelancerId?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewer?: UserUpdateOneRequiredWithoutReviewsNestedInput
    freelancer?: UserUpdateOneRequiredWithoutReviewedNestedInput
    invoice?: InvoiceUpdateOneWithoutReviewsNestedInput
  }

  export type ReviewUncheckedUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    reviewerId?: StringFieldUpdateOperationsInput | string
    freelancerId?: StringFieldUpdateOperationsInput | string
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewUncheckedUpdateManyWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    reviewerId?: StringFieldUpdateOperationsInput | string
    freelancerId?: StringFieldUpdateOperationsInput | string
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    invoiceId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    message?: NullableStringFieldUpdateOperationsInput | string | null
    read?: BoolFieldUpdateOperationsInput | boolean
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutNotificationsNestedInput
  }

  export type NotificationUncheckedUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    message?: NullableStringFieldUpdateOperationsInput | string | null
    read?: BoolFieldUpdateOperationsInput | boolean
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationUncheckedUpdateManyWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    message?: NullableStringFieldUpdateOperationsInput | string | null
    read?: BoolFieldUpdateOperationsInput | boolean
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderCreateManyInvoiceInput = {
    id?: string
    orderId: string
    topic: string
    category?: string | null
    service?: string | null
    sources?: string | null
    citation?: string | null
    pages?: Decimal | DecimalJsLike | number | string | null
    cpp?: number
    amount?: number
    deadline: Date | string
    duration: string
    instructions: string
    attachments?: OrderCreateattachmentsInput | string[]
    additionalNotes?: string | null
    status?: $Enums.OrderStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    freelancerId?: string | null
  }

  export type PaymentCreateManyInvoiceInput = {
    id?: string
    paymentRef: string
    amount: number
    modeOfPayment: $Enums.ModeOfPayment
    createdAt?: Date | string
    updatedAt?: Date | string
    userId: string
  }

  export type FinesCreateManyInvoiceInput = {
    id?: string
    orderId: string
    freelancerId: string
    amount: number
    reason?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReviewCreateManyInvoiceInput = {
    id?: string
    orderId: string
    reviewerId: string
    freelancerId: string
    rating?: number | null
    comment?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderUpdateWithoutInvoiceInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    topic?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    service?: NullableStringFieldUpdateOperationsInput | string | null
    sources?: NullableStringFieldUpdateOperationsInput | string | null
    citation?: NullableStringFieldUpdateOperationsInput | string | null
    pages?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cpp?: IntFieldUpdateOperationsInput | number
    amount?: IntFieldUpdateOperationsInput | number
    deadline?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: StringFieldUpdateOperationsInput | string
    instructions?: StringFieldUpdateOperationsInput | string
    attachments?: OrderUpdateattachmentsInput | string[]
    additionalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    freelancer?: UserUpdateOneWithoutOrdersNestedInput
    bids?: BidsUpdateManyWithoutOrderNestedInput
    assignments?: AssignmentUpdateManyWithoutOrderNestedInput
    SubmittedJobs?: SubmittedJobsUpdateManyWithoutOrderNestedInput
    cancelledJobs?: CancelledJobsUpdateManyWithoutOrderNestedInput
    fines?: FinesUpdateManyWithoutOrderNestedInput
    reviews?: ReviewUpdateManyWithoutOrderNestedInput
    notifications?: NotificationUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutInvoiceInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    topic?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    service?: NullableStringFieldUpdateOperationsInput | string | null
    sources?: NullableStringFieldUpdateOperationsInput | string | null
    citation?: NullableStringFieldUpdateOperationsInput | string | null
    pages?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cpp?: IntFieldUpdateOperationsInput | number
    amount?: IntFieldUpdateOperationsInput | number
    deadline?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: StringFieldUpdateOperationsInput | string
    instructions?: StringFieldUpdateOperationsInput | string
    attachments?: OrderUpdateattachmentsInput | string[]
    additionalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    freelancerId?: NullableStringFieldUpdateOperationsInput | string | null
    bids?: BidsUncheckedUpdateManyWithoutOrderNestedInput
    assignments?: AssignmentUncheckedUpdateManyWithoutOrderNestedInput
    SubmittedJobs?: SubmittedJobsUncheckedUpdateManyWithoutOrderNestedInput
    cancelledJobs?: CancelledJobsUncheckedUpdateManyWithoutOrderNestedInput
    fines?: FinesUncheckedUpdateManyWithoutOrderNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutOrderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutInvoiceInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    topic?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    service?: NullableStringFieldUpdateOperationsInput | string | null
    sources?: NullableStringFieldUpdateOperationsInput | string | null
    citation?: NullableStringFieldUpdateOperationsInput | string | null
    pages?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cpp?: IntFieldUpdateOperationsInput | number
    amount?: IntFieldUpdateOperationsInput | number
    deadline?: DateTimeFieldUpdateOperationsInput | Date | string
    duration?: StringFieldUpdateOperationsInput | string
    instructions?: StringFieldUpdateOperationsInput | string
    attachments?: OrderUpdateattachmentsInput | string[]
    additionalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    freelancerId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PaymentUpdateWithoutInvoiceInput = {
    id?: StringFieldUpdateOperationsInput | string
    paymentRef?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    modeOfPayment?: EnumModeOfPaymentFieldUpdateOperationsInput | $Enums.ModeOfPayment
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutPaymentsNestedInput
  }

  export type PaymentUncheckedUpdateWithoutInvoiceInput = {
    id?: StringFieldUpdateOperationsInput | string
    paymentRef?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    modeOfPayment?: EnumModeOfPaymentFieldUpdateOperationsInput | $Enums.ModeOfPayment
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type PaymentUncheckedUpdateManyWithoutInvoiceInput = {
    id?: StringFieldUpdateOperationsInput | string
    paymentRef?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    modeOfPayment?: EnumModeOfPaymentFieldUpdateOperationsInput | $Enums.ModeOfPayment
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type FinesUpdateWithoutInvoiceInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneRequiredWithoutFinesNestedInput
    freelancer?: UserUpdateOneRequiredWithoutFinesNestedInput
  }

  export type FinesUncheckedUpdateWithoutInvoiceInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    freelancerId?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FinesUncheckedUpdateManyWithoutInvoiceInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    freelancerId?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewUpdateWithoutInvoiceInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneRequiredWithoutReviewsNestedInput
    reviewer?: UserUpdateOneRequiredWithoutReviewsNestedInput
    freelancer?: UserUpdateOneRequiredWithoutReviewedNestedInput
  }

  export type ReviewUncheckedUpdateWithoutInvoiceInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    reviewerId?: StringFieldUpdateOperationsInput | string
    freelancerId?: StringFieldUpdateOperationsInput | string
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewUncheckedUpdateManyWithoutInvoiceInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    reviewerId?: StringFieldUpdateOperationsInput | string
    freelancerId?: StringFieldUpdateOperationsInput | string
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use UserCountOutputTypeDefaultArgs instead
     */
    export type UserCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use OrderCountOutputTypeDefaultArgs instead
     */
    export type OrderCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = OrderCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use InvoiceCountOutputTypeDefaultArgs instead
     */
    export type InvoiceCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = InvoiceCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserDefaultArgs instead
     */
    export type UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FreelancerApplicationDefaultArgs instead
     */
    export type FreelancerApplicationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = FreelancerApplicationDefaultArgs<ExtArgs>
    /**
     * @deprecated Use OrderDefaultArgs instead
     */
    export type OrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = OrderDefaultArgs<ExtArgs>
    /**
     * @deprecated Use BidsDefaultArgs instead
     */
    export type BidsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = BidsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AssignmentDefaultArgs instead
     */
    export type AssignmentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AssignmentDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SubmittedJobsDefaultArgs instead
     */
    export type SubmittedJobsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SubmittedJobsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CancelledJobsDefaultArgs instead
     */
    export type CancelledJobsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CancelledJobsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use InvoiceDefaultArgs instead
     */
    export type InvoiceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = InvoiceDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PaymentDefaultArgs instead
     */
    export type PaymentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PaymentDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FinesDefaultArgs instead
     */
    export type FinesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = FinesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ReviewDefaultArgs instead
     */
    export type ReviewArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ReviewDefaultArgs<ExtArgs>
    /**
     * @deprecated Use NotificationDefaultArgs instead
     */
    export type NotificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = NotificationDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}